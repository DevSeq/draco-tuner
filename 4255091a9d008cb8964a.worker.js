!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/draco-tuner/",n(n.s=77)}([function(e,t,n){!function(e){"use strict";function t(e,t){return void 0===t&&(t=1),null==e}function n(e){throw void 0===e&&(e=1),new Error("Argument "+e+" is empty.")}function i(e){throw void 0===e&&(e=1),new Error("Argument "+e+' is invalid, it should be an action-creator instance from "typesafe-actions"')}function r(e){return"string"!=typeof e&&"symbol"!=typeof e}function o(e){throw void 0===e&&(e=1),new Error("Argument "+e+" is invalid, it should be an action type of type: string | symbol")}function a(e,t){if(null==e)throw new Error("Argument contains array with empty element at index "+t);if("string"!=typeof e&&"symbol"!=typeof e)throw new Error("Argument contains array with invalid element at index "+t+", it should be of type: string | symbol")}function s(e,t){if(null==e)throw new Error("Argument contains array with empty element at index "+t);if(null==e.getType)throw new Error("Argument contains array with invalid element at index "+t+', it should be an action-creator instance from "typesafe-actions"')}function l(e,o,a,s){return t(e)&&n(1),r(e)&&i(1),{type:e,payload:o,meta:a,error:s}}function c(e,i){t(e)&&n(1),r(e)&&o(1);var a=null!=i?i(e):function(){return{type:e}};return Object.assign(a,{getType:function(){return e},toString:function(){return e}})}e.action=l,e.createAction=function(e,t){var n=null==t?function(){return l(e)}:t(l.bind(null,e));return Object.assign(n,{getType:function(){return e},toString:function(){return e}})},e.createStandardAction=function(e){return t(e)&&n(1),r(e)&&o(1),Object.assign(function(){return c(e,function(e){return function(t,n){return{type:e,payload:t,meta:n}}})},{map:function(t){return c(e,function(e){return function(n,i){return Object.assign(t(n,i),{type:e})}})}})},e.createCustomAction=c,e.createAsyncAction=function(e,t,n){return[e,t,n].forEach(a),Object.assign(function(){return{request:c(e,function(e){return function(t){return{type:e,payload:t}}}),success:c(t,function(e){return function(t){return{type:e,payload:t}}}),failure:c(n,function(e){return function(t){return{type:e,payload:t}}})}})},e.getType=function(e){var r;return t(e)&&n(1),"function"==typeof(r=e)&&"getType"in r||i(1),e.getType()},e.isOfType=function(e,i){t(e)&&n(1);var r=Array.isArray(e)?e:[e];r.forEach(a);var o=function(e){return r.includes(e.type)};return void 0===i?o:o(i)},e.isActionOf=function(e,i){t(e)&&n(1);var r=Array.isArray(e)?e:[e];r.forEach(s);var o=function(e){return r.some(function(t){return e.type===t.getType()})};return void 0===i?o:o(i)},e.createActionDeprecated=function(e,t){var n;if(null!=t){if("function"!=typeof t)throw new Error("second argument is not a function");n=t}else n=function(){return{type:e}};if(null==e)throw new Error("first argument is missing");if("string"!=typeof e&&"symbol"!=typeof e)throw new Error("first argument should be type of: string | symbol");return n},Object.defineProperty(e,"__esModule",{value:!0})}(t)},function(e,t,n){(function(e,i){var r;
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */(function(){var o,a=200,s="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",l="Expected a function",c="__lodash_hash_undefined__",d=500,u="__lodash_placeholder__",f=1,h=2,p=4,m=1,g=2,y=1,_=2,v=4,b=8,w=16,x=32,E=64,k=128,S=256,T=512,D=30,A="...",P=800,O=16,$=1,C=2,F=1/0,j=9007199254740991,I=1.7976931348623157e308,M=NaN,z=4294967295,N=z-1,U=z>>>1,R=[["ary",k],["bind",y],["bindKey",_],["curry",b],["curryRight",w],["flip",T],["partial",x],["partialRight",E],["rearg",S]],L="[object Arguments]",q="[object Array]",B="[object AsyncFunction]",V="[object Boolean]",W="[object Date]",Y="[object DOMException]",H="[object Error]",J="[object Function]",G="[object GeneratorFunction]",X="[object Map]",Q="[object Number]",K="[object Null]",Z="[object Object]",ee="[object Proxy]",te="[object RegExp]",ne="[object Set]",ie="[object String]",re="[object Symbol]",oe="[object Undefined]",ae="[object WeakMap]",se="[object WeakSet]",le="[object ArrayBuffer]",ce="[object DataView]",de="[object Float32Array]",ue="[object Float64Array]",fe="[object Int8Array]",he="[object Int16Array]",pe="[object Int32Array]",me="[object Uint8Array]",ge="[object Uint8ClampedArray]",ye="[object Uint16Array]",_e="[object Uint32Array]",ve=/\b__p \+= '';/g,be=/\b(__p \+=) '' \+/g,we=/(__e\(.*?\)|\b__t\)) \+\n'';/g,xe=/&(?:amp|lt|gt|quot|#39);/g,Ee=/[&<>"']/g,ke=RegExp(xe.source),Se=RegExp(Ee.source),Te=/<%-([\s\S]+?)%>/g,De=/<%([\s\S]+?)%>/g,Ae=/<%=([\s\S]+?)%>/g,Pe=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Oe=/^\w*$/,$e=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Ce=/[\\^$.*+?()[\]{}|]/g,Fe=RegExp(Ce.source),je=/^\s+|\s+$/g,Ie=/^\s+/,Me=/\s+$/,ze=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Ne=/\{\n\/\* \[wrapped with (.+)\] \*/,Ue=/,? & /,Re=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Le=/\\(\\)?/g,qe=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Be=/\w*$/,Ve=/^[-+]0x[0-9a-f]+$/i,We=/^0b[01]+$/i,Ye=/^\[object .+?Constructor\]$/,He=/^0o[0-7]+$/i,Je=/^(?:0|[1-9]\d*)$/,Ge=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Xe=/($^)/,Qe=/['\n\r\u2028\u2029\\]/g,Ke="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Ze="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",et="[\\ud800-\\udfff]",tt="["+Ze+"]",nt="["+Ke+"]",it="\\d+",rt="[\\u2700-\\u27bf]",ot="[a-z\\xdf-\\xf6\\xf8-\\xff]",at="[^\\ud800-\\udfff"+Ze+it+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",st="\\ud83c[\\udffb-\\udfff]",lt="[^\\ud800-\\udfff]",ct="(?:\\ud83c[\\udde6-\\uddff]){2}",dt="[\\ud800-\\udbff][\\udc00-\\udfff]",ut="[A-Z\\xc0-\\xd6\\xd8-\\xde]",ft="(?:"+ot+"|"+at+")",ht="(?:"+ut+"|"+at+")",pt="(?:"+nt+"|"+st+")"+"?",mt="[\\ufe0e\\ufe0f]?"+pt+("(?:\\u200d(?:"+[lt,ct,dt].join("|")+")[\\ufe0e\\ufe0f]?"+pt+")*"),gt="(?:"+[rt,ct,dt].join("|")+")"+mt,yt="(?:"+[lt+nt+"?",nt,ct,dt,et].join("|")+")",_t=RegExp("['’]","g"),vt=RegExp(nt,"g"),bt=RegExp(st+"(?="+st+")|"+yt+mt,"g"),wt=RegExp([ut+"?"+ot+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[tt,ut,"$"].join("|")+")",ht+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[tt,ut+ft,"$"].join("|")+")",ut+"?"+ft+"+(?:['’](?:d|ll|m|re|s|t|ve))?",ut+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",it,gt].join("|"),"g"),xt=RegExp("[\\u200d\\ud800-\\udfff"+Ke+"\\ufe0e\\ufe0f]"),Et=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,kt=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],St=-1,Tt={};Tt[de]=Tt[ue]=Tt[fe]=Tt[he]=Tt[pe]=Tt[me]=Tt[ge]=Tt[ye]=Tt[_e]=!0,Tt[L]=Tt[q]=Tt[le]=Tt[V]=Tt[ce]=Tt[W]=Tt[H]=Tt[J]=Tt[X]=Tt[Q]=Tt[Z]=Tt[te]=Tt[ne]=Tt[ie]=Tt[ae]=!1;var Dt={};Dt[L]=Dt[q]=Dt[le]=Dt[ce]=Dt[V]=Dt[W]=Dt[de]=Dt[ue]=Dt[fe]=Dt[he]=Dt[pe]=Dt[X]=Dt[Q]=Dt[Z]=Dt[te]=Dt[ne]=Dt[ie]=Dt[re]=Dt[me]=Dt[ge]=Dt[ye]=Dt[_e]=!0,Dt[H]=Dt[J]=Dt[ae]=!1;var At={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Pt=parseFloat,Ot=parseInt,$t="object"==typeof e&&e&&e.Object===Object&&e,Ct="object"==typeof self&&self&&self.Object===Object&&self,Ft=$t||Ct||Function("return this")(),jt="object"==typeof t&&t&&!t.nodeType&&t,It=jt&&"object"==typeof i&&i&&!i.nodeType&&i,Mt=It&&It.exports===jt,zt=Mt&&$t.process,Nt=function(){try{var e=It&&It.require&&It.require("util").types;return e||zt&&zt.binding&&zt.binding("util")}catch(e){}}(),Ut=Nt&&Nt.isArrayBuffer,Rt=Nt&&Nt.isDate,Lt=Nt&&Nt.isMap,qt=Nt&&Nt.isRegExp,Bt=Nt&&Nt.isSet,Vt=Nt&&Nt.isTypedArray;function Wt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function Yt(e,t,n,i){for(var r=-1,o=null==e?0:e.length;++r<o;){var a=e[r];t(i,a,n(a),e)}return i}function Ht(e,t){for(var n=-1,i=null==e?0:e.length;++n<i&&!1!==t(e[n],n,e););return e}function Jt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function Gt(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(!t(e[n],n,e))return!1;return!0}function Xt(e,t){for(var n=-1,i=null==e?0:e.length,r=0,o=[];++n<i;){var a=e[n];t(a,n,e)&&(o[r++]=a)}return o}function Qt(e,t){return!!(null==e?0:e.length)&&ln(e,t,0)>-1}function Kt(e,t,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(t,e[i]))return!0;return!1}function Zt(e,t){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}function en(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}function tn(e,t,n,i){var r=-1,o=null==e?0:e.length;for(i&&o&&(n=e[++r]);++r<o;)n=t(n,e[r],r,e);return n}function nn(e,t,n,i){var r=null==e?0:e.length;for(i&&r&&(n=e[--r]);r--;)n=t(n,e[r],r,e);return n}function rn(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}var on=fn("length");function an(e,t,n){var i;return n(e,function(e,n,r){if(t(e,n,r))return i=n,!1}),i}function sn(e,t,n,i){for(var r=e.length,o=n+(i?1:-1);i?o--:++o<r;)if(t(e[o],o,e))return o;return-1}function ln(e,t,n){return t==t?function(e,t,n){var i=n-1,r=e.length;for(;++i<r;)if(e[i]===t)return i;return-1}(e,t,n):sn(e,dn,n)}function cn(e,t,n,i){for(var r=n-1,o=e.length;++r<o;)if(i(e[r],t))return r;return-1}function dn(e){return e!=e}function un(e,t){var n=null==e?0:e.length;return n?mn(e,t)/n:M}function fn(e){return function(t){return null==t?o:t[e]}}function hn(e){return function(t){return null==e?o:e[t]}}function pn(e,t,n,i,r){return r(e,function(e,r,o){n=i?(i=!1,e):t(n,e,r,o)}),n}function mn(e,t){for(var n,i=-1,r=e.length;++i<r;){var a=t(e[i]);a!==o&&(n=n===o?a:n+a)}return n}function gn(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}function yn(e){return function(t){return e(t)}}function _n(e,t){return Zt(t,function(t){return e[t]})}function vn(e,t){return e.has(t)}function bn(e,t){for(var n=-1,i=e.length;++n<i&&ln(t,e[n],0)>-1;);return n}function wn(e,t){for(var n=e.length;n--&&ln(t,e[n],0)>-1;);return n}var xn=hn({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),En=hn({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function kn(e){return"\\"+At[e]}function Sn(e){return xt.test(e)}function Tn(e){var t=-1,n=Array(e.size);return e.forEach(function(e,i){n[++t]=[i,e]}),n}function Dn(e,t){return function(n){return e(t(n))}}function An(e,t){for(var n=-1,i=e.length,r=0,o=[];++n<i;){var a=e[n];a!==t&&a!==u||(e[n]=u,o[r++]=n)}return o}function Pn(e){var t=-1,n=Array(e.size);return e.forEach(function(e){n[++t]=e}),n}function On(e){var t=-1,n=Array(e.size);return e.forEach(function(e){n[++t]=[e,e]}),n}function $n(e){return Sn(e)?function(e){var t=bt.lastIndex=0;for(;bt.test(e);)++t;return t}(e):on(e)}function Cn(e){return Sn(e)?function(e){return e.match(bt)||[]}(e):function(e){return e.split("")}(e)}var Fn=hn({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var jn=function e(t){var n=(t=null==t?Ft:jn.defaults(Ft.Object(),t,jn.pick(Ft,kt))).Array,i=t.Date,r=t.Error,Ke=t.Function,Ze=t.Math,et=t.Object,tt=t.RegExp,nt=t.String,it=t.TypeError,rt=n.prototype,ot=Ke.prototype,at=et.prototype,st=t["__core-js_shared__"],lt=ot.toString,ct=at.hasOwnProperty,dt=0,ut=function(){var e=/[^.]+$/.exec(st&&st.keys&&st.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),ft=at.toString,ht=lt.call(et),pt=Ft._,mt=tt("^"+lt.call(ct).replace(Ce,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),gt=Mt?t.Buffer:o,yt=t.Symbol,bt=t.Uint8Array,xt=gt?gt.allocUnsafe:o,At=Dn(et.getPrototypeOf,et),$t=et.create,Ct=at.propertyIsEnumerable,jt=rt.splice,It=yt?yt.isConcatSpreadable:o,zt=yt?yt.iterator:o,Nt=yt?yt.toStringTag:o,on=function(){try{var e=No(et,"defineProperty");return e({},"",{}),e}catch(e){}}(),hn=t.clearTimeout!==Ft.clearTimeout&&t.clearTimeout,In=i&&i.now!==Ft.Date.now&&i.now,Mn=t.setTimeout!==Ft.setTimeout&&t.setTimeout,zn=Ze.ceil,Nn=Ze.floor,Un=et.getOwnPropertySymbols,Rn=gt?gt.isBuffer:o,Ln=t.isFinite,qn=rt.join,Bn=Dn(et.keys,et),Vn=Ze.max,Wn=Ze.min,Yn=i.now,Hn=t.parseInt,Jn=Ze.random,Gn=rt.reverse,Xn=No(t,"DataView"),Qn=No(t,"Map"),Kn=No(t,"Promise"),Zn=No(t,"Set"),ei=No(t,"WeakMap"),ti=No(et,"create"),ni=ei&&new ei,ii={},ri=da(Xn),oi=da(Qn),ai=da(Kn),si=da(Zn),li=da(ei),ci=yt?yt.prototype:o,di=ci?ci.valueOf:o,ui=ci?ci.toString:o;function fi(e){if(Ds(e)&&!gs(e)&&!(e instanceof gi)){if(e instanceof mi)return e;if(ct.call(e,"__wrapped__"))return ua(e)}return new mi(e)}var hi=function(){function e(){}return function(t){if(!Ts(t))return{};if($t)return $t(t);e.prototype=t;var n=new e;return e.prototype=o,n}}();function pi(){}function mi(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=o}function gi(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=z,this.__views__=[]}function yi(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function _i(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function vi(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function bi(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new vi;++t<n;)this.add(e[t])}function wi(e){var t=this.__data__=new _i(e);this.size=t.size}function xi(e,t){var n=gs(e),i=!n&&ms(e),r=!n&&!i&&bs(e),o=!n&&!i&&!r&&Is(e),a=n||i||r||o,s=a?gn(e.length,nt):[],l=s.length;for(var c in e)!t&&!ct.call(e,c)||a&&("length"==c||r&&("offset"==c||"parent"==c)||o&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||Wo(c,l))||s.push(c);return s}function Ei(e){var t=e.length;return t?e[br(0,t-1)]:o}function ki(e,t){return sa(to(e),Fi(t,0,e.length))}function Si(e){return sa(to(e))}function Ti(e,t,n){(n===o||fs(e[t],n))&&(n!==o||t in e)||$i(e,t,n)}function Di(e,t,n){var i=e[t];ct.call(e,t)&&fs(i,n)&&(n!==o||t in e)||$i(e,t,n)}function Ai(e,t){for(var n=e.length;n--;)if(fs(e[n][0],t))return n;return-1}function Pi(e,t,n,i){return Ni(e,function(e,r,o){t(i,e,n(e),o)}),i}function Oi(e,t){return e&&no(t,il(t),e)}function $i(e,t,n){"__proto__"==t&&on?on(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function Ci(e,t){for(var i=-1,r=t.length,a=n(r),s=null==e;++i<r;)a[i]=s?o:Ks(e,t[i]);return a}function Fi(e,t,n){return e==e&&(n!==o&&(e=e<=n?e:n),t!==o&&(e=e>=t?e:t)),e}function ji(e,t,n,i,r,a){var s,l=t&f,c=t&h,d=t&p;if(n&&(s=r?n(e,i,r,a):n(e)),s!==o)return s;if(!Ts(e))return e;var u=gs(e);if(u){if(s=function(e){var t=e.length,n=new e.constructor(t);return t&&"string"==typeof e[0]&&ct.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!l)return to(e,s)}else{var m=Lo(e),g=m==J||m==G;if(bs(e))return Gr(e,l);if(m==Z||m==L||g&&!r){if(s=c||g?{}:Bo(e),!l)return c?function(e,t){return no(e,Ro(e),t)}(e,function(e,t){return e&&no(t,rl(t),e)}(s,e)):function(e,t){return no(e,Uo(e),t)}(e,Oi(s,e))}else{if(!Dt[m])return r?e:{};s=function(e,t,n){var i=e.constructor;switch(t){case le:return Xr(e);case V:case W:return new i(+e);case ce:return function(e,t){var n=t?Xr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case de:case ue:case fe:case he:case pe:case me:case ge:case ye:case _e:return Qr(e,n);case X:return new i;case Q:case ie:return new i(e);case te:return function(e){var t=new e.constructor(e.source,Be.exec(e));return t.lastIndex=e.lastIndex,t}(e);case ne:return new i;case re:return function(e){return di?et(di.call(e)):{}}(e)}}(e,m,l)}}a||(a=new wi);var y=a.get(e);if(y)return y;if(a.set(e,s),Cs(e))return e.forEach(function(i){s.add(ji(i,t,n,i,e,a))}),s;if(As(e))return e.forEach(function(i,r){s.set(r,ji(i,t,n,r,e,a))}),s;var _=u?o:(d?c?$o:Oo:c?rl:il)(e);return Ht(_||e,function(i,r){_&&(i=e[r=i]),Di(s,r,ji(i,t,n,r,e,a))}),s}function Ii(e,t,n){var i=n.length;if(null==e)return!i;for(e=et(e);i--;){var r=n[i],a=t[r],s=e[r];if(s===o&&!(r in e)||!a(s))return!1}return!0}function Mi(e,t,n){if("function"!=typeof e)throw new it(l);return ia(function(){e.apply(o,n)},t)}function zi(e,t,n,i){var r=-1,o=Qt,s=!0,l=e.length,c=[],d=t.length;if(!l)return c;n&&(t=Zt(t,yn(n))),i?(o=Kt,s=!1):t.length>=a&&(o=vn,s=!1,t=new bi(t));e:for(;++r<l;){var u=e[r],f=null==n?u:n(u);if(u=i||0!==u?u:0,s&&f==f){for(var h=d;h--;)if(t[h]===f)continue e;c.push(u)}else o(t,f,i)||c.push(u)}return c}fi.templateSettings={escape:Te,evaluate:De,interpolate:Ae,variable:"",imports:{_:fi}},fi.prototype=pi.prototype,fi.prototype.constructor=fi,mi.prototype=hi(pi.prototype),mi.prototype.constructor=mi,gi.prototype=hi(pi.prototype),gi.prototype.constructor=gi,yi.prototype.clear=function(){this.__data__=ti?ti(null):{},this.size=0},yi.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},yi.prototype.get=function(e){var t=this.__data__;if(ti){var n=t[e];return n===c?o:n}return ct.call(t,e)?t[e]:o},yi.prototype.has=function(e){var t=this.__data__;return ti?t[e]!==o:ct.call(t,e)},yi.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=ti&&t===o?c:t,this},_i.prototype.clear=function(){this.__data__=[],this.size=0},_i.prototype.delete=function(e){var t=this.__data__,n=Ai(t,e);return!(n<0||(n==t.length-1?t.pop():jt.call(t,n,1),--this.size,0))},_i.prototype.get=function(e){var t=this.__data__,n=Ai(t,e);return n<0?o:t[n][1]},_i.prototype.has=function(e){return Ai(this.__data__,e)>-1},_i.prototype.set=function(e,t){var n=this.__data__,i=Ai(n,e);return i<0?(++this.size,n.push([e,t])):n[i][1]=t,this},vi.prototype.clear=function(){this.size=0,this.__data__={hash:new yi,map:new(Qn||_i),string:new yi}},vi.prototype.delete=function(e){var t=Mo(this,e).delete(e);return this.size-=t?1:0,t},vi.prototype.get=function(e){return Mo(this,e).get(e)},vi.prototype.has=function(e){return Mo(this,e).has(e)},vi.prototype.set=function(e,t){var n=Mo(this,e),i=n.size;return n.set(e,t),this.size+=n.size==i?0:1,this},bi.prototype.add=bi.prototype.push=function(e){return this.__data__.set(e,c),this},bi.prototype.has=function(e){return this.__data__.has(e)},wi.prototype.clear=function(){this.__data__=new _i,this.size=0},wi.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},wi.prototype.get=function(e){return this.__data__.get(e)},wi.prototype.has=function(e){return this.__data__.has(e)},wi.prototype.set=function(e,t){var n=this.__data__;if(n instanceof _i){var i=n.__data__;if(!Qn||i.length<a-1)return i.push([e,t]),this.size=++n.size,this;n=this.__data__=new vi(i)}return n.set(e,t),this.size=n.size,this};var Ni=oo(Yi),Ui=oo(Hi,!0);function Ri(e,t){var n=!0;return Ni(e,function(e,i,r){return n=!!t(e,i,r)}),n}function Li(e,t,n){for(var i=-1,r=e.length;++i<r;){var a=e[i],s=t(a);if(null!=s&&(l===o?s==s&&!js(s):n(s,l)))var l=s,c=a}return c}function qi(e,t){var n=[];return Ni(e,function(e,i,r){t(e,i,r)&&n.push(e)}),n}function Bi(e,t,n,i,r){var o=-1,a=e.length;for(n||(n=Vo),r||(r=[]);++o<a;){var s=e[o];t>0&&n(s)?t>1?Bi(s,t-1,n,i,r):en(r,s):i||(r[r.length]=s)}return r}var Vi=ao(),Wi=ao(!0);function Yi(e,t){return e&&Vi(e,t,il)}function Hi(e,t){return e&&Wi(e,t,il)}function Ji(e,t){return Xt(t,function(t){return Es(e[t])})}function Gi(e,t){for(var n=0,i=(t=Wr(t,e)).length;null!=e&&n<i;)e=e[ca(t[n++])];return n&&n==i?e:o}function Xi(e,t,n){var i=t(e);return gs(e)?i:en(i,n(e))}function Qi(e){return null==e?e===o?oe:K:Nt&&Nt in et(e)?function(e){var t=ct.call(e,Nt),n=e[Nt];try{e[Nt]=o;var i=!0}catch(e){}var r=ft.call(e);return i&&(t?e[Nt]=n:delete e[Nt]),r}(e):function(e){return ft.call(e)}(e)}function Ki(e,t){return e>t}function Zi(e,t){return null!=e&&ct.call(e,t)}function er(e,t){return null!=e&&t in et(e)}function tr(e,t,i){for(var r=i?Kt:Qt,a=e[0].length,s=e.length,l=s,c=n(s),d=1/0,u=[];l--;){var f=e[l];l&&t&&(f=Zt(f,yn(t))),d=Wn(f.length,d),c[l]=!i&&(t||a>=120&&f.length>=120)?new bi(l&&f):o}f=e[0];var h=-1,p=c[0];e:for(;++h<a&&u.length<d;){var m=f[h],g=t?t(m):m;if(m=i||0!==m?m:0,!(p?vn(p,g):r(u,g,i))){for(l=s;--l;){var y=c[l];if(!(y?vn(y,g):r(e[l],g,i)))continue e}p&&p.push(g),u.push(m)}}return u}function nr(e,t,n){var i=null==(e=ea(e,t=Wr(t,e)))?e:e[ca(xa(t))];return null==i?o:Wt(i,e,n)}function ir(e){return Ds(e)&&Qi(e)==L}function rr(e,t,n,i,r){return e===t||(null==e||null==t||!Ds(e)&&!Ds(t)?e!=e&&t!=t:function(e,t,n,i,r,a){var s=gs(e),l=gs(t),c=s?q:Lo(e),d=l?q:Lo(t),u=(c=c==L?Z:c)==Z,f=(d=d==L?Z:d)==Z,h=c==d;if(h&&bs(e)){if(!bs(t))return!1;s=!0,u=!1}if(h&&!u)return a||(a=new wi),s||Is(e)?Ao(e,t,n,i,r,a):function(e,t,n,i,r,o,a){switch(n){case ce:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case le:return!(e.byteLength!=t.byteLength||!o(new bt(e),new bt(t)));case V:case W:case Q:return fs(+e,+t);case H:return e.name==t.name&&e.message==t.message;case te:case ie:return e==t+"";case X:var s=Tn;case ne:var l=i&m;if(s||(s=Pn),e.size!=t.size&&!l)return!1;var c=a.get(e);if(c)return c==t;i|=g,a.set(e,t);var d=Ao(s(e),s(t),i,r,o,a);return a.delete(e),d;case re:if(di)return di.call(e)==di.call(t)}return!1}(e,t,c,n,i,r,a);if(!(n&m)){var p=u&&ct.call(e,"__wrapped__"),y=f&&ct.call(t,"__wrapped__");if(p||y){var _=p?e.value():e,v=y?t.value():t;return a||(a=new wi),r(_,v,n,i,a)}}return!!h&&(a||(a=new wi),function(e,t,n,i,r,a){var s=n&m,l=Oo(e),c=l.length,d=Oo(t).length;if(c!=d&&!s)return!1;for(var u=c;u--;){var f=l[u];if(!(s?f in t:ct.call(t,f)))return!1}var h=a.get(e);if(h&&a.get(t))return h==t;var p=!0;a.set(e,t),a.set(t,e);for(var g=s;++u<c;){f=l[u];var y=e[f],_=t[f];if(i)var v=s?i(_,y,f,t,e,a):i(y,_,f,e,t,a);if(!(v===o?y===_||r(y,_,n,i,a):v)){p=!1;break}g||(g="constructor"==f)}if(p&&!g){var b=e.constructor,w=t.constructor;b!=w&&"constructor"in e&&"constructor"in t&&!("function"==typeof b&&b instanceof b&&"function"==typeof w&&w instanceof w)&&(p=!1)}return a.delete(e),a.delete(t),p}(e,t,n,i,r,a))}(e,t,n,i,rr,r))}function or(e,t,n,i){var r=n.length,a=r,s=!i;if(null==e)return!a;for(e=et(e);r--;){var l=n[r];if(s&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++r<a;){var c=(l=n[r])[0],d=e[c],u=l[1];if(s&&l[2]){if(d===o&&!(c in e))return!1}else{var f=new wi;if(i)var h=i(d,u,c,e,t,f);if(!(h===o?rr(u,d,m|g,i,f):h))return!1}}return!0}function ar(e){return!(!Ts(e)||function(e){return!!ut&&ut in e}(e))&&(Es(e)?mt:Ye).test(da(e))}function sr(e){return"function"==typeof e?e:null==e?Pl:"object"==typeof e?gs(e)?hr(e[0],e[1]):fr(e):Nl(e)}function lr(e){if(!Xo(e))return Bn(e);var t=[];for(var n in et(e))ct.call(e,n)&&"constructor"!=n&&t.push(n);return t}function cr(e){if(!Ts(e))return function(e){var t=[];if(null!=e)for(var n in et(e))t.push(n);return t}(e);var t=Xo(e),n=[];for(var i in e)("constructor"!=i||!t&&ct.call(e,i))&&n.push(i);return n}function dr(e,t){return e<t}function ur(e,t){var i=-1,r=_s(e)?n(e.length):[];return Ni(e,function(e,n,o){r[++i]=t(e,n,o)}),r}function fr(e){var t=zo(e);return 1==t.length&&t[0][2]?Ko(t[0][0],t[0][1]):function(n){return n===e||or(n,e,t)}}function hr(e,t){return Ho(e)&&Qo(t)?Ko(ca(e),t):function(n){var i=Ks(n,e);return i===o&&i===t?Zs(n,e):rr(t,i,m|g)}}function pr(e,t,n,i,r){e!==t&&Vi(t,function(a,s){if(Ts(a))r||(r=new wi),function(e,t,n,i,r,a,s){var l=ta(e,n),c=ta(t,n),d=s.get(c);if(d)Ti(e,n,d);else{var u=a?a(l,c,n+"",e,t,s):o,f=u===o;if(f){var h=gs(c),p=!h&&bs(c),m=!h&&!p&&Is(c);u=c,h||p||m?gs(l)?u=l:vs(l)?u=to(l):p?(f=!1,u=Gr(c,!0)):m?(f=!1,u=Qr(c,!0)):u=[]:Os(c)||ms(c)?(u=l,ms(l)?u=Bs(l):Ts(l)&&!Es(l)||(u=Bo(c))):f=!1}f&&(s.set(c,u),r(u,c,i,a,s),s.delete(c)),Ti(e,n,u)}}(e,t,s,n,pr,i,r);else{var l=i?i(ta(e,s),a,s+"",e,t,r):o;l===o&&(l=a),Ti(e,s,l)}},rl)}function mr(e,t){var n=e.length;if(n)return Wo(t+=t<0?n:0,n)?e[t]:o}function gr(e,t,n){var i=-1;return t=Zt(t.length?t:[Pl],yn(Io())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(ur(e,function(e,n,r){return{criteria:Zt(t,function(t){return t(e)}),index:++i,value:e}}),function(e,t){return function(e,t,n){for(var i=-1,r=e.criteria,o=t.criteria,a=r.length,s=n.length;++i<a;){var l=Kr(r[i],o[i]);if(l){if(i>=s)return l;var c=n[i];return l*("desc"==c?-1:1)}}return e.index-t.index}(e,t,n)})}function yr(e,t,n){for(var i=-1,r=t.length,o={};++i<r;){var a=t[i],s=Gi(e,a);n(s,a)&&Sr(o,Wr(a,e),s)}return o}function _r(e,t,n,i){var r=i?cn:ln,o=-1,a=t.length,s=e;for(e===t&&(t=to(t)),n&&(s=Zt(e,yn(n)));++o<a;)for(var l=0,c=t[o],d=n?n(c):c;(l=r(s,d,l,i))>-1;)s!==e&&jt.call(s,l,1),jt.call(e,l,1);return e}function vr(e,t){for(var n=e?t.length:0,i=n-1;n--;){var r=t[n];if(n==i||r!==o){var o=r;Wo(r)?jt.call(e,r,1):zr(e,r)}}return e}function br(e,t){return e+Nn(Jn()*(t-e+1))}function wr(e,t){var n="";if(!e||t<1||t>j)return n;do{t%2&&(n+=e),(t=Nn(t/2))&&(e+=e)}while(t);return n}function xr(e,t){return ra(Zo(e,t,Pl),e+"")}function Er(e){return Ei(fl(e))}function kr(e,t){var n=fl(e);return sa(n,Fi(t,0,n.length))}function Sr(e,t,n,i){if(!Ts(e))return e;for(var r=-1,a=(t=Wr(t,e)).length,s=a-1,l=e;null!=l&&++r<a;){var c=ca(t[r]),d=n;if(r!=s){var u=l[c];(d=i?i(u,c,l):o)===o&&(d=Ts(u)?u:Wo(t[r+1])?[]:{})}Di(l,c,d),l=l[c]}return e}var Tr=ni?function(e,t){return ni.set(e,t),e}:Pl,Dr=on?function(e,t){return on(e,"toString",{configurable:!0,enumerable:!1,value:Tl(t),writable:!0})}:Pl;function Ar(e){return sa(fl(e))}function Pr(e,t,i){var r=-1,o=e.length;t<0&&(t=-t>o?0:o+t),(i=i>o?o:i)<0&&(i+=o),o=t>i?0:i-t>>>0,t>>>=0;for(var a=n(o);++r<o;)a[r]=e[r+t];return a}function Or(e,t){var n;return Ni(e,function(e,i,r){return!(n=t(e,i,r))}),!!n}function $r(e,t,n){var i=0,r=null==e?i:e.length;if("number"==typeof t&&t==t&&r<=U){for(;i<r;){var o=i+r>>>1,a=e[o];null!==a&&!js(a)&&(n?a<=t:a<t)?i=o+1:r=o}return r}return Cr(e,t,Pl,n)}function Cr(e,t,n,i){t=n(t);for(var r=0,a=null==e?0:e.length,s=t!=t,l=null===t,c=js(t),d=t===o;r<a;){var u=Nn((r+a)/2),f=n(e[u]),h=f!==o,p=null===f,m=f==f,g=js(f);if(s)var y=i||m;else y=d?m&&(i||h):l?m&&h&&(i||!p):c?m&&h&&!p&&(i||!g):!p&&!g&&(i?f<=t:f<t);y?r=u+1:a=u}return Wn(a,N)}function Fr(e,t){for(var n=-1,i=e.length,r=0,o=[];++n<i;){var a=e[n],s=t?t(a):a;if(!n||!fs(s,l)){var l=s;o[r++]=0===a?0:a}}return o}function jr(e){return"number"==typeof e?e:js(e)?M:+e}function Ir(e){if("string"==typeof e)return e;if(gs(e))return Zt(e,Ir)+"";if(js(e))return ui?ui.call(e):"";var t=e+"";return"0"==t&&1/e==-F?"-0":t}function Mr(e,t,n){var i=-1,r=Qt,o=e.length,s=!0,l=[],c=l;if(n)s=!1,r=Kt;else if(o>=a){var d=t?null:xo(e);if(d)return Pn(d);s=!1,r=vn,c=new bi}else c=t?[]:l;e:for(;++i<o;){var u=e[i],f=t?t(u):u;if(u=n||0!==u?u:0,s&&f==f){for(var h=c.length;h--;)if(c[h]===f)continue e;t&&c.push(f),l.push(u)}else r(c,f,n)||(c!==l&&c.push(f),l.push(u))}return l}function zr(e,t){return null==(e=ea(e,t=Wr(t,e)))||delete e[ca(xa(t))]}function Nr(e,t,n,i){return Sr(e,t,n(Gi(e,t)),i)}function Ur(e,t,n,i){for(var r=e.length,o=i?r:-1;(i?o--:++o<r)&&t(e[o],o,e););return n?Pr(e,i?0:o,i?o+1:r):Pr(e,i?o+1:0,i?r:o)}function Rr(e,t){var n=e;return n instanceof gi&&(n=n.value()),tn(t,function(e,t){return t.func.apply(t.thisArg,en([e],t.args))},n)}function Lr(e,t,i){var r=e.length;if(r<2)return r?Mr(e[0]):[];for(var o=-1,a=n(r);++o<r;)for(var s=e[o],l=-1;++l<r;)l!=o&&(a[o]=zi(a[o]||s,e[l],t,i));return Mr(Bi(a,1),t,i)}function qr(e,t,n){for(var i=-1,r=e.length,a=t.length,s={};++i<r;){var l=i<a?t[i]:o;n(s,e[i],l)}return s}function Br(e){return vs(e)?e:[]}function Vr(e){return"function"==typeof e?e:Pl}function Wr(e,t){return gs(e)?e:Ho(e,t)?[e]:la(Vs(e))}var Yr=xr;function Hr(e,t,n){var i=e.length;return n=n===o?i:n,!t&&n>=i?e:Pr(e,t,n)}var Jr=hn||function(e){return Ft.clearTimeout(e)};function Gr(e,t){if(t)return e.slice();var n=e.length,i=xt?xt(n):new e.constructor(n);return e.copy(i),i}function Xr(e){var t=new e.constructor(e.byteLength);return new bt(t).set(new bt(e)),t}function Qr(e,t){var n=t?Xr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function Kr(e,t){if(e!==t){var n=e!==o,i=null===e,r=e==e,a=js(e),s=t!==o,l=null===t,c=t==t,d=js(t);if(!l&&!d&&!a&&e>t||a&&s&&c&&!l&&!d||i&&s&&c||!n&&c||!r)return 1;if(!i&&!a&&!d&&e<t||d&&n&&r&&!i&&!a||l&&n&&r||!s&&r||!c)return-1}return 0}function Zr(e,t,i,r){for(var o=-1,a=e.length,s=i.length,l=-1,c=t.length,d=Vn(a-s,0),u=n(c+d),f=!r;++l<c;)u[l]=t[l];for(;++o<s;)(f||o<a)&&(u[i[o]]=e[o]);for(;d--;)u[l++]=e[o++];return u}function eo(e,t,i,r){for(var o=-1,a=e.length,s=-1,l=i.length,c=-1,d=t.length,u=Vn(a-l,0),f=n(u+d),h=!r;++o<u;)f[o]=e[o];for(var p=o;++c<d;)f[p+c]=t[c];for(;++s<l;)(h||o<a)&&(f[p+i[s]]=e[o++]);return f}function to(e,t){var i=-1,r=e.length;for(t||(t=n(r));++i<r;)t[i]=e[i];return t}function no(e,t,n,i){var r=!n;n||(n={});for(var a=-1,s=t.length;++a<s;){var l=t[a],c=i?i(n[l],e[l],l,n,e):o;c===o&&(c=e[l]),r?$i(n,l,c):Di(n,l,c)}return n}function io(e,t){return function(n,i){var r=gs(n)?Yt:Pi,o=t?t():{};return r(n,e,Io(i,2),o)}}function ro(e){return xr(function(t,n){var i=-1,r=n.length,a=r>1?n[r-1]:o,s=r>2?n[2]:o;for(a=e.length>3&&"function"==typeof a?(r--,a):o,s&&Yo(n[0],n[1],s)&&(a=r<3?o:a,r=1),t=et(t);++i<r;){var l=n[i];l&&e(t,l,i,a)}return t})}function oo(e,t){return function(n,i){if(null==n)return n;if(!_s(n))return e(n,i);for(var r=n.length,o=t?r:-1,a=et(n);(t?o--:++o<r)&&!1!==i(a[o],o,a););return n}}function ao(e){return function(t,n,i){for(var r=-1,o=et(t),a=i(t),s=a.length;s--;){var l=a[e?s:++r];if(!1===n(o[l],l,o))break}return t}}function so(e){return function(t){var n=Sn(t=Vs(t))?Cn(t):o,i=n?n[0]:t.charAt(0),r=n?Hr(n,1).join(""):t.slice(1);return i[e]()+r}}function lo(e){return function(t){return tn(El(ml(t).replace(_t,"")),e,"")}}function co(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=hi(e.prototype),i=e.apply(n,t);return Ts(i)?i:n}}function uo(e){return function(t,n,i){var r=et(t);if(!_s(t)){var a=Io(n,3);t=il(t),n=function(e){return a(r[e],e,r)}}var s=e(t,n,i);return s>-1?r[a?t[s]:s]:o}}function fo(e){return Po(function(t){var n=t.length,i=n,r=mi.prototype.thru;for(e&&t.reverse();i--;){var a=t[i];if("function"!=typeof a)throw new it(l);if(r&&!s&&"wrapper"==Fo(a))var s=new mi([],!0)}for(i=s?i:n;++i<n;){var c=Fo(a=t[i]),d="wrapper"==c?Co(a):o;s=d&&Jo(d[0])&&d[1]==(k|b|x|S)&&!d[4].length&&1==d[9]?s[Fo(d[0])].apply(s,d[3]):1==a.length&&Jo(a)?s[c]():s.thru(a)}return function(){var e=arguments,i=e[0];if(s&&1==e.length&&gs(i))return s.plant(i).value();for(var r=0,o=n?t[r].apply(this,e):i;++r<n;)o=t[r].call(this,o);return o}})}function ho(e,t,i,r,a,s,l,c,d,u){var f=t&k,h=t&y,p=t&_,m=t&(b|w),g=t&T,v=p?o:co(e);return function y(){for(var _=arguments.length,b=n(_),w=_;w--;)b[w]=arguments[w];if(m)var x=jo(y),E=function(e,t){for(var n=e.length,i=0;n--;)e[n]===t&&++i;return i}(b,x);if(r&&(b=Zr(b,r,a,m)),s&&(b=eo(b,s,l,m)),_-=E,m&&_<u){var k=An(b,x);return bo(e,t,ho,y.placeholder,i,b,k,c,d,u-_)}var S=h?i:this,T=p?S[e]:e;return _=b.length,c?b=function(e,t){for(var n=e.length,i=Wn(t.length,n),r=to(e);i--;){var a=t[i];e[i]=Wo(a,n)?r[a]:o}return e}(b,c):g&&_>1&&b.reverse(),f&&d<_&&(b.length=d),this&&this!==Ft&&this instanceof y&&(T=v||co(T)),T.apply(S,b)}}function po(e,t){return function(n,i){return function(e,t,n,i){return Yi(e,function(e,r,o){t(i,n(e),r,o)}),i}(n,e,t(i),{})}}function mo(e,t){return function(n,i){var r;if(n===o&&i===o)return t;if(n!==o&&(r=n),i!==o){if(r===o)return i;"string"==typeof n||"string"==typeof i?(n=Ir(n),i=Ir(i)):(n=jr(n),i=jr(i)),r=e(n,i)}return r}}function go(e){return Po(function(t){return t=Zt(t,yn(Io())),xr(function(n){var i=this;return e(t,function(e){return Wt(e,i,n)})})})}function yo(e,t){var n=(t=t===o?" ":Ir(t)).length;if(n<2)return n?wr(t,e):t;var i=wr(t,zn(e/$n(t)));return Sn(t)?Hr(Cn(i),0,e).join(""):i.slice(0,e)}function _o(e){return function(t,i,r){return r&&"number"!=typeof r&&Yo(t,i,r)&&(i=r=o),t=Us(t),i===o?(i=t,t=0):i=Us(i),function(e,t,i,r){for(var o=-1,a=Vn(zn((t-e)/(i||1)),0),s=n(a);a--;)s[r?a:++o]=e,e+=i;return s}(t,i,r=r===o?t<i?1:-1:Us(r),e)}}function vo(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=qs(t),n=qs(n)),e(t,n)}}function bo(e,t,n,i,r,a,s,l,c,d){var u=t&b;t|=u?x:E,(t&=~(u?E:x))&v||(t&=~(y|_));var f=[e,t,r,u?a:o,u?s:o,u?o:a,u?o:s,l,c,d],h=n.apply(o,f);return Jo(e)&&na(h,f),h.placeholder=i,oa(h,e,t)}function wo(e){var t=Ze[e];return function(e,n){if(e=qs(e),n=null==n?0:Wn(Rs(n),292)){var i=(Vs(e)+"e").split("e");return+((i=(Vs(t(i[0]+"e"+(+i[1]+n)))+"e").split("e"))[0]+"e"+(+i[1]-n))}return t(e)}}var xo=Zn&&1/Pn(new Zn([,-0]))[1]==F?function(e){return new Zn(e)}:jl;function Eo(e){return function(t){var n=Lo(t);return n==X?Tn(t):n==ne?On(t):function(e,t){return Zt(t,function(t){return[t,e[t]]})}(t,e(t))}}function ko(e,t,i,r,a,s,c,d){var f=t&_;if(!f&&"function"!=typeof e)throw new it(l);var h=r?r.length:0;if(h||(t&=~(x|E),r=a=o),c=c===o?c:Vn(Rs(c),0),d=d===o?d:Rs(d),h-=a?a.length:0,t&E){var p=r,m=a;r=a=o}var g=f?o:Co(e),T=[e,t,i,r,a,p,m,s,c,d];if(g&&function(e,t){var n=e[1],i=t[1],r=n|i,o=r<(y|_|k),a=i==k&&n==b||i==k&&n==S&&e[7].length<=t[8]||i==(k|S)&&t[7].length<=t[8]&&n==b;if(!o&&!a)return e;i&y&&(e[2]=t[2],r|=n&y?0:v);var s=t[3];if(s){var l=e[3];e[3]=l?Zr(l,s,t[4]):s,e[4]=l?An(e[3],u):t[4]}(s=t[5])&&(l=e[5],e[5]=l?eo(l,s,t[6]):s,e[6]=l?An(e[5],u):t[6]),(s=t[7])&&(e[7]=s),i&k&&(e[8]=null==e[8]?t[8]:Wn(e[8],t[8])),null==e[9]&&(e[9]=t[9]),e[0]=t[0],e[1]=r}(T,g),e=T[0],t=T[1],i=T[2],r=T[3],a=T[4],!(d=T[9]=T[9]===o?f?0:e.length:Vn(T[9]-h,0))&&t&(b|w)&&(t&=~(b|w)),t&&t!=y)D=t==b||t==w?function(e,t,i){var r=co(e);return function a(){for(var s=arguments.length,l=n(s),c=s,d=jo(a);c--;)l[c]=arguments[c];var u=s<3&&l[0]!==d&&l[s-1]!==d?[]:An(l,d);return(s-=u.length)<i?bo(e,t,ho,a.placeholder,o,l,u,o,o,i-s):Wt(this&&this!==Ft&&this instanceof a?r:e,this,l)}}(e,t,d):t!=x&&t!=(y|x)||a.length?ho.apply(o,T):function(e,t,i,r){var o=t&y,a=co(e);return function t(){for(var s=-1,l=arguments.length,c=-1,d=r.length,u=n(d+l),f=this&&this!==Ft&&this instanceof t?a:e;++c<d;)u[c]=r[c];for(;l--;)u[c++]=arguments[++s];return Wt(f,o?i:this,u)}}(e,t,i,r);else var D=function(e,t,n){var i=t&y,r=co(e);return function t(){return(this&&this!==Ft&&this instanceof t?r:e).apply(i?n:this,arguments)}}(e,t,i);return oa((g?Tr:na)(D,T),e,t)}function So(e,t,n,i){return e===o||fs(e,at[n])&&!ct.call(i,n)?t:e}function To(e,t,n,i,r,a){return Ts(e)&&Ts(t)&&(a.set(t,e),pr(e,t,o,To,a),a.delete(t)),e}function Do(e){return Os(e)?o:e}function Ao(e,t,n,i,r,a){var s=n&m,l=e.length,c=t.length;if(l!=c&&!(s&&c>l))return!1;var d=a.get(e);if(d&&a.get(t))return d==t;var u=-1,f=!0,h=n&g?new bi:o;for(a.set(e,t),a.set(t,e);++u<l;){var p=e[u],y=t[u];if(i)var _=s?i(y,p,u,t,e,a):i(p,y,u,e,t,a);if(_!==o){if(_)continue;f=!1;break}if(h){if(!rn(t,function(e,t){if(!vn(h,t)&&(p===e||r(p,e,n,i,a)))return h.push(t)})){f=!1;break}}else if(p!==y&&!r(p,y,n,i,a)){f=!1;break}}return a.delete(e),a.delete(t),f}function Po(e){return ra(Zo(e,o,ya),e+"")}function Oo(e){return Xi(e,il,Uo)}function $o(e){return Xi(e,rl,Ro)}var Co=ni?function(e){return ni.get(e)}:jl;function Fo(e){for(var t=e.name+"",n=ii[t],i=ct.call(ii,t)?n.length:0;i--;){var r=n[i],o=r.func;if(null==o||o==e)return r.name}return t}function jo(e){return(ct.call(fi,"placeholder")?fi:e).placeholder}function Io(){var e=fi.iteratee||Ol;return e=e===Ol?sr:e,arguments.length?e(arguments[0],arguments[1]):e}function Mo(e,t){var n=e.__data__;return function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}(t)?n["string"==typeof t?"string":"hash"]:n.map}function zo(e){for(var t=il(e),n=t.length;n--;){var i=t[n],r=e[i];t[n]=[i,r,Qo(r)]}return t}function No(e,t){var n=function(e,t){return null==e?o:e[t]}(e,t);return ar(n)?n:o}var Uo=Un?function(e){return null==e?[]:(e=et(e),Xt(Un(e),function(t){return Ct.call(e,t)}))}:Ll,Ro=Un?function(e){for(var t=[];e;)en(t,Uo(e)),e=At(e);return t}:Ll,Lo=Qi;function qo(e,t,n){for(var i=-1,r=(t=Wr(t,e)).length,o=!1;++i<r;){var a=ca(t[i]);if(!(o=null!=e&&n(e,a)))break;e=e[a]}return o||++i!=r?o:!!(r=null==e?0:e.length)&&Ss(r)&&Wo(a,r)&&(gs(e)||ms(e))}function Bo(e){return"function"!=typeof e.constructor||Xo(e)?{}:hi(At(e))}function Vo(e){return gs(e)||ms(e)||!!(It&&e&&e[It])}function Wo(e,t){var n=typeof e;return!!(t=null==t?j:t)&&("number"==n||"symbol"!=n&&Je.test(e))&&e>-1&&e%1==0&&e<t}function Yo(e,t,n){if(!Ts(n))return!1;var i=typeof t;return!!("number"==i?_s(n)&&Wo(t,n.length):"string"==i&&t in n)&&fs(n[t],e)}function Ho(e,t){if(gs(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!js(e))||Oe.test(e)||!Pe.test(e)||null!=t&&e in et(t)}function Jo(e){var t=Fo(e),n=fi[t];if("function"!=typeof n||!(t in gi.prototype))return!1;if(e===n)return!0;var i=Co(n);return!!i&&e===i[0]}(Xn&&Lo(new Xn(new ArrayBuffer(1)))!=ce||Qn&&Lo(new Qn)!=X||Kn&&"[object Promise]"!=Lo(Kn.resolve())||Zn&&Lo(new Zn)!=ne||ei&&Lo(new ei)!=ae)&&(Lo=function(e){var t=Qi(e),n=t==Z?e.constructor:o,i=n?da(n):"";if(i)switch(i){case ri:return ce;case oi:return X;case ai:return"[object Promise]";case si:return ne;case li:return ae}return t});var Go=st?Es:ql;function Xo(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||at)}function Qo(e){return e==e&&!Ts(e)}function Ko(e,t){return function(n){return null!=n&&n[e]===t&&(t!==o||e in et(n))}}function Zo(e,t,i){return t=Vn(t===o?e.length-1:t,0),function(){for(var r=arguments,o=-1,a=Vn(r.length-t,0),s=n(a);++o<a;)s[o]=r[t+o];o=-1;for(var l=n(t+1);++o<t;)l[o]=r[o];return l[t]=i(s),Wt(e,this,l)}}function ea(e,t){return t.length<2?e:Gi(e,Pr(t,0,-1))}function ta(e,t){if("__proto__"!=t)return e[t]}var na=aa(Tr),ia=Mn||function(e,t){return Ft.setTimeout(e,t)},ra=aa(Dr);function oa(e,t,n){var i=t+"";return ra(e,function(e,t){var n=t.length;if(!n)return e;var i=n-1;return t[i]=(n>1?"& ":"")+t[i],t=t.join(n>2?", ":" "),e.replace(ze,"{\n/* [wrapped with "+t+"] */\n")}(i,function(e,t){return Ht(R,function(n){var i="_."+n[0];t&n[1]&&!Qt(e,i)&&e.push(i)}),e.sort()}(function(e){var t=e.match(Ne);return t?t[1].split(Ue):[]}(i),n)))}function aa(e){var t=0,n=0;return function(){var i=Yn(),r=O-(i-n);if(n=i,r>0){if(++t>=P)return arguments[0]}else t=0;return e.apply(o,arguments)}}function sa(e,t){var n=-1,i=e.length,r=i-1;for(t=t===o?i:t;++n<t;){var a=br(n,r),s=e[a];e[a]=e[n],e[n]=s}return e.length=t,e}var la=function(e){var t=as(e,function(e){return n.size===d&&n.clear(),e}),n=t.cache;return t}(function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace($e,function(e,n,i,r){t.push(i?r.replace(Le,"$1"):n||e)}),t});function ca(e){if("string"==typeof e||js(e))return e;var t=e+"";return"0"==t&&1/e==-F?"-0":t}function da(e){if(null!=e){try{return lt.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function ua(e){if(e instanceof gi)return e.clone();var t=new mi(e.__wrapped__,e.__chain__);return t.__actions__=to(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var fa=xr(function(e,t){return vs(e)?zi(e,Bi(t,1,vs,!0)):[]}),ha=xr(function(e,t){var n=xa(t);return vs(n)&&(n=o),vs(e)?zi(e,Bi(t,1,vs,!0),Io(n,2)):[]}),pa=xr(function(e,t){var n=xa(t);return vs(n)&&(n=o),vs(e)?zi(e,Bi(t,1,vs,!0),o,n):[]});function ma(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=null==n?0:Rs(n);return r<0&&(r=Vn(i+r,0)),sn(e,Io(t,3),r)}function ga(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=i-1;return n!==o&&(r=Rs(n),r=n<0?Vn(i+r,0):Wn(r,i-1)),sn(e,Io(t,3),r,!0)}function ya(e){return null!=e&&e.length?Bi(e,1):[]}function _a(e){return e&&e.length?e[0]:o}var va=xr(function(e){var t=Zt(e,Br);return t.length&&t[0]===e[0]?tr(t):[]}),ba=xr(function(e){var t=xa(e),n=Zt(e,Br);return t===xa(n)?t=o:n.pop(),n.length&&n[0]===e[0]?tr(n,Io(t,2)):[]}),wa=xr(function(e){var t=xa(e),n=Zt(e,Br);return(t="function"==typeof t?t:o)&&n.pop(),n.length&&n[0]===e[0]?tr(n,o,t):[]});function xa(e){var t=null==e?0:e.length;return t?e[t-1]:o}var Ea=xr(ka);function ka(e,t){return e&&e.length&&t&&t.length?_r(e,t):e}var Sa=Po(function(e,t){var n=null==e?0:e.length,i=Ci(e,t);return vr(e,Zt(t,function(e){return Wo(e,n)?+e:e}).sort(Kr)),i});function Ta(e){return null==e?e:Gn.call(e)}var Da=xr(function(e){return Mr(Bi(e,1,vs,!0))}),Aa=xr(function(e){var t=xa(e);return vs(t)&&(t=o),Mr(Bi(e,1,vs,!0),Io(t,2))}),Pa=xr(function(e){var t=xa(e);return t="function"==typeof t?t:o,Mr(Bi(e,1,vs,!0),o,t)});function Oa(e){if(!e||!e.length)return[];var t=0;return e=Xt(e,function(e){if(vs(e))return t=Vn(e.length,t),!0}),gn(t,function(t){return Zt(e,fn(t))})}function $a(e,t){if(!e||!e.length)return[];var n=Oa(e);return null==t?n:Zt(n,function(e){return Wt(t,o,e)})}var Ca=xr(function(e,t){return vs(e)?zi(e,t):[]}),Fa=xr(function(e){return Lr(Xt(e,vs))}),ja=xr(function(e){var t=xa(e);return vs(t)&&(t=o),Lr(Xt(e,vs),Io(t,2))}),Ia=xr(function(e){var t=xa(e);return t="function"==typeof t?t:o,Lr(Xt(e,vs),o,t)}),Ma=xr(Oa);var za=xr(function(e){var t=e.length,n=t>1?e[t-1]:o;return $a(e,n="function"==typeof n?(e.pop(),n):o)});function Na(e){var t=fi(e);return t.__chain__=!0,t}function Ua(e,t){return t(e)}var Ra=Po(function(e){var t=e.length,n=t?e[0]:0,i=this.__wrapped__,r=function(t){return Ci(t,e)};return!(t>1||this.__actions__.length)&&i instanceof gi&&Wo(n)?((i=i.slice(n,+n+(t?1:0))).__actions__.push({func:Ua,args:[r],thisArg:o}),new mi(i,this.__chain__).thru(function(e){return t&&!e.length&&e.push(o),e})):this.thru(r)});var La=io(function(e,t,n){ct.call(e,n)?++e[n]:$i(e,n,1)});var qa=uo(ma),Ba=uo(ga);function Va(e,t){return(gs(e)?Ht:Ni)(e,Io(t,3))}function Wa(e,t){return(gs(e)?Jt:Ui)(e,Io(t,3))}var Ya=io(function(e,t,n){ct.call(e,n)?e[n].push(t):$i(e,n,[t])});var Ha=xr(function(e,t,i){var r=-1,o="function"==typeof t,a=_s(e)?n(e.length):[];return Ni(e,function(e){a[++r]=o?Wt(t,e,i):nr(e,t,i)}),a}),Ja=io(function(e,t,n){$i(e,n,t)});function Ga(e,t){return(gs(e)?Zt:ur)(e,Io(t,3))}var Xa=io(function(e,t,n){e[n?0:1].push(t)},function(){return[[],[]]});var Qa=xr(function(e,t){if(null==e)return[];var n=t.length;return n>1&&Yo(e,t[0],t[1])?t=[]:n>2&&Yo(t[0],t[1],t[2])&&(t=[t[0]]),gr(e,Bi(t,1),[])}),Ka=In||function(){return Ft.Date.now()};function Za(e,t,n){return t=n?o:t,t=e&&null==t?e.length:t,ko(e,k,o,o,o,o,t)}function es(e,t){var n;if("function"!=typeof t)throw new it(l);return e=Rs(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=o),n}}var ts=xr(function(e,t,n){var i=y;if(n.length){var r=An(n,jo(ts));i|=x}return ko(e,i,t,n,r)}),ns=xr(function(e,t,n){var i=y|_;if(n.length){var r=An(n,jo(ns));i|=x}return ko(t,i,e,n,r)});function is(e,t,n){var i,r,a,s,c,d,u=0,f=!1,h=!1,p=!0;if("function"!=typeof e)throw new it(l);function m(t){var n=i,a=r;return i=r=o,u=t,s=e.apply(a,n)}function g(e){var n=e-d;return d===o||n>=t||n<0||h&&e-u>=a}function y(){var e=Ka();if(g(e))return _(e);c=ia(y,function(e){var n=t-(e-d);return h?Wn(n,a-(e-u)):n}(e))}function _(e){return c=o,p&&i?m(e):(i=r=o,s)}function v(){var e=Ka(),n=g(e);if(i=arguments,r=this,d=e,n){if(c===o)return function(e){return u=e,c=ia(y,t),f?m(e):s}(d);if(h)return c=ia(y,t),m(d)}return c===o&&(c=ia(y,t)),s}return t=qs(t)||0,Ts(n)&&(f=!!n.leading,a=(h="maxWait"in n)?Vn(qs(n.maxWait)||0,t):a,p="trailing"in n?!!n.trailing:p),v.cancel=function(){c!==o&&Jr(c),u=0,i=d=r=c=o},v.flush=function(){return c===o?s:_(Ka())},v}var rs=xr(function(e,t){return Mi(e,1,t)}),os=xr(function(e,t,n){return Mi(e,qs(t)||0,n)});function as(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new it(l);var n=function(){var i=arguments,r=t?t.apply(this,i):i[0],o=n.cache;if(o.has(r))return o.get(r);var a=e.apply(this,i);return n.cache=o.set(r,a)||o,a};return n.cache=new(as.Cache||vi),n}function ss(e){if("function"!=typeof e)throw new it(l);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}as.Cache=vi;var ls=Yr(function(e,t){var n=(t=1==t.length&&gs(t[0])?Zt(t[0],yn(Io())):Zt(Bi(t,1),yn(Io()))).length;return xr(function(i){for(var r=-1,o=Wn(i.length,n);++r<o;)i[r]=t[r].call(this,i[r]);return Wt(e,this,i)})}),cs=xr(function(e,t){var n=An(t,jo(cs));return ko(e,x,o,t,n)}),ds=xr(function(e,t){var n=An(t,jo(ds));return ko(e,E,o,t,n)}),us=Po(function(e,t){return ko(e,S,o,o,o,t)});function fs(e,t){return e===t||e!=e&&t!=t}var hs=vo(Ki),ps=vo(function(e,t){return e>=t}),ms=ir(function(){return arguments}())?ir:function(e){return Ds(e)&&ct.call(e,"callee")&&!Ct.call(e,"callee")},gs=n.isArray,ys=Ut?yn(Ut):function(e){return Ds(e)&&Qi(e)==le};function _s(e){return null!=e&&Ss(e.length)&&!Es(e)}function vs(e){return Ds(e)&&_s(e)}var bs=Rn||ql,ws=Rt?yn(Rt):function(e){return Ds(e)&&Qi(e)==W};function xs(e){if(!Ds(e))return!1;var t=Qi(e);return t==H||t==Y||"string"==typeof e.message&&"string"==typeof e.name&&!Os(e)}function Es(e){if(!Ts(e))return!1;var t=Qi(e);return t==J||t==G||t==B||t==ee}function ks(e){return"number"==typeof e&&e==Rs(e)}function Ss(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=j}function Ts(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function Ds(e){return null!=e&&"object"==typeof e}var As=Lt?yn(Lt):function(e){return Ds(e)&&Lo(e)==X};function Ps(e){return"number"==typeof e||Ds(e)&&Qi(e)==Q}function Os(e){if(!Ds(e)||Qi(e)!=Z)return!1;var t=At(e);if(null===t)return!0;var n=ct.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&lt.call(n)==ht}var $s=qt?yn(qt):function(e){return Ds(e)&&Qi(e)==te};var Cs=Bt?yn(Bt):function(e){return Ds(e)&&Lo(e)==ne};function Fs(e){return"string"==typeof e||!gs(e)&&Ds(e)&&Qi(e)==ie}function js(e){return"symbol"==typeof e||Ds(e)&&Qi(e)==re}var Is=Vt?yn(Vt):function(e){return Ds(e)&&Ss(e.length)&&!!Tt[Qi(e)]};var Ms=vo(dr),zs=vo(function(e,t){return e<=t});function Ns(e){if(!e)return[];if(_s(e))return Fs(e)?Cn(e):to(e);if(zt&&e[zt])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[zt]());var t=Lo(e);return(t==X?Tn:t==ne?Pn:fl)(e)}function Us(e){return e?(e=qs(e))===F||e===-F?(e<0?-1:1)*I:e==e?e:0:0===e?e:0}function Rs(e){var t=Us(e),n=t%1;return t==t?n?t-n:t:0}function Ls(e){return e?Fi(Rs(e),0,z):0}function qs(e){if("number"==typeof e)return e;if(js(e))return M;if(Ts(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=Ts(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(je,"");var n=We.test(e);return n||He.test(e)?Ot(e.slice(2),n?2:8):Ve.test(e)?M:+e}function Bs(e){return no(e,rl(e))}function Vs(e){return null==e?"":Ir(e)}var Ws=ro(function(e,t){if(Xo(t)||_s(t))no(t,il(t),e);else for(var n in t)ct.call(t,n)&&Di(e,n,t[n])}),Ys=ro(function(e,t){no(t,rl(t),e)}),Hs=ro(function(e,t,n,i){no(t,rl(t),e,i)}),Js=ro(function(e,t,n,i){no(t,il(t),e,i)}),Gs=Po(Ci);var Xs=xr(function(e,t){e=et(e);var n=-1,i=t.length,r=i>2?t[2]:o;for(r&&Yo(t[0],t[1],r)&&(i=1);++n<i;)for(var a=t[n],s=rl(a),l=-1,c=s.length;++l<c;){var d=s[l],u=e[d];(u===o||fs(u,at[d])&&!ct.call(e,d))&&(e[d]=a[d])}return e}),Qs=xr(function(e){return e.push(o,To),Wt(al,o,e)});function Ks(e,t,n){var i=null==e?o:Gi(e,t);return i===o?n:i}function Zs(e,t){return null!=e&&qo(e,t,er)}var el=po(function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=ft.call(t)),e[t]=n},Tl(Pl)),tl=po(function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=ft.call(t)),ct.call(e,t)?e[t].push(n):e[t]=[n]},Io),nl=xr(nr);function il(e){return _s(e)?xi(e):lr(e)}function rl(e){return _s(e)?xi(e,!0):cr(e)}var ol=ro(function(e,t,n){pr(e,t,n)}),al=ro(function(e,t,n,i){pr(e,t,n,i)}),sl=Po(function(e,t){var n={};if(null==e)return n;var i=!1;t=Zt(t,function(t){return t=Wr(t,e),i||(i=t.length>1),t}),no(e,$o(e),n),i&&(n=ji(n,f|h|p,Do));for(var r=t.length;r--;)zr(n,t[r]);return n});var ll=Po(function(e,t){return null==e?{}:function(e,t){return yr(e,t,function(t,n){return Zs(e,n)})}(e,t)});function cl(e,t){if(null==e)return{};var n=Zt($o(e),function(e){return[e]});return t=Io(t),yr(e,n,function(e,n){return t(e,n[0])})}var dl=Eo(il),ul=Eo(rl);function fl(e){return null==e?[]:_n(e,il(e))}var hl=lo(function(e,t,n){return t=t.toLowerCase(),e+(n?pl(t):t)});function pl(e){return xl(Vs(e).toLowerCase())}function ml(e){return(e=Vs(e))&&e.replace(Ge,xn).replace(vt,"")}var gl=lo(function(e,t,n){return e+(n?"-":"")+t.toLowerCase()}),yl=lo(function(e,t,n){return e+(n?" ":"")+t.toLowerCase()}),_l=so("toLowerCase");var vl=lo(function(e,t,n){return e+(n?"_":"")+t.toLowerCase()});var bl=lo(function(e,t,n){return e+(n?" ":"")+xl(t)});var wl=lo(function(e,t,n){return e+(n?" ":"")+t.toUpperCase()}),xl=so("toUpperCase");function El(e,t,n){return e=Vs(e),(t=n?o:t)===o?function(e){return Et.test(e)}(e)?function(e){return e.match(wt)||[]}(e):function(e){return e.match(Re)||[]}(e):e.match(t)||[]}var kl=xr(function(e,t){try{return Wt(e,o,t)}catch(e){return xs(e)?e:new r(e)}}),Sl=Po(function(e,t){return Ht(t,function(t){t=ca(t),$i(e,t,ts(e[t],e))}),e});function Tl(e){return function(){return e}}var Dl=fo(),Al=fo(!0);function Pl(e){return e}function Ol(e){return sr("function"==typeof e?e:ji(e,f))}var $l=xr(function(e,t){return function(n){return nr(n,e,t)}}),Cl=xr(function(e,t){return function(n){return nr(e,n,t)}});function Fl(e,t,n){var i=il(t),r=Ji(t,i);null!=n||Ts(t)&&(r.length||!i.length)||(n=t,t=e,e=this,r=Ji(t,il(t)));var o=!(Ts(n)&&"chain"in n&&!n.chain),a=Es(e);return Ht(r,function(n){var i=t[n];e[n]=i,a&&(e.prototype[n]=function(){var t=this.__chain__;if(o||t){var n=e(this.__wrapped__);return(n.__actions__=to(this.__actions__)).push({func:i,args:arguments,thisArg:e}),n.__chain__=t,n}return i.apply(e,en([this.value()],arguments))})}),e}function jl(){}var Il=go(Zt),Ml=go(Gt),zl=go(rn);function Nl(e){return Ho(e)?fn(ca(e)):function(e){return function(t){return Gi(t,e)}}(e)}var Ul=_o(),Rl=_o(!0);function Ll(){return[]}function ql(){return!1}var Bl=mo(function(e,t){return e+t},0),Vl=wo("ceil"),Wl=mo(function(e,t){return e/t},1),Yl=wo("floor");var Hl=mo(function(e,t){return e*t},1),Jl=wo("round"),Gl=mo(function(e,t){return e-t},0);return fi.after=function(e,t){if("function"!=typeof t)throw new it(l);return e=Rs(e),function(){if(--e<1)return t.apply(this,arguments)}},fi.ary=Za,fi.assign=Ws,fi.assignIn=Ys,fi.assignInWith=Hs,fi.assignWith=Js,fi.at=Gs,fi.before=es,fi.bind=ts,fi.bindAll=Sl,fi.bindKey=ns,fi.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return gs(e)?e:[e]},fi.chain=Na,fi.chunk=function(e,t,i){t=(i?Yo(e,t,i):t===o)?1:Vn(Rs(t),0);var r=null==e?0:e.length;if(!r||t<1)return[];for(var a=0,s=0,l=n(zn(r/t));a<r;)l[s++]=Pr(e,a,a+=t);return l},fi.compact=function(e){for(var t=-1,n=null==e?0:e.length,i=0,r=[];++t<n;){var o=e[t];o&&(r[i++]=o)}return r},fi.concat=function(){var e=arguments.length;if(!e)return[];for(var t=n(e-1),i=arguments[0],r=e;r--;)t[r-1]=arguments[r];return en(gs(i)?to(i):[i],Bi(t,1))},fi.cond=function(e){var t=null==e?0:e.length,n=Io();return e=t?Zt(e,function(e){if("function"!=typeof e[1])throw new it(l);return[n(e[0]),e[1]]}):[],xr(function(n){for(var i=-1;++i<t;){var r=e[i];if(Wt(r[0],this,n))return Wt(r[1],this,n)}})},fi.conforms=function(e){return function(e){var t=il(e);return function(n){return Ii(n,e,t)}}(ji(e,f))},fi.constant=Tl,fi.countBy=La,fi.create=function(e,t){var n=hi(e);return null==t?n:Oi(n,t)},fi.curry=function e(t,n,i){var r=ko(t,b,o,o,o,o,o,n=i?o:n);return r.placeholder=e.placeholder,r},fi.curryRight=function e(t,n,i){var r=ko(t,w,o,o,o,o,o,n=i?o:n);return r.placeholder=e.placeholder,r},fi.debounce=is,fi.defaults=Xs,fi.defaultsDeep=Qs,fi.defer=rs,fi.delay=os,fi.difference=fa,fi.differenceBy=ha,fi.differenceWith=pa,fi.drop=function(e,t,n){var i=null==e?0:e.length;return i?Pr(e,(t=n||t===o?1:Rs(t))<0?0:t,i):[]},fi.dropRight=function(e,t,n){var i=null==e?0:e.length;return i?Pr(e,0,(t=i-(t=n||t===o?1:Rs(t)))<0?0:t):[]},fi.dropRightWhile=function(e,t){return e&&e.length?Ur(e,Io(t,3),!0,!0):[]},fi.dropWhile=function(e,t){return e&&e.length?Ur(e,Io(t,3),!0):[]},fi.fill=function(e,t,n,i){var r=null==e?0:e.length;return r?(n&&"number"!=typeof n&&Yo(e,t,n)&&(n=0,i=r),function(e,t,n,i){var r=e.length;for((n=Rs(n))<0&&(n=-n>r?0:r+n),(i=i===o||i>r?r:Rs(i))<0&&(i+=r),i=n>i?0:Ls(i);n<i;)e[n++]=t;return e}(e,t,n,i)):[]},fi.filter=function(e,t){return(gs(e)?Xt:qi)(e,Io(t,3))},fi.flatMap=function(e,t){return Bi(Ga(e,t),1)},fi.flatMapDeep=function(e,t){return Bi(Ga(e,t),F)},fi.flatMapDepth=function(e,t,n){return n=n===o?1:Rs(n),Bi(Ga(e,t),n)},fi.flatten=ya,fi.flattenDeep=function(e){return null!=e&&e.length?Bi(e,F):[]},fi.flattenDepth=function(e,t){return null!=e&&e.length?Bi(e,t=t===o?1:Rs(t)):[]},fi.flip=function(e){return ko(e,T)},fi.flow=Dl,fi.flowRight=Al,fi.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,i={};++t<n;){var r=e[t];i[r[0]]=r[1]}return i},fi.functions=function(e){return null==e?[]:Ji(e,il(e))},fi.functionsIn=function(e){return null==e?[]:Ji(e,rl(e))},fi.groupBy=Ya,fi.initial=function(e){return null!=e&&e.length?Pr(e,0,-1):[]},fi.intersection=va,fi.intersectionBy=ba,fi.intersectionWith=wa,fi.invert=el,fi.invertBy=tl,fi.invokeMap=Ha,fi.iteratee=Ol,fi.keyBy=Ja,fi.keys=il,fi.keysIn=rl,fi.map=Ga,fi.mapKeys=function(e,t){var n={};return t=Io(t,3),Yi(e,function(e,i,r){$i(n,t(e,i,r),e)}),n},fi.mapValues=function(e,t){var n={};return t=Io(t,3),Yi(e,function(e,i,r){$i(n,i,t(e,i,r))}),n},fi.matches=function(e){return fr(ji(e,f))},fi.matchesProperty=function(e,t){return hr(e,ji(t,f))},fi.memoize=as,fi.merge=ol,fi.mergeWith=al,fi.method=$l,fi.methodOf=Cl,fi.mixin=Fl,fi.negate=ss,fi.nthArg=function(e){return e=Rs(e),xr(function(t){return mr(t,e)})},fi.omit=sl,fi.omitBy=function(e,t){return cl(e,ss(Io(t)))},fi.once=function(e){return es(2,e)},fi.orderBy=function(e,t,n,i){return null==e?[]:(gs(t)||(t=null==t?[]:[t]),gs(n=i?o:n)||(n=null==n?[]:[n]),gr(e,t,n))},fi.over=Il,fi.overArgs=ls,fi.overEvery=Ml,fi.overSome=zl,fi.partial=cs,fi.partialRight=ds,fi.partition=Xa,fi.pick=ll,fi.pickBy=cl,fi.property=Nl,fi.propertyOf=function(e){return function(t){return null==e?o:Gi(e,t)}},fi.pull=Ea,fi.pullAll=ka,fi.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?_r(e,t,Io(n,2)):e},fi.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?_r(e,t,o,n):e},fi.pullAt=Sa,fi.range=Ul,fi.rangeRight=Rl,fi.rearg=us,fi.reject=function(e,t){return(gs(e)?Xt:qi)(e,ss(Io(t,3)))},fi.remove=function(e,t){var n=[];if(!e||!e.length)return n;var i=-1,r=[],o=e.length;for(t=Io(t,3);++i<o;){var a=e[i];t(a,i,e)&&(n.push(a),r.push(i))}return vr(e,r),n},fi.rest=function(e,t){if("function"!=typeof e)throw new it(l);return xr(e,t=t===o?t:Rs(t))},fi.reverse=Ta,fi.sampleSize=function(e,t,n){return t=(n?Yo(e,t,n):t===o)?1:Rs(t),(gs(e)?ki:kr)(e,t)},fi.set=function(e,t,n){return null==e?e:Sr(e,t,n)},fi.setWith=function(e,t,n,i){return i="function"==typeof i?i:o,null==e?e:Sr(e,t,n,i)},fi.shuffle=function(e){return(gs(e)?Si:Ar)(e)},fi.slice=function(e,t,n){var i=null==e?0:e.length;return i?(n&&"number"!=typeof n&&Yo(e,t,n)?(t=0,n=i):(t=null==t?0:Rs(t),n=n===o?i:Rs(n)),Pr(e,t,n)):[]},fi.sortBy=Qa,fi.sortedUniq=function(e){return e&&e.length?Fr(e):[]},fi.sortedUniqBy=function(e,t){return e&&e.length?Fr(e,Io(t,2)):[]},fi.split=function(e,t,n){return n&&"number"!=typeof n&&Yo(e,t,n)&&(t=n=o),(n=n===o?z:n>>>0)?(e=Vs(e))&&("string"==typeof t||null!=t&&!$s(t))&&!(t=Ir(t))&&Sn(e)?Hr(Cn(e),0,n):e.split(t,n):[]},fi.spread=function(e,t){if("function"!=typeof e)throw new it(l);return t=null==t?0:Vn(Rs(t),0),xr(function(n){var i=n[t],r=Hr(n,0,t);return i&&en(r,i),Wt(e,this,r)})},fi.tail=function(e){var t=null==e?0:e.length;return t?Pr(e,1,t):[]},fi.take=function(e,t,n){return e&&e.length?Pr(e,0,(t=n||t===o?1:Rs(t))<0?0:t):[]},fi.takeRight=function(e,t,n){var i=null==e?0:e.length;return i?Pr(e,(t=i-(t=n||t===o?1:Rs(t)))<0?0:t,i):[]},fi.takeRightWhile=function(e,t){return e&&e.length?Ur(e,Io(t,3),!1,!0):[]},fi.takeWhile=function(e,t){return e&&e.length?Ur(e,Io(t,3)):[]},fi.tap=function(e,t){return t(e),e},fi.throttle=function(e,t,n){var i=!0,r=!0;if("function"!=typeof e)throw new it(l);return Ts(n)&&(i="leading"in n?!!n.leading:i,r="trailing"in n?!!n.trailing:r),is(e,t,{leading:i,maxWait:t,trailing:r})},fi.thru=Ua,fi.toArray=Ns,fi.toPairs=dl,fi.toPairsIn=ul,fi.toPath=function(e){return gs(e)?Zt(e,ca):js(e)?[e]:to(la(Vs(e)))},fi.toPlainObject=Bs,fi.transform=function(e,t,n){var i=gs(e),r=i||bs(e)||Is(e);if(t=Io(t,4),null==n){var o=e&&e.constructor;n=r?i?new o:[]:Ts(e)&&Es(o)?hi(At(e)):{}}return(r?Ht:Yi)(e,function(e,i,r){return t(n,e,i,r)}),n},fi.unary=function(e){return Za(e,1)},fi.union=Da,fi.unionBy=Aa,fi.unionWith=Pa,fi.uniq=function(e){return e&&e.length?Mr(e):[]},fi.uniqBy=function(e,t){return e&&e.length?Mr(e,Io(t,2)):[]},fi.uniqWith=function(e,t){return t="function"==typeof t?t:o,e&&e.length?Mr(e,o,t):[]},fi.unset=function(e,t){return null==e||zr(e,t)},fi.unzip=Oa,fi.unzipWith=$a,fi.update=function(e,t,n){return null==e?e:Nr(e,t,Vr(n))},fi.updateWith=function(e,t,n,i){return i="function"==typeof i?i:o,null==e?e:Nr(e,t,Vr(n),i)},fi.values=fl,fi.valuesIn=function(e){return null==e?[]:_n(e,rl(e))},fi.without=Ca,fi.words=El,fi.wrap=function(e,t){return cs(Vr(t),e)},fi.xor=Fa,fi.xorBy=ja,fi.xorWith=Ia,fi.zip=Ma,fi.zipObject=function(e,t){return qr(e||[],t||[],Di)},fi.zipObjectDeep=function(e,t){return qr(e||[],t||[],Sr)},fi.zipWith=za,fi.entries=dl,fi.entriesIn=ul,fi.extend=Ys,fi.extendWith=Hs,Fl(fi,fi),fi.add=Bl,fi.attempt=kl,fi.camelCase=hl,fi.capitalize=pl,fi.ceil=Vl,fi.clamp=function(e,t,n){return n===o&&(n=t,t=o),n!==o&&(n=(n=qs(n))==n?n:0),t!==o&&(t=(t=qs(t))==t?t:0),Fi(qs(e),t,n)},fi.clone=function(e){return ji(e,p)},fi.cloneDeep=function(e){return ji(e,f|p)},fi.cloneDeepWith=function(e,t){return ji(e,f|p,t="function"==typeof t?t:o)},fi.cloneWith=function(e,t){return ji(e,p,t="function"==typeof t?t:o)},fi.conformsTo=function(e,t){return null==t||Ii(e,t,il(t))},fi.deburr=ml,fi.defaultTo=function(e,t){return null==e||e!=e?t:e},fi.divide=Wl,fi.endsWith=function(e,t,n){e=Vs(e),t=Ir(t);var i=e.length,r=n=n===o?i:Fi(Rs(n),0,i);return(n-=t.length)>=0&&e.slice(n,r)==t},fi.eq=fs,fi.escape=function(e){return(e=Vs(e))&&Se.test(e)?e.replace(Ee,En):e},fi.escapeRegExp=function(e){return(e=Vs(e))&&Fe.test(e)?e.replace(Ce,"\\$&"):e},fi.every=function(e,t,n){var i=gs(e)?Gt:Ri;return n&&Yo(e,t,n)&&(t=o),i(e,Io(t,3))},fi.find=qa,fi.findIndex=ma,fi.findKey=function(e,t){return an(e,Io(t,3),Yi)},fi.findLast=Ba,fi.findLastIndex=ga,fi.findLastKey=function(e,t){return an(e,Io(t,3),Hi)},fi.floor=Yl,fi.forEach=Va,fi.forEachRight=Wa,fi.forIn=function(e,t){return null==e?e:Vi(e,Io(t,3),rl)},fi.forInRight=function(e,t){return null==e?e:Wi(e,Io(t,3),rl)},fi.forOwn=function(e,t){return e&&Yi(e,Io(t,3))},fi.forOwnRight=function(e,t){return e&&Hi(e,Io(t,3))},fi.get=Ks,fi.gt=hs,fi.gte=ps,fi.has=function(e,t){return null!=e&&qo(e,t,Zi)},fi.hasIn=Zs,fi.head=_a,fi.identity=Pl,fi.includes=function(e,t,n,i){e=_s(e)?e:fl(e),n=n&&!i?Rs(n):0;var r=e.length;return n<0&&(n=Vn(r+n,0)),Fs(e)?n<=r&&e.indexOf(t,n)>-1:!!r&&ln(e,t,n)>-1},fi.indexOf=function(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=null==n?0:Rs(n);return r<0&&(r=Vn(i+r,0)),ln(e,t,r)},fi.inRange=function(e,t,n){return t=Us(t),n===o?(n=t,t=0):n=Us(n),function(e,t,n){return e>=Wn(t,n)&&e<Vn(t,n)}(e=qs(e),t,n)},fi.invoke=nl,fi.isArguments=ms,fi.isArray=gs,fi.isArrayBuffer=ys,fi.isArrayLike=_s,fi.isArrayLikeObject=vs,fi.isBoolean=function(e){return!0===e||!1===e||Ds(e)&&Qi(e)==V},fi.isBuffer=bs,fi.isDate=ws,fi.isElement=function(e){return Ds(e)&&1===e.nodeType&&!Os(e)},fi.isEmpty=function(e){if(null==e)return!0;if(_s(e)&&(gs(e)||"string"==typeof e||"function"==typeof e.splice||bs(e)||Is(e)||ms(e)))return!e.length;var t=Lo(e);if(t==X||t==ne)return!e.size;if(Xo(e))return!lr(e).length;for(var n in e)if(ct.call(e,n))return!1;return!0},fi.isEqual=function(e,t){return rr(e,t)},fi.isEqualWith=function(e,t,n){var i=(n="function"==typeof n?n:o)?n(e,t):o;return i===o?rr(e,t,o,n):!!i},fi.isError=xs,fi.isFinite=function(e){return"number"==typeof e&&Ln(e)},fi.isFunction=Es,fi.isInteger=ks,fi.isLength=Ss,fi.isMap=As,fi.isMatch=function(e,t){return e===t||or(e,t,zo(t))},fi.isMatchWith=function(e,t,n){return n="function"==typeof n?n:o,or(e,t,zo(t),n)},fi.isNaN=function(e){return Ps(e)&&e!=+e},fi.isNative=function(e){if(Go(e))throw new r(s);return ar(e)},fi.isNil=function(e){return null==e},fi.isNull=function(e){return null===e},fi.isNumber=Ps,fi.isObject=Ts,fi.isObjectLike=Ds,fi.isPlainObject=Os,fi.isRegExp=$s,fi.isSafeInteger=function(e){return ks(e)&&e>=-j&&e<=j},fi.isSet=Cs,fi.isString=Fs,fi.isSymbol=js,fi.isTypedArray=Is,fi.isUndefined=function(e){return e===o},fi.isWeakMap=function(e){return Ds(e)&&Lo(e)==ae},fi.isWeakSet=function(e){return Ds(e)&&Qi(e)==se},fi.join=function(e,t){return null==e?"":qn.call(e,t)},fi.kebabCase=gl,fi.last=xa,fi.lastIndexOf=function(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=i;return n!==o&&(r=(r=Rs(n))<0?Vn(i+r,0):Wn(r,i-1)),t==t?function(e,t,n){for(var i=n+1;i--;)if(e[i]===t)return i;return i}(e,t,r):sn(e,dn,r,!0)},fi.lowerCase=yl,fi.lowerFirst=_l,fi.lt=Ms,fi.lte=zs,fi.max=function(e){return e&&e.length?Li(e,Pl,Ki):o},fi.maxBy=function(e,t){return e&&e.length?Li(e,Io(t,2),Ki):o},fi.mean=function(e){return un(e,Pl)},fi.meanBy=function(e,t){return un(e,Io(t,2))},fi.min=function(e){return e&&e.length?Li(e,Pl,dr):o},fi.minBy=function(e,t){return e&&e.length?Li(e,Io(t,2),dr):o},fi.stubArray=Ll,fi.stubFalse=ql,fi.stubObject=function(){return{}},fi.stubString=function(){return""},fi.stubTrue=function(){return!0},fi.multiply=Hl,fi.nth=function(e,t){return e&&e.length?mr(e,Rs(t)):o},fi.noConflict=function(){return Ft._===this&&(Ft._=pt),this},fi.noop=jl,fi.now=Ka,fi.pad=function(e,t,n){e=Vs(e);var i=(t=Rs(t))?$n(e):0;if(!t||i>=t)return e;var r=(t-i)/2;return yo(Nn(r),n)+e+yo(zn(r),n)},fi.padEnd=function(e,t,n){e=Vs(e);var i=(t=Rs(t))?$n(e):0;return t&&i<t?e+yo(t-i,n):e},fi.padStart=function(e,t,n){e=Vs(e);var i=(t=Rs(t))?$n(e):0;return t&&i<t?yo(t-i,n)+e:e},fi.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),Hn(Vs(e).replace(Ie,""),t||0)},fi.random=function(e,t,n){if(n&&"boolean"!=typeof n&&Yo(e,t,n)&&(t=n=o),n===o&&("boolean"==typeof t?(n=t,t=o):"boolean"==typeof e&&(n=e,e=o)),e===o&&t===o?(e=0,t=1):(e=Us(e),t===o?(t=e,e=0):t=Us(t)),e>t){var i=e;e=t,t=i}if(n||e%1||t%1){var r=Jn();return Wn(e+r*(t-e+Pt("1e-"+((r+"").length-1))),t)}return br(e,t)},fi.reduce=function(e,t,n){var i=gs(e)?tn:pn,r=arguments.length<3;return i(e,Io(t,4),n,r,Ni)},fi.reduceRight=function(e,t,n){var i=gs(e)?nn:pn,r=arguments.length<3;return i(e,Io(t,4),n,r,Ui)},fi.repeat=function(e,t,n){return t=(n?Yo(e,t,n):t===o)?1:Rs(t),wr(Vs(e),t)},fi.replace=function(){var e=arguments,t=Vs(e[0]);return e.length<3?t:t.replace(e[1],e[2])},fi.result=function(e,t,n){var i=-1,r=(t=Wr(t,e)).length;for(r||(r=1,e=o);++i<r;){var a=null==e?o:e[ca(t[i])];a===o&&(i=r,a=n),e=Es(a)?a.call(e):a}return e},fi.round=Jl,fi.runInContext=e,fi.sample=function(e){return(gs(e)?Ei:Er)(e)},fi.size=function(e){if(null==e)return 0;if(_s(e))return Fs(e)?$n(e):e.length;var t=Lo(e);return t==X||t==ne?e.size:lr(e).length},fi.snakeCase=vl,fi.some=function(e,t,n){var i=gs(e)?rn:Or;return n&&Yo(e,t,n)&&(t=o),i(e,Io(t,3))},fi.sortedIndex=function(e,t){return $r(e,t)},fi.sortedIndexBy=function(e,t,n){return Cr(e,t,Io(n,2))},fi.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var i=$r(e,t);if(i<n&&fs(e[i],t))return i}return-1},fi.sortedLastIndex=function(e,t){return $r(e,t,!0)},fi.sortedLastIndexBy=function(e,t,n){return Cr(e,t,Io(n,2),!0)},fi.sortedLastIndexOf=function(e,t){if(null!=e&&e.length){var n=$r(e,t,!0)-1;if(fs(e[n],t))return n}return-1},fi.startCase=bl,fi.startsWith=function(e,t,n){return e=Vs(e),n=null==n?0:Fi(Rs(n),0,e.length),t=Ir(t),e.slice(n,n+t.length)==t},fi.subtract=Gl,fi.sum=function(e){return e&&e.length?mn(e,Pl):0},fi.sumBy=function(e,t){return e&&e.length?mn(e,Io(t,2)):0},fi.template=function(e,t,n){var i=fi.templateSettings;n&&Yo(e,t,n)&&(t=o),e=Vs(e),t=Hs({},t,i,So);var r,a,s=Hs({},t.imports,i.imports,So),l=il(s),c=_n(s,l),d=0,u=t.interpolate||Xe,f="__p += '",h=tt((t.escape||Xe).source+"|"+u.source+"|"+(u===Ae?qe:Xe).source+"|"+(t.evaluate||Xe).source+"|$","g"),p="//# sourceURL="+("sourceURL"in t?t.sourceURL:"lodash.templateSources["+ ++St+"]")+"\n";e.replace(h,function(t,n,i,o,s,l){return i||(i=o),f+=e.slice(d,l).replace(Qe,kn),n&&(r=!0,f+="' +\n__e("+n+") +\n'"),s&&(a=!0,f+="';\n"+s+";\n__p += '"),i&&(f+="' +\n((__t = ("+i+")) == null ? '' : __t) +\n'"),d=l+t.length,t}),f+="';\n";var m=t.variable;m||(f="with (obj) {\n"+f+"\n}\n"),f=(a?f.replace(ve,""):f).replace(be,"$1").replace(we,"$1;"),f="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(r?", __e = _.escape":"")+(a?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+f+"return __p\n}";var g=kl(function(){return Ke(l,p+"return "+f).apply(o,c)});if(g.source=f,xs(g))throw g;return g},fi.times=function(e,t){if((e=Rs(e))<1||e>j)return[];var n=z,i=Wn(e,z);t=Io(t),e-=z;for(var r=gn(i,t);++n<e;)t(n);return r},fi.toFinite=Us,fi.toInteger=Rs,fi.toLength=Ls,fi.toLower=function(e){return Vs(e).toLowerCase()},fi.toNumber=qs,fi.toSafeInteger=function(e){return e?Fi(Rs(e),-j,j):0===e?e:0},fi.toString=Vs,fi.toUpper=function(e){return Vs(e).toUpperCase()},fi.trim=function(e,t,n){if((e=Vs(e))&&(n||t===o))return e.replace(je,"");if(!e||!(t=Ir(t)))return e;var i=Cn(e),r=Cn(t);return Hr(i,bn(i,r),wn(i,r)+1).join("")},fi.trimEnd=function(e,t,n){if((e=Vs(e))&&(n||t===o))return e.replace(Me,"");if(!e||!(t=Ir(t)))return e;var i=Cn(e);return Hr(i,0,wn(i,Cn(t))+1).join("")},fi.trimStart=function(e,t,n){if((e=Vs(e))&&(n||t===o))return e.replace(Ie,"");if(!e||!(t=Ir(t)))return e;var i=Cn(e);return Hr(i,bn(i,Cn(t))).join("")},fi.truncate=function(e,t){var n=D,i=A;if(Ts(t)){var r="separator"in t?t.separator:r;n="length"in t?Rs(t.length):n,i="omission"in t?Ir(t.omission):i}var a=(e=Vs(e)).length;if(Sn(e)){var s=Cn(e);a=s.length}if(n>=a)return e;var l=n-$n(i);if(l<1)return i;var c=s?Hr(s,0,l).join(""):e.slice(0,l);if(r===o)return c+i;if(s&&(l+=c.length-l),$s(r)){if(e.slice(l).search(r)){var d,u=c;for(r.global||(r=tt(r.source,Vs(Be.exec(r))+"g")),r.lastIndex=0;d=r.exec(u);)var f=d.index;c=c.slice(0,f===o?l:f)}}else if(e.indexOf(Ir(r),l)!=l){var h=c.lastIndexOf(r);h>-1&&(c=c.slice(0,h))}return c+i},fi.unescape=function(e){return(e=Vs(e))&&ke.test(e)?e.replace(xe,Fn):e},fi.uniqueId=function(e){var t=++dt;return Vs(e)+t},fi.upperCase=wl,fi.upperFirst=xl,fi.each=Va,fi.eachRight=Wa,fi.first=_a,Fl(fi,function(){var e={};return Yi(fi,function(t,n){ct.call(fi.prototype,n)||(e[n]=t)}),e}(),{chain:!1}),fi.VERSION="4.17.11",Ht(["bind","bindKey","curry","curryRight","partial","partialRight"],function(e){fi[e].placeholder=fi}),Ht(["drop","take"],function(e,t){gi.prototype[e]=function(n){n=n===o?1:Vn(Rs(n),0);var i=this.__filtered__&&!t?new gi(this):this.clone();return i.__filtered__?i.__takeCount__=Wn(n,i.__takeCount__):i.__views__.push({size:Wn(n,z),type:e+(i.__dir__<0?"Right":"")}),i},gi.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}}),Ht(["filter","map","takeWhile"],function(e,t){var n=t+1,i=n==$||3==n;gi.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:Io(e,3),type:n}),t.__filtered__=t.__filtered__||i,t}}),Ht(["head","last"],function(e,t){var n="take"+(t?"Right":"");gi.prototype[e]=function(){return this[n](1).value()[0]}}),Ht(["initial","tail"],function(e,t){var n="drop"+(t?"":"Right");gi.prototype[e]=function(){return this.__filtered__?new gi(this):this[n](1)}}),gi.prototype.compact=function(){return this.filter(Pl)},gi.prototype.find=function(e){return this.filter(e).head()},gi.prototype.findLast=function(e){return this.reverse().find(e)},gi.prototype.invokeMap=xr(function(e,t){return"function"==typeof e?new gi(this):this.map(function(n){return nr(n,e,t)})}),gi.prototype.reject=function(e){return this.filter(ss(Io(e)))},gi.prototype.slice=function(e,t){e=Rs(e);var n=this;return n.__filtered__&&(e>0||t<0)?new gi(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),t!==o&&(n=(t=Rs(t))<0?n.dropRight(-t):n.take(t-e)),n)},gi.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},gi.prototype.toArray=function(){return this.take(z)},Yi(gi.prototype,function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),r=fi[i?"take"+("last"==t?"Right":""):t],a=i||/^find/.test(t);r&&(fi.prototype[t]=function(){var t=this.__wrapped__,s=i?[1]:arguments,l=t instanceof gi,c=s[0],d=l||gs(t),u=function(e){var t=r.apply(fi,en([e],s));return i&&f?t[0]:t};d&&n&&"function"==typeof c&&1!=c.length&&(l=d=!1);var f=this.__chain__,h=!!this.__actions__.length,p=a&&!f,m=l&&!h;if(!a&&d){t=m?t:new gi(this);var g=e.apply(t,s);return g.__actions__.push({func:Ua,args:[u],thisArg:o}),new mi(g,f)}return p&&m?e.apply(this,s):(g=this.thru(u),p?i?g.value()[0]:g.value():g)})}),Ht(["pop","push","shift","sort","splice","unshift"],function(e){var t=rt[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",i=/^(?:pop|shift)$/.test(e);fi.prototype[e]=function(){var e=arguments;if(i&&!this.__chain__){var r=this.value();return t.apply(gs(r)?r:[],e)}return this[n](function(n){return t.apply(gs(n)?n:[],e)})}}),Yi(gi.prototype,function(e,t){var n=fi[t];if(n){var i=n.name+"";(ii[i]||(ii[i]=[])).push({name:t,func:n})}}),ii[ho(o,_).name]=[{name:"wrapper",func:o}],gi.prototype.clone=function(){var e=new gi(this.__wrapped__);return e.__actions__=to(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=to(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=to(this.__views__),e},gi.prototype.reverse=function(){if(this.__filtered__){var e=new gi(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},gi.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=gs(e),i=t<0,r=n?e.length:0,o=function(e,t,n){for(var i=-1,r=n.length;++i<r;){var o=n[i],a=o.size;switch(o.type){case"drop":e+=a;break;case"dropRight":t-=a;break;case"take":t=Wn(t,e+a);break;case"takeRight":e=Vn(e,t-a)}}return{start:e,end:t}}(0,r,this.__views__),a=o.start,s=o.end,l=s-a,c=i?s:a-1,d=this.__iteratees__,u=d.length,f=0,h=Wn(l,this.__takeCount__);if(!n||!i&&r==l&&h==l)return Rr(e,this.__actions__);var p=[];e:for(;l--&&f<h;){for(var m=-1,g=e[c+=t];++m<u;){var y=d[m],_=y.iteratee,v=y.type,b=_(g);if(v==C)g=b;else if(!b){if(v==$)continue e;break e}}p[f++]=g}return p},fi.prototype.at=Ra,fi.prototype.chain=function(){return Na(this)},fi.prototype.commit=function(){return new mi(this.value(),this.__chain__)},fi.prototype.next=function(){this.__values__===o&&(this.__values__=Ns(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?o:this.__values__[this.__index__++]}},fi.prototype.plant=function(e){for(var t,n=this;n instanceof pi;){var i=ua(n);i.__index__=0,i.__values__=o,t?r.__wrapped__=i:t=i;var r=i;n=n.__wrapped__}return r.__wrapped__=e,t},fi.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof gi){var t=e;return this.__actions__.length&&(t=new gi(this)),(t=t.reverse()).__actions__.push({func:Ua,args:[Ta],thisArg:o}),new mi(t,this.__chain__)}return this.thru(Ta)},fi.prototype.toJSON=fi.prototype.valueOf=fi.prototype.value=function(){return Rr(this.__wrapped__,this.__actions__)},fi.prototype.first=fi.prototype.head,zt&&(fi.prototype[zt]=function(){return this}),fi}();Ft._=jn,(r=function(){return jn}.call(t,n,t,i))===o||(i.exports=r)}).call(this)}).call(this,n(7),n(41)(e))},function(e,t,n){"use strict";var i=n(5),r=n.n(i);n.o(i,"constraints2json")&&n.d(t,"constraints2json",function(){return i.constraints2json}),n.o(i,"json2constraints")&&n.d(t,"json2constraints",function(){return i.json2constraints}),n.o(i,"lockasp")&&n.d(t,"lockasp",function(){return i.lockasp}),n.o(i,"vl2asp")&&n.d(t,"vl2asp",function(){return i.vl2asp});n(13);var o=n(6);n.d(t,"constraints2json",function(){return o.b}),n.d(t,"json2constraints",function(){return o.c}),n.d(t,"lockasp",function(){return o.d}),n.d(t,"vl2asp",function(){return o.e}),t.default=r.a},function(e,t,n){(function(t){var n=e.exports;n.namedfunc=function(e,t){return t.__name__=e,t},n.name=function(e){return null==e?null:e.__name__},n.identity=function(e){return e},n.true=n.namedfunc("true",function(){return!0}),n.false=n.namedfunc("false",function(){return!1}),n.duplicate=function(e){return JSON.parse(JSON.stringify(e))},n.equal=function(e,t){return JSON.stringify(e)===JSON.stringify(t)},n.extend=function(e){for(var t,n,i=1,r=arguments.length;i<r;++i)for(n in t=arguments[i])e[n]=t[n];return e},n.length=function(e){return null!=e&&null!=e.length?e.length:null},n.keys=function(e){var t,n=[];for(t in e)n.push(t);return n},n.vals=function(e){var t,n=[];for(t in e)n.push(e[t]);return n},n.toMap=function(e,t){return(t=n.$(t))?e.reduce(function(e,n){return e[t(n)]=1,e},{}):e.reduce(function(e,t){return e[t]=1,e},{})},n.keystr=function(e){var t=e.length;if(!t)return"";for(var n=String(e[0]),i=1;i<t;++i)n+="|"+String(e[i]);return n};var i=Object.prototype.toString;n.isObject=function(e){return e===Object(e)},n.isFunction=function(e){return"[object Function]"===i.call(e)},n.isString=function(e){return"string"==typeof value||"[object String]"===i.call(e)},n.isArray=Array.isArray||function(e){return"[object Array]"===i.call(e)},n.isNumber=function(e){return"number"==typeof e||"[object Number]"===i.call(e)},n.isBoolean=function(e){return!0===e||!1===e||"[object Boolean]"==i.call(e)},n.isDate=function(e){return"[object Date]"===i.call(e)},n.isValid=function(e){return null!=e&&e==e},n.isBuffer="function"==typeof t&&t.isBuffer||n.false,n.number=function(e){return null==e||""===e?null:+e},n.boolean=function(e){return null==e||""===e?null:"false"!==e&&!!e},n.date=function(e,t){var n=t||Date;return null==e||""===e?null:n.parse(e)},n.array=function(e){return null!=e?n.isArray(e)?e:[e]:[]},n.str=function(e){return n.isArray(e)?"["+e.map(n.str)+"]":n.isObject(e)||n.isString(e)?JSON.stringify(e).replace("\u2028","\\u2028").replace("\u2029","\\u2029"):e};var r=/\[(.*?)\]|[^.\[]+/g;function o(e,t){var n,i="";for(n=0;n<e;++n)i+=t;return i}function a(e,t,n){var i=0,r=e.split(s);return(e=n?(r=r.reverse()).filter(function(e){return(i+=e.length)<=t}).reverse():r.filter(function(e){return(i+=e.length)<=t})).length?e.join("").trim():r[0].slice(0,t)}n.field=function(e){return String(e).match(r).map(function(e){return"["!==e[0]?e:"'"!==e[1]&&'"'!==e[1]?e.slice(1,-1):e.slice(2,-2).replace(/\\(["'])/g,"$1")})},n.accessor=function(e){return null==e||n.isFunction(e)?e:n.namedfunc(e,Function("x","return x["+n.field(e).map(n.str).join("][")+"];"))},n.$=n.accessor,n.mutator=function(e){var t;return n.isString(e)&&(t=n.field(e)).length>1?function(e,n){for(var i=0;i<t.length-1;++i)e=e[t[i]];e[t[i]]=n}:function(t,n){t[e]=n}},n.$func=function(e,t){return function(i){i=n.$(i)||n.identity;var r=e+(n.name(i)?"_"+n.name(i):"");return n.namedfunc(r,function(e){return t(i(e))})}},n.$valid=n.$func("valid",n.isValid),n.$length=n.$func("length",n.length),n.$in=function(e,t){e=n.$(e);var i=n.isArray(t)?n.toMap(t):t;return function(t){return!!i[e(t)]}},n.comparator=function(e){var t=[];return void 0===e&&(e=[]),e=n.array(e).map(function(e){var i=1;return"-"===e[0]?(i=-1,e=e.slice(1)):"+"===e[0]&&(i=1,e=e.slice(1)),t.push(i),n.accessor(e)}),function(i,r){var o,a,s,l;for(o=0,a=e.length;o<a;++o)if(s=e[o],l=n.cmp(s(i),s(r)))return l*t[o];return 0}},n.cmp=function(e,t){return(e<t||null==e)&&null!=t?-1:(e>t||null==t)&&null!=e?1:(t=t instanceof Date?+t:t,(e=e instanceof Date?+e:e)!==e&&t==t?-1:t!=t&&e==e?1:0)},n.numcmp=function(e,t){return e-t},n.stablesort=function(e,t,n){var i=e.reduce(function(e,t,i){return e[n(t)]=i,e},{});return e.sort(function(e,r){var o=t(e),a=t(r);return o<a?-1:o>a?1:i[n(e)]-i[n(r)]}),e},n.permute=function(e){for(var t,n,i=e.length;i;)n=Math.floor(Math.random()*i--),t=e[i],e[i]=e[n],e[n]=t},n.pad=function(e,t,n,i){i=i||" ";var r=t-e.length;if(r<=0)return e;switch(n){case"left":return o(r,i)+e;case"middle":case"center":return o(Math.floor(r/2),i)+e+o(Math.ceil(r/2),i);default:return e+o(r,i)}},n.truncate=function(e,t,n,i,r){var o=e.length;if(o<=t)return e;r=void 0!==r?String(r):"…";var s=Math.max(0,t-r.length);switch(n){case"left":return r+(i?a(e,s,1):e.slice(o-s));case"middle":case"center":var l=Math.ceil(s/2),c=Math.floor(s/2);return(i?a(e,l):e.slice(0,l))+r+(i?a(e,c,1):e.slice(o-c));default:return(i?a(e,s):e.slice(0,s))+r}};var s=/([\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u2028\u2029\u3000\uFEFF])/}).call(this,n(12).Buffer)},function(e,t,n){"use strict";function i(e,t,n){var i=n?" !== ":" === ",r=n?" || ":" && ",o=n?"!":"",a=n?"":"!";switch(e){case"null":return t+i+"null";case"array":return o+"Array.isArray("+t+")";case"object":return"("+o+t+r+"typeof "+t+i+'"object"'+r+a+"Array.isArray("+t+"))";case"integer":return"(typeof "+t+i+'"number"'+r+a+"("+t+" % 1)"+r+t+i+t+")";default:return"typeof "+t+i+'"'+e+'"'}}e.exports={copy:function(e,t){for(var n in t=t||{},e)t[n]=e[n];return t},checkDataType:i,checkDataTypes:function(e,t){switch(e.length){case 1:return i(e[0],t,!0);default:var n="",r=o(e);for(var a in r.array&&r.object&&(n=r.null?"(":"(!"+t+" || ",n+="typeof "+t+' !== "object")',delete r.null,delete r.array,delete r.object),r.number&&delete r.integer,r)n+=(n?" && ":"")+i(a,t,!0);return n}},coerceToTypes:function(e,t){if(Array.isArray(t)){for(var n=[],i=0;i<t.length;i++){var o=t[i];r[o]?n[n.length]=o:"array"===e&&"array"===o&&(n[n.length]=o)}if(n.length)return n}else{if(r[t])return[t];if("array"===e&&"array"===t)return["array"]}},toHash:o,getProperty:l,escapeQuotes:c,equal:n(10),ucs2length:n(44),varOccurences:function(e,t){t+="[^0-9]";var n=e.match(new RegExp(t,"g"));return n?n.length:0},varReplace:function(e,t,n){return t+="([^0-9])",n=n.replace(/\$/g,"$$$$"),e.replace(new RegExp(t,"g"),n+"$1")},cleanUpCode:function(e){return e.replace(d,"").replace(u,"").replace(f,"if (!($1))")},finalCleanUpCode:function(e,t){var n=e.match(h);n&&2==n.length&&(e=t?e.replace(m,"").replace(_,v):e.replace(p,"").replace(g,y));return(n=e.match(b))&&3===n.length?e.replace(w,""):e},schemaHasRules:function(e,t){if("boolean"==typeof e)return!e;for(var n in e)if(t[n])return!0},schemaHasRulesExcept:function(e,t,n){if("boolean"==typeof e)return!e&&"not"!=n;for(var i in e)if(i!=n&&t[i])return!0},schemaUnknownRules:function(e,t){if("boolean"==typeof e)return;for(var n in e)if(!t[n])return n},toQuotedString:x,getPathExpr:function(e,t,n,i){return S(e,n?"'/' + "+t+(i?"":".replace(/~/g, '~0').replace(/\\//g, '~1')"):i?"'[' + "+t+" + ']'":"'[\\'' + "+t+" + '\\']'")},getPath:function(e,t,n){var i=x(n?"/"+T(t):l(t));return S(e,i)},getData:function(e,t,n){var i,r,o,a;if(""===e)return"rootData";if("/"==e[0]){if(!E.test(e))throw new Error("Invalid JSON-pointer: "+e);r=e,o="rootData"}else{if(!(a=e.match(k)))throw new Error("Invalid JSON-pointer: "+e);if(i=+a[1],"#"==(r=a[2])){if(i>=t)throw new Error("Cannot access property/index "+i+" levels up, current level is "+t);return n[t-i]}if(i>t)throw new Error("Cannot access data "+i+" levels up, current level is "+t);if(o="data"+(t-i||""),!r)return o}for(var s=o,c=r.split("/"),d=0;d<c.length;d++){var u=c[d];u&&(o+=l(D(u)),s+=" && "+o)}return s},unescapeFragment:function(e){return D(decodeURIComponent(e))},unescapeJsonPointer:D,escapeFragment:function(e){return encodeURIComponent(T(e))},escapeJsonPointer:T};var r=o(["string","number","integer","boolean","null"]);function o(e){for(var t={},n=0;n<e.length;n++)t[e[n]]=!0;return t}var a=/^[a-z$_][a-z$_0-9]*$/i,s=/'|\\/g;function l(e){return"number"==typeof e?"["+e+"]":a.test(e)?"."+e:"['"+c(e)+"']"}function c(e){return e.replace(s,"\\$&").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\f/g,"\\f").replace(/\t/g,"\\t")}var d=/else\s*{\s*}/g,u=/if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g,f=/if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;var h=/[^v.]errors/g,p=/var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,m=/var errors = 0;|var vErrors = null;/g,g="return errors === 0;",y="validate.errors = null; return true;",_=/if \(errors === 0\) return data;\s*else throw new ValidationError\(vErrors\);/,v="return data;",b=/[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g,w=/if \(rootData === undefined\) rootData = data;/;function x(e){return"'"+c(e)+"'"}var E=/^\/(?:[^~]|~0|~1)*$/,k=/^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;function S(e,t){return'""'==e?t:(e+" + "+t).replace(/' \+ '/g,"")}function T(e){return e.replace(/~/g,"~0").replace(/\//g,"~1")}function D(e){return e.replace(/~1/g,"/").replace(/~0/g,"~")}},function(e,t,n){(function(e,n,i,r){!function(e,n){n(t)}(0,function(t){"use strict";const o=/(\w+)\(([\w\.\/]+)(,([\w\.]+))?\)/;function a(e){let t="",n="data/cars.json";const i={};for(const r of e){const e=r.replace(/\"/g,""),a=r.trim().startsWith(":-"),[s,l,c,d,u]=o.exec(e);"mark"===l?t=c:"data"===l?n=c:"soft"!==l&&(i[c]||(i[c]={}),i[c][l]=u||!a)}const r={};for(const e of Object.keys(i)){const t=i[e];"quantitative"===t.type&&void 0===t.zero&&void 0===t.bin&&(t.zero=!1);const n={...t.log?{type:"log"}:{},...void 0===t.zero?{}:t.zero?{zero:!0}:{zero:!1}};r[t.channel]={type:t.type,...t.aggregate?{aggregate:t.aggregate}:{},...t.field?{field:t.field}:{},...t.stack?{stack:t.stack}:{},...void 0!==t.bin?10==+t.bin?{bin:!0}:{bin:{maxbins:+t.bin}}:{},...Object.keys(n).length?{scale:n}:{}}}return{$schema:"https://vega.github.io/schema/vega-lite/v3.json",data:{url:`${n}`},mark:t,encoding:r}}const s="% ====== Expressiveness and Well-Formedness Constraints ======\n\n% === Within Encodings ===\n\n% @constraint Primitive type has to support data type.\nhard(enc_type_valid,E,F) :- type(E,quantitative), field(E,F), fieldtype(F,(string;boolean)).\nhard(enc_type_valid,E,F) :- type(E,temporal), field(E,F), not fieldtype(F,datetime).\n\n% @constraint Can only bin quantitative or ordinal.\nhard(bin_q_o,E,T) :- type(E,T), bin(E,_), T != quantitative, T != ordinal.\n\n% @constraint Can only use log with quantitative.\nhard(log_q,E) :- log(E), not type(E,quantitative).\n\n% @constraint Can only use zero with quantitative.\nhard(zero_q,E) :- zero(E), not type(E,quantitative).\n\n% @constraint Cannot use log scale with discrete (which includes binned).\nhard(log_discrete,E) :- log(E), discrete(E).\n\n% @constraint Cannot use log and zero together.\nhard(log_zero,E) :- log(E), zero(E).\n\n% @constraint Cannot use log if the data is negative or zero.\nhard(log_non_positive,E,F) :- log(E), field(E,F), extent(F,MIN,_), MIN <= 0.\n\n% @constraint Cannot bin and aggregate.\nhard(bin_and_aggregate,E) :- bin(E,_), aggregate(E,_).\n\n% @constraint Oridnal only supports min, max, and median.\nhard(aggregate_o_valid,E,A) :- type(E,ordinal), aggregate(E,A), A != min, A != max, A != median.\n\n% @constraint Temporal only supports min and max.\nhard(aggregate_t_valid,E,A) :- type(E,temporal), aggregate(E,A), A != min, A != max.\n\n% @constraint Cannot aggregate nominal.\nhard(aggregate_nominal,E) :- aggregate(E,_), type(E,nominal).\n\n% @constraint Detail cannot be aggregated.\nhard(aggregate_detail,E) :- channel(E,detail), aggregate(E,_).\n\n% @constraint Count has to be quantitative and not use a field.\nhard(count_q_without_field,E) :- aggregate(E,count), field(E,_).\nhard(count_q_without_field,E) :- aggregate(E,count), not type(E,quantitative).\n\n% @constraint Shape requires discrete and not ordered (nominal). Using ordinal would't make a difference in Vega-Lite.\nhard(shape_discrete_non_ordered,E) :- channel(E,shape), not type(E,nominal).\n\n% @constraint Detail requires nominal.\nhard(detail_non_ordered,E) :- channel(E,detail), not type(E,nominal).\n\n% @constraint Size implies order so nominal is misleading.\nhard(size_nominal) :- channel(E,size), type(E,nominal).\n\n% @constraint Do not use size when data is negative as size implies that data is positive.\nhard(size_negative,E) :- channel(E,size), enc_extent(E,MIN,MAX), MIN < 0, MAX > 0.\n\n% === Across encodings and between encodings and marks ===\n\n% @constraint Cannot use single channels twice.\nhard(repeat_channel,C):- single_channel(C), 2 { channel(_,C) }.\n\n% @constraint There has to be at least one encoding. Otherwise, the visualization doesn't show anything.\nhard(no_encodings) :- not encoding(_).\n\n% @constraint Row and column require discrete.\nhard(row_or_column_c) :- channel_continuous(row;column).\n\n% @constraint Don't use row without y. Just using y is simpler.\nhard(row_no_y) :- channel(_,row), not channel(_,y).\n\n% @constraint Don't use column without x. Just using x is simpler.\nhard(column_no_x) :- channel(_,column), not channel(_,x).\n\n% @constraint All encodings (if they have a channel) require field except if we have a count aggregate.\nhard(encoding_no_field_and_not_count,E) :- not field(E,_), not aggregate(E,count), encoding(E).\n\n% @constraint Count should not have a field. Having a field doesn't make a difference.\nhard(count_with_field,E) :- aggregate(E,count), field(E,_).\n\n% @constraint Text mark requires text channel.\nhard(text_mark_without_text_channel) :- mark(text), not channel(_,text).\n\n% @constraint Text channel requires text mark.\nhard(text_channel_without_text_mark) :- channel(_,text), not mark(text).\n\n% @constraint Point, tick, and bar require x or y channel.\nhard(point_tick_bar_without_x_or_y) :- mark(point;tick;bar), not channel(_,x), not channel(_,y).\n\n% @constraint Line and area require x and y channel.\nhard(line_area_without_x_y) :- mark(line;area), not channel(_,(x;y)).\n\n% @constraint Line and area cannot have two discrete.\nhard(line_area_with_discrete) :- mark(line;area), channel_discrete(x), channel_discrete(y).\n\n% @constraint Bar and tick cannot have both x and y continuous.\nhard(bar_tick_continuous_x_y) :- mark(bar;tick), channel_continuous(x), channel_continuous(y).\n\n% @constraint Bar, tick, line, area require some continuous variable on x or y.\nhard(bar_tick_area_line_without_continuous_x_y) :- mark(bar;tick;area;line), not channel_continuous(x), not channel_continuous(y).\n\n% @constraint Bar and area mark requires scale of continuous to start at zero.\nhard(bar_area_without_zero) :- mark(bar;area), channel(E,x), orientation(horizontal), not zero(E).\nhard(bar_area_without_zero) :- mark(bar;area), channel(E,y), orientation(vertical), not zero(E).\n\n% @constraint Shape channel requires point mark.\nhard(shape_without_point) :- channel(_,shape), not mark(point).\n\n% @constraint Size only works with some marks. Vega-Lite can also size lines, and ticks but that would violate best practices.\nhard(size_without_point_text) :- channel(_,size), not mark(point), not mark(text).\n\n% @constraint Detail requires aggregation. Detail adds a field to the group by. Detail could also be used to add information to tooltips. We may remove this later.\nhard(detail_without_agg) :- channel(_,detail), not aggregate(_,_).\n\n% @constraint Do not use log for bar or area mark as they are often misleading. We may remove this rule in the future.\nhard(area_bar_with_log) :- mark(bar;area), log(E), channel(E,(x;y)).\n\n% @constraint Rect mark needs discrete x and y.\nhard(rect_without_d_d) :- mark(rect), not is_d_d.\n\n% @constraint Don't use the same field on x and y.\nhard(same_field_x_and_y) :- { field(E,F) : channel(E,x); field(E,F) : channel(E,y) } >= 2, field(F).\n\n% @constraint Don't use count on x and y.\nhard(count_on_x_and_y):- channel(EX,x), channel(EY,y), aggregate(EX,count), aggregate(EY,count).\n\n% @constraint If we use aggregation, then all continuous fields need to be aggeragted.\nhard(aggregate_not_all_continuous):- aggregate(_,_), continuous(E), not aggregate(E,_).\n\n% @constraint Don't use count twice.\nhard(count_twice) :- { aggregate(_,count) } = 2.\n\n% === Global properties ===\n\n% @constraint Bars and area cannot overlap.\nhard(bar_area_overlap) :- mark(bar;area), overlap.\n\n% @constraint Rects shouldn't overlap. They are used for dioscrete heatmaps.\nhard(rect_overlap) :- mark(rect), overlap.\n\n% == Stacking ==\n\n% @constraint Only use stacking for bar and area.\nhard(stack_without_bar_area) :- stack(_), not mark(bar), not mark(area).\n\n% @constraint Don't stack if aggregation is not summative (summative are count, sum, distinct, valid, missing).\nhard(stack_without_summative_agg,E,A) :- stack(E,_), aggregate(E,A), not summative_aggregate_op(A).\n\n% @constraint Need to stack if we use bar, area with discrete color.\nhard(no_stack_with_bar_area_discrete_color,E) :- mark(bar;area), channel(E,color), discrete(E), not stack(_).\n\n% @constraint Can only use stack if we also use discrete color, or detail.\nhard(stack_without_discrete_color_or_detail) :- stack(_), not channel_discrete(color), not channel(_,detail).\n\n% @constraint If we use stack and detail, we also have to use quantitative color.\nhard(stack_detail_without_q_color) :- stack(_), channel(_,detail), not channel(_,color).\nhard(stack_detail_without_q_color,E) :- stack(_), channel(_,detail), channel(E,color), not aggregate(E,_).\n\n% @constraint Stack can only be on continuous.\nhard(stack_discrete,E) :- stack(E,_), discrete(E).\n\n% @constraint Stack can only be on x or y.\nhard(stack_without_x_y,E) :- stack(E,_), not channel(E,x), not channel(E,y).\n\n% @constraint Cannot use non positional continuous with stack unless it's aggregated.\nhard(stack_with_non_positional_non_agg,E,C) :- stack(_), non_positional(C), channel(E,C), not aggregate(E,_), continuous(E).\n\n% @constraint Vega-Lite currently supports 8 shapes.\nhard(shape_with_cardinality_gt_eight,E,C) :- channel(E,shape), enc_cardinality(E,C), C > 8.\n\n% @constraint At most 20 categorical colors.\nhard(color_with_cardinality_gt_twenty,E,C) :- channel(E,color), discrete(E), enc_cardinality(E,C), C > 20.\n\n% === Type checks ===\n\n% @constraint Check mark.\nhard(invalid_mark,M) :- mark(M), not marktype(M).\n\n% @constraint Check types of encoding properties.\nhard(invalid_channel,C) :- channel(_,C), not channel(C).\nhard(invalid_field,F) :- field(_,F), not field(F).\nhard(invalid_type,T) :- type(_,T), not type(T).\nhard(invalid_agg,A) :- aggregate(_,A), not aggregate_op(A).\nhard(invalid_bin,B) :- bin(_,B), not B >= 0.  % @constraint Bin has to be a natural number.\n\n% @constraint Fieldtype has to be primitive type.\nhard(invalid_fieldtype,T) :- fieldtype(_,T), not primitive_type(T).\n\n% @constraint Task has to be one of the tasks.\nhard(invalid_task,T) :- task(T), not tasks(T).\n\n% @constraint Num_rows has to be larger than 0.\nhard(invalid_num_rows,S) :- num_rows(S), S < 0.\n\n% @constraint Cardinality has to be larger than 0.\nhard(invalid_cardinality,C) :- cardinality(_,C), C < 0.\n\n% @constraint Entropy has to be positive.\nhard(invalid_entropy,E) :- entropy(_,E), E < 0.\n\n% @constraint Extent only allowed for numbers (for now).\nhard(invalid_extent_non_number,F) :- extent(F,_,_), not fieldtype(F,number).\n\n% @constraint Order has to be correct.\nhard(invalid_extent_order,MIN,MAX):- extent(_,MIN,MAX), MIN > MAX.\n\n% @constraint The name of a field cannot be the name of an encoding. This is to prevent errors coming from the shortcuts in define.lp.\nhard(encoding_field_same_name,N) :- encoding(N), field(N).\n\n",l="% After adding a soft constraint to this file, make sure to update 'weights.lp' and run 'process_softs.py'..\n\n% ====== Preferences ======\n\n% @constraint Prefer to use raw (no aggregate).\nsoft(aggregate,E) :- aggregate(E,_).\n\n% @constraint Prefer to not bin.\nsoft(bin,E) :- bin(E,_).\n\n% @constraint Prefer binning with at most 12 buckets.\nsoft(bin_high,E) :- bin(E,B), B > 12.\n\n% @constraint Prefer binning with more than 7 buckets.\nsoft(bin_low,E) :- bin(E,B), B <= 7.\n\n% @constraint Prefer to use fewer encodings.\nsoft(encoding,E) :- encoding(E).\n\n% @constraint Prefer to use fewer encodings with fields (count does not have a field).\nsoft(encoding_field,E) :- encoding(E), field(E,_).\n\n% @constraint Prefer not to use the same field twice.\nsoft(same_field_2,F) :- field(F), { field(_,F) } = 2.\n\n% @constraint Prefer not to use the same field three or more times.\n% @weight {16}\nsoft(same_field_gte3,F) :- field(F), { field(_,F) } >= 3.\n% @end\n\n% @constraint Prefer not to use count more than once.\nsoft(count_twice) :- { aggregate(_,count) } = 2.\n\n% @constraint Shape channel should not have too high cardinality.\nsoft(shape_cardinality,E) :- channel(E,shape), discrete_cardinality(E,C), C > 5.\n\n% @constraint Numbers should not be nominal.\nsoft(number_nominal,E) :- type(E,nominal), field(E,F), fieldtype(F,number).\n\n% @constraint Prefer nominal string fields\nsoft(string_non_nominal,V,E) :- type(V,E,ordinal), field(V,E,F), fieldtype(F,string).\nsoft(string_non_nominal,V,E) :- type(V,E,temporal), field(V,E,F), fieldtype(F,string).\nsoft(string_non_nominal,V,E) :- type(V,E,quantitative), field(V,E,F), fieldtype(F,string).\n\n% @constraint Binned quantitative field should not have too low cardinality.\nsoft(bin_cardinality,E) :- type(E,quantitative), bin(E,_), enc_cardinality(E,C), C < 15.\n\n% @constraint Prefer quantitative for bin.\nsoft(quant_bin,E) :- bin(E,_), not type(E,quantitative).\n\n% @constraint Plots with only nominal, ordinal, binned q, or t with time unit should add either an aggregation (e.g. count) or a quantitative field.\nsoft(only_discrete) :- not continuous(_).\n\n% @constraint Prefer not to use multiple non-positional encoding channels.\nsoft(multiple_non_pos) :- {channel(_,C): non_positional(C)} > 1.\n\n% @constraint Prefer not to use non-positional channels until all positional channels are used.\nsoft(non_positional_pref) :- channel(_,C), non_positional(C), not channel(_,(x;y)).\n\n% @constraint Aggregate plots should not use raw continuous as group by.\nsoft(aggregate_group_by_raw,E) :- aggregate(_,_), continuous(E), not aggregate(E,_).\n\n% @constraint Aggregate should also have a discrete encoding to group by.\nsoft(agg_dim) :- aggregate(_,_), not discrete(_).\n\n% @constraint Prefer not to use plot with both x and y discrete and no aggregate as it leads to occlusion.\nsoft(x_y_raw,E) :- channel(EX,x), discrete(EX), channel(EY,y), discrete(EY), not aggregate(E,_), continuous(E).\n\n% @constraint Prefer not to use log scale.\nsoft(log,E) :- log(E).\n\n% @constraint Prefer to include zero for continuous (binned doesn't need zero).\nsoft(zero,E) :- continuous(E), not zero(E).\n\n% @constraint Prefer zero size (even when binned).\nsoft(zero_size) :- channel(E,size), not zero(E).\n\n% @constraint Prefer zero positional.\nsoft(zero_positional) :- continuous(E), channel(E,(x;y)), not zero(E).\n\n% @constraint Prefer not to use zero when the difference between min and max is larger than distance to 0.\nsoft(zero_skew) :- enc_extent(E,MIN,MAX), EX = MAX - MIN, |MAX| > EX, |MIN| > EX, zero(E).\n\n% @constraint Do not include zero when the range of data includes zero.\nsoft(includes_zero) :- zero(E), extent(E,MIN,MAX), MIN < 0, MAX > 0.\n\n% @constraint Prefer to use only x instead of only y.\nsoft(only_x) :- channel(_,y), not channel(_,x).\n\n% @constraint Chart orientation for bar and tick (with and without bin). Binned fields have short labels if they are quantitative while otherwise labels can be long.\nsoft(orientation_binned) :- bin(E,_), type(E,quantitative), not channel(E,x).\n\n% @constraint Prefer not to use ordinal for fields with high cardinality.\nsoft(high_cardinality_ordinal,E) :- type(E,ordinal), discrete_cardinality(E,C), C > 30.\n\n% @constraint Prefer not to use nominal for fields with high cardinality.\nsoft(high_cardinality_nominal,E) :- type(E,nominal), enc_cardinality(E,C), C > 12.\n\n% @constraint Prefer not to use high cardinality nominal for color.\nsoft(high_cardinality_nominal_color,E) :- type(E,nominal), channel(E,color), enc_cardinality(E,C), C > 10.\n\n% @constraint Avoid high cardinality on x or column as it causes horizontal scrolling.\nsoft(horizontal_scrolling,E) :- channel(E,x), discrete_cardinality(E,C), C > 50.\nsoft(horizontal_scrolling,E) :- channel(E,columm), discrete_cardinality(E,C), C > 5.\n\n% @constraint Prefer to use temporal type with dates.\nsoft(temporal_date,E) :- field(E,F), fieldtype(F,datetime), not type(E,temporal).\n\n% @constraint Prefer quantitative for numbers with high cardinality.\nsoft(quantitative_numbers) :- field(E,F), fieldtype(F,number), cardinality(F,C), C > 20, not bin(E,_), not type(E,quantitative).\n\n% @constraint Overplotting. Prefer not to use x and y for continuous with high cardinality and low entropy without aggregation because the points will overplot.\nsoft(position_entropy,E) :- channel(E,(x;y)), continuous(E), enc_cardinality(E,C), C > 100, enc_entropy(E,EN), EN <= 12, not aggregate(E,_).\n\n% @constraint Prefer not to use size when the cardinality is large on x or y.\nsoft(high_cardinality_size,E) :- continuous(E), channel(_,size), enc_cardinality(E,C), C > 100, channel(E,(x;y)).\n\n% @constraint Prefer not to aggregate for value tasks.\nsoft(value_agg) :- task(value), aggregate(_,_).\n\n% @constraint Prefer not to use row and column for summary tasks as it makes it difficult to compare.\nsoft(facet_summary,E) :- task(summary), channel(E,row).\n\n% @constraint Positional interactions as suggested by Kim et al.\nsoft(x_row) :- channel(_,x), channel(_,row).\n\n% @constraint Positional interactions as suggested by Kim et al.\nsoft(y_row) :- channel(_,y), channel(_,row).\n\n% @constraint Positional interactions as suggested by Kim et al.\nsoft(x_column) :- channel(_,x), channel(_,column).\n\n% @constraint Positional interactions as suggested by Kim et al.\nsoft(y_column) :- channel(_,y), channel(_,column).\n\n% @constraint Entropy, primary quantitaty interactions as suggested by Kim et al.\nsoft(color_entropy_high, E) :- channel(E,color), enc_entropy(E,EN), EN > 12, type(E,quantitative), enc_interesting(E).\n\n% @constraint Entropy, primary quantitaty interactions as suggested by Kim et al.\nsoft(color_entropy_low, E) :- channel(E,color), enc_entropy(E,EN), EN <= 12, type(E,quantitative), enc_interesting(E).\n\n% @constraint Entropy, primary quantitaty interactions as suggested by Kim et al.\nsoft(size_entropy_high, E) :- channel(E,size), enc_entropy(E,EN), EN > 12, type(E,quantitative), enc_interesting(E).\n\n% @constraint Entropy, primary quantitaty interactions as suggested by Kim et al.\nsoft(size_entropy_low, E) :- channel(E,size), enc_entropy(E,EN), EN <= 12, type(E,quantitative), enc_interesting(E).\n\n% @constraint Prefer not to use continuous on x, discrete on y, and column.\nsoft(c_d_column) :- channel_continuous(x), channel_discrete(y), channel(_,column).\n\n% @constraint Prefer time on x.\nsoft(temporal_y) :- type(E,temporal), not channel(E,x).\n\n% @constraint Prefer not to overlap with DxD.\nsoft(d_d_overlap) :- is_d_d, overlap.\n\n% ====== Rankings ======\n% === Data Types ===\n\n% @constraint Prefer quantitative > ordinal > nominal.\nsoft(type_q,E) :- type(E,quantitative).\n\n% @constraint Prefer quantitative > ordinal > nominal.\nsoft(type_o,E) :- type(E,ordinal).\n\n% @constraint Prefer quantitative > ordinal > nominal.\nsoft(type_n,E) :- type(E,nominal).\n\n% === Mark types ===\n\n% @constraint Continuous by continuous for point mark.\nsoft(c_c_point) :- is_c_c, mark(point).\n\n% @constraint Continuous by continuous for line mark.\nsoft(c_c_line) :- is_c_c, mark(line).\n\n% @constraint Continuous by continuous for area mark.\nsoft(c_c_area) :- is_c_c, mark(area).\n\n% @constraint Continuous by continuous for text mark.\nsoft(c_c_text) :- is_c_c, mark(text).\n\n% @constraint Continuous by continuous for tick mark.\nsoft(c_c_tick) :- is_c_c, mark(tick).\n\n% @constraint Continuous by discrete for point mark.\nsoft(c_d_point) :- is_c_d, not no_overlap, mark(point).\n\n% @constraint Continuous by discrete for bar mark.\nsoft(c_d_bar) :- is_c_d, not no_overlap, mark(bar).\n\n% @constraint Continuous by discrete for line mark.\nsoft(c_d_line) :- is_c_d, not no_overlap, mark(line).\n\n% @constraint Continuous by discrete for area mark.\nsoft(c_d_area) :- is_c_d, not no_overlap, mark(area).\n\n% @constraint Continuous by discrete for text mark.\nsoft(c_d_text) :- is_c_d, not no_overlap, mark(text).\n\n% @constraint Continuous by discrete for tick mark.\nsoft(c_d_tick) :- is_c_d, not no_overlap, mark(tick).\n\n% @constraint Continuous by discrete for point mark with no overlap.\nsoft(c_d_no_overlap_point) :- is_c_d, no_overlap, mark(point).\n\n% @constraint Continuous by discrete for bar mark with no overlap.\nsoft(c_d_no_overlap_bar) :- is_c_d, no_overlap, mark(bar).\n\n% @constraint Continuous by discrete for line mark with no overlap.\nsoft(c_d_no_overlap_line) :- is_c_d, no_overlap, mark(line).\n\n% @constraint Continuous by discrete for area mark with no overlap.\nsoft(c_d_no_overlap_area) :- is_c_d, no_overlap, mark(area).\n\n% @constraint Continuous by discrete for text mark with no overlap.\nsoft(c_d_no_overlap_text) :- is_c_d, no_overlap, mark(text).\n\n% @constraint Continuous by discrete for tick mark with no overlap.\nsoft(c_d_no_overlap_tick) :- is_c_d, no_overlap, mark(tick).\n\n% @constraint Discrete by discrete for point mark.\nsoft(d_d_point) :- is_d_d, mark(point).\n\n% @constraint Discrete by discrete for point mark.\nsoft(d_d_text) :- is_d_d, mark(text).\n\n% @constraint Discrete by discrete for point mark.\nsoft(d_d_rect) :- is_d_d, mark(rect).\n\n% === Channel rankings à la APT ===\n\n% @constraint Continuous on x channel.\nsoft(continuous_x,E) :- channel(E,x), continuous(E).\n\n% @constraint Continuous on y channel.\nsoft(continuous_y,E) :- channel(E,y), continuous(E).\n\n% @constraint Continuous on color channel.\nsoft(continuous_color,E) :- channel(E,color), continuous(E).\n\n% @constraint Continuous on size channel.\nsoft(continuous_size,E) :- channel(E,size), continuous(E).\n\n% @constraint Continuous on text channel.\nsoft(continuous_text,E) :- channel(E,text), continuous(E).\n\n% @constraint Ordered on x channel.\nsoft(ordered_x,E) :- channel(E,x), discrete(E), not type(E,nominal).\n\n% @constraint Ordered on y channel.\nsoft(ordered_y,E) :- channel(E,y), discrete(E), not type(E,nominal).\n\n% @constraint Ordered on color channel.\nsoft(ordered_color,E) :- channel(E,color), discrete(E), not type(E,nominal).\n\n% @constraint Ordered on size channel.\nsoft(ordered_size,E) :- channel(E,size), discrete(E), not type(E,nominal).\n\n% @constraint Ordered on text channel.\nsoft(ordered_text,E) :- channel(E,text), discrete(E), not type(E,nominal).\n\n% @constraint Ordered on row channel.\nsoft(ordered_row,E) :- channel(E,row), discrete(E), not type(E,nominal).\n\n% @constraint Ordered on column channel.\nsoft(ordered_column,E) :- channel(E,column), discrete(E), not type(E,nominal).\n\n% @constraint Nominal on x channel.\nsoft(nominal_x,E) :- channel(E,x), type(E,nominal).\n\n% @constraint Nominal on y channel.\nsoft(nominal_y,E) :- channel(E,y), type(E,nominal).\n\n% @constraint Nominal on color channel.\nsoft(nominal_color,E) :- channel(E,color), type(E,nominal).\n\n% @constraint Nominal on shape channel.\nsoft(nominal_shape,E) :- channel(E,shape), type(E,nominal).\n\n% @constraint Nominal on text channel.\nsoft(nominal_text,E) :- channel(E,text), type(E,nominal).\n\n% @constraint Nominal on row channel.\nsoft(nominal_row,E) :- channel(E,row), type(E,nominal).\n\n% @constraint Nominal on column channel.\nsoft(nominal_column,E) :- channel(E,column), type(E,nominal).\n\n% @constraint Nominal on detail channel.\nsoft(nominal_detail,E) :- channel(E,detail), type(E,nominal).\n\n% @constraint Interesting on x channel.\nsoft(interesting_x,E) :- channel(E,x), enc_interesting(E).\n\n% @constraint Interesting on y channel.\nsoft(interesting_y,E) :- channel(E,y), enc_interesting(E).\n\n% @constraint Interesting on color channel.\nsoft(interesting_color,E) :- channel(E,color), enc_interesting(E).\n\n% @constraint Interesting on size channel.\nsoft(interesting_size,E) :- channel(E,size), enc_interesting(E).\n\n% @constraint Interesting on shape channel.\nsoft(interesting_shape,E) :- channel(E,shape), enc_interesting(E).\n\n% @constraint Interesting on text channel.\nsoft(interesting_text,E) :- channel(E,text), enc_interesting(E).\n\n% @constraint Interesting on row channel.\nsoft(interesting_row,E) :- channel(E,row), enc_interesting(E).\n\n% @constraint Interesting on column channel.\nsoft(interesting_column,E) :- channel(E,column), enc_interesting(E).\n\n% @constraint Interesting on detail channel.\nsoft(interesting_detail,E) :- channel(E,detail), enc_interesting(E).\n\n% === Aggregations ===\n\n% @constraint Count as aggregate op.\nsoft(aggregate_count,E) :- aggregate(E,count).\n\n% @constraint Sum as aggregate op.\nsoft(aggregate_sum,E) :- aggregate(E,sum).\n\n% @constraint Mean as aggregate op.\nsoft(aggregate_mean,E) :- aggregate(E,mean).\n\n% @constraint Median as aggregate op.\nsoft(aggregate_median,E) :- aggregate(E,median).\n\n% @constraint Min as aggregate op.\nsoft(aggregate_min,E) :- aggregate(E,min).\n\n% @constraint Max as aggregate op.\nsoft(aggregate_max,E) :- aggregate(E,max).\n\n% @constraint Standard Deviation as aggregate op.\nsoft(aggregate_stdev,E) :- aggregate(E,stdev).\n\n% === Stack ===\n\n% @constraint Zero base for stack op.\nsoft(stack_zero) :- stack(zero).\n\n% @constraint Normalize between groupbys as stack op.\nsoft(stack_normalize) :- stack(normalize).\n\n% === Task - marktype correlations ===\n\n% @constraint Point mark for value tasks.\nsoft(value_point) :- task(value), mark(point).\n\n% @constraint Bar mark for value tasks.\nsoft(value_bar) :- task(value), mark(bar).\n\n% @constraint Line mark for value tasks.\nsoft(value_line) :- task(value), mark(line).\n\n% @constraint Area mark for value tasks.\nsoft(value_area) :- task(value), mark(area).\n\n% @constraint Text mark for value tasks.\nsoft(value_text) :- task(value), mark(text).\n\n% @constraint Tick mark for value tasks.\nsoft(value_tick) :- task(value), mark(tick).\n% @end\n\n% @constraint Rect mark for value tasks.\nsoft(value_rect) :- task(value), mark(rect).\n\n% @constraint Point mark for summary tasks.\nsoft(summary_point) :- task(summary), mark(point).\n\n% @constraint Bar mark for summary tasks.\nsoft(summary_bar) :- task(summary), mark(bar).\n\n% @constraint Line mark for summary tasks.\nsoft(summary_line) :- task(summary), mark(line).\n\n% @constraint Area mark for summary tasks.\nsoft(summary_area) :- task(summary), mark(area).\n\n% @constraint Text mark for summary tasks.\nsoft(summary_text) :- task(summary), mark(text).\n\n% @constraint Tick mark for summary tasks.\nsoft(summary_tick) :- task(summary), mark(tick).\n\n% @constraint Rect mark for summary tasks.\nsoft(summary_rect) :- task(summary), mark(rect).\n\n% === Task - channel correlations ===\n\n% @constraint Continuous x for value tasks.\nsoft(value_continuous_x,E) :- task(value), channel(E,x), continuous(E), enc_interesting(E).\n\n% @constraint Continuous y for value tasks.\nsoft(value_continuous_y,E) :- task(value), channel(E,y), continuous(E), enc_interesting(E).\n\n% @constraint Continuous color for value tasks.\nsoft(value_continuous_color,E) :- task(value), channel(E,color), continuous(E), enc_interesting(E).\n\n% @constraint Continuous size for value tasks.\nsoft(value_continuous_size,E) :- task(value), channel(E,size), continuous(E), enc_interesting(E).\n\n% @constraint Continuous text for value tasks.\nsoft(value_continuous_text,E) :- task(value), channel(E,text), continuous(E), enc_interesting(E).\n\n% @constraint Discrete x for value tasks.\nsoft(value_discrete_x,E) :- task(value), channel(E,x), discrete(E), enc_interesting(E).\n\n% @constraint Discrete y for value tasks.\nsoft(value_discrete_y,E) :- task(value), channel(E,y), discrete(E), enc_interesting(E).\n\n% @constraint Discrete color for value tasks.\nsoft(value_discrete_color,E) :- task(value), channel(E,color), discrete(E), enc_interesting(E).\n\n% @constraint Discrete shape for value tasks.\nsoft(value_discrete_shape,E) :- task(value), channel(E,shape), discrete(E), enc_interesting(E).\n\n% @constraint Discrete size for value tasks.\nsoft(value_discrete_size,E) :- task(value), channel(E,size), discrete(E), enc_interesting(E).\n\n% @constraint Discrete text for value tasks.\nsoft(value_discrete_text,E) :- task(value), channel(E,text), discrete(E), enc_interesting(E).\n\n% @constraint Discrete row for value tasks.\nsoft(value_discrete_row,E) :- task(value), channel(E,row), discrete(E), enc_interesting(E).\n\n% @constraint Discrete column for value tasks.\nsoft(value_discrete_column,E) :- task(value), channel(E,column), discrete(E), enc_interesting(E).\n\n% @constraint Continuous x for summary tasks.\nsoft(summary_continuous_x,E) :- task(summary), channel(E,x), continuous(E), enc_interesting(E).\n\n% @constraint Continuous y for summary tasks.\nsoft(summary_continuous_y,E) :- task(summary), channel(E,y), continuous(E), enc_interesting(E).\n\n% @constraint Continuous color for summary tasks.\nsoft(summary_continuous_color,E) :- task(summary), channel(E,color), continuous(E), enc_interesting(E).\n\n% @constraint Continuous size for summary tasks.\nsoft(summary_continuous_size,E) :- task(summary), channel(E,size), continuous(E), enc_interesting(E).\n\n% @constraint Continuous text for summary tasks.\nsoft(summary_continuous_text,E) :- task(summary), channel(E,text), continuous(E), enc_interesting(E).\n\n% @constraint Discrete x for summary tasks.\nsoft(summary_discrete_x,E) :- task(summary), channel(E,x), discrete(E), enc_interesting(E).\n\n% @constraint Discrete y for summary tasks.\nsoft(summary_discrete_y,E) :- task(summary), channel(E,y), discrete(E), enc_interesting(E).\n\n% @constraint Discrete color for summary tasks.\nsoft(summary_discrete_color,E) :- task(summary), channel(E,color), discrete(E), enc_interesting(E).\n\n% @constraint Discrete shape for summary tasks.\nsoft(summary_discrete_shape,E) :- task(summary), channel(E,shape), discrete(E), enc_interesting(E).\n\n% @constraint Discrete size for summary tasks.\nsoft(summary_discrete_size,E) :- task(summary), channel(E,size), discrete(E), enc_interesting(E).\n\n% @constraint Discrete text for summary tasks.\nsoft(summary_discrete_text,E) :- task(summary), channel(E,text), discrete(E), enc_interesting(E).\n\n% @constraint Discrete row for summary tasks.\nsoft(summary_discrete_row,E) :- task(summary), channel(E,row), discrete(E), enc_interesting(E).\n\n% @constraint Discrete column for summary tasks.\nsoft(summary_discrete_column,E) :- task(summary), channel(E,column), discrete(E), enc_interesting(E).\n\n",c="% Weights as constants\n\n#const type_q_weight = 0.\n#const type_o_weight = 1.\n#const type_n_weight = 2.\n#const aggregate_weight = 1.\n#const bin_weight = 2.\n#const bin_high_weight = 10.\n#const bin_low_weight = 6.\n#const encoding_weight = 0.\n#const encoding_field_weight = 6.\n#const same_field_2_weight = 8.\n#const same_field_gte3_weight = 16.\n#const count_twice_weight = 50.\n#const shape_cardinality_weight = 5.\n#const number_nominal_weight = 10.\n#const string_non_nominal_weight = 2.\n#const bin_cardinality_weight = 5.\n#const quant_bin_weight = 1.\n#const agg_dim_weight = 2.\n#const only_discrete_weight = 30.\n#const multiple_non_pos_weight = 3.\n#const non_positional_pref_weight = 10.\n#const aggregate_group_by_raw_weight = 3.\n#const x_y_raw_weight = 1.\n#const log_weight = 1.\n#const zero_weight = 1.\n#const zero_size_weight = 3.\n#const zero_positional_weight = 1.\n#const zero_skew_weight = 5.\n#const includes_zero_weight = 10.\n\n#const only_x_weight = 1.\n#const orientation_binned_weight = 1.\n#const high_cardinality_ordinal_weight = 10.\n#const high_cardinality_nominal_weight = 10.\n#const high_cardinality_nominal_color_weight = 10.\n#const horizontal_scrolling_weight = 20.\n#const temporal_date_weight = 1.\n#const quantitative_numbers_weight = 2.\n#const position_entropy_weight = 2.\n#const high_cardinality_size_weight = 1.\n#const value_agg_weight = 1.\n#const facet_summary_weight = 0.\n#const x_row_weight = 1.\n#const y_row_weight = 1.\n#const x_column_weight = 1.\n#const y_column_weight = 1.\n#const color_entropy_high_weight = 0.\n#const color_entropy_low_weight = 0.\n#const size_entropy_high_weight = 0.\n#const size_entropy_low_weight = 0.\n\n#const c_d_column_weight = 5.\n#const temporal_y_weight = 1.\n#const d_d_overlap_weight = 20.\n\n#const c_c_point_weight = 0.\n#const c_c_line_weight = 20.\n#const c_c_area_weight = 20.\n#const c_c_text_weight = 2.\n#const c_c_tick_weight = 5.\n\n#const c_d_point_weight = 10.\n#const c_d_bar_weight = 20.\n#const c_d_line_weight = 20.\n#const c_d_area_weight = 20.\n#const c_d_text_weight = 50.\n#const c_d_tick_weight = 0.\n\n#const c_d_no_overlap_point_weight = 20.\n#const c_d_no_overlap_bar_weight = 0.\n#const c_d_no_overlap_line_weight = 20.\n#const c_d_no_overlap_area_weight = 20.\n#const c_d_no_overlap_text_weight = 30.\n#const c_d_no_overlap_tick_weight = 25.\n\n#const d_d_point_weight = 0.\n#const d_d_text_weight = 1.\n#const d_d_rect_weight = 0.\n\n#const continuous_x_weight = 0.\n#const continuous_y_weight = 0.\n#const continuous_color_weight = 10.\n#const continuous_size_weight = 1.\n#const continuous_text_weight = 20.\n\n#const ordered_x_weight = 1.\n#const ordered_y_weight = 0.\n#const ordered_color_weight = 8.\n#const ordered_size_weight = 10.\n#const ordered_text_weight = 32.\n#const ordered_row_weight = 10.\n#const ordered_column_weight = 10.\n\n#const nominal_x_weight = 3.\n#const nominal_y_weight = 0.\n#const nominal_color_weight = 10.\n#const nominal_shape_weight = 11.\n#const nominal_text_weight = 12.\n#const nominal_row_weight = 7.\n#const nominal_column_weight = 10.\n#const nominal_detail_weight = 20.\n\n#const interesting_x_weight = 0.\n#const interesting_y_weight = 1.\n#const interesting_color_weight = 2.\n#const interesting_size_weight = 2.\n#const interesting_shape_weight = 3.\n#const interesting_text_weight = 6.\n#const interesting_row_weight = 6.\n#const interesting_column_weight = 7.\n#const interesting_detail_weight = 20.\n\n#const aggregate_count_weight = 0.\n#const aggregate_sum_weight = 2.\n#const aggregate_mean_weight = 1.\n#const aggregate_median_weight = 3.\n#const aggregate_min_weight = 4.\n#const aggregate_max_weight = 4.\n#const aggregate_stdev_weight = 5.\n\n#const value_point_weight = 0.\n#const value_bar_weight = 0.\n#const value_line_weight = 0.\n#const value_area_weight = 0.\n#const value_text_weight = 0.\n#const value_tick_weight = 0.\n#const value_rect_weight = 0.\n#const summary_point_weight = 0.\n#const summary_bar_weight = 0.\n#const summary_line_weight = 0.\n#const summary_area_weight = 0.\n#const summary_text_weight = 0.\n#const summary_tick_weight = 0.\n#const summary_rect_weight = 0.\n\n#const value_continuous_x_weight = 0.\n#const value_continuous_y_weight = 0.\n#const value_continuous_color_weight = 0.\n#const value_continuous_size_weight = 0.\n#const value_continuous_text_weight = 0.\n#const value_discrete_x_weight = 0.\n#const value_discrete_y_weight = 0.\n#const value_discrete_color_weight = 0.\n#const value_discrete_shape_weight = 0.\n#const value_discrete_size_weight = 0.\n#const value_discrete_text_weight = 0.\n#const value_discrete_row_weight = 0.\n#const value_discrete_column_weight = 0.\n#const summary_continuous_x_weight = 0.\n#const summary_continuous_y_weight = 0.\n#const summary_continuous_color_weight = 0.\n#const summary_continuous_size_weight = 0.\n#const summary_continuous_text_weight = 0.\n#const summary_discrete_x_weight = 0.\n#const summary_discrete_y_weight = 0.\n#const summary_discrete_color_weight = 0.\n#const summary_discrete_shape_weight = 0.\n#const summary_discrete_size_weight = 0.\n#const summary_discrete_text_weight = 0.\n#const summary_discrete_row_weight = 0.\n#const summary_discrete_column_weight = 0.\n\n#const stack_zero_weight = 0.\n#const stack_normalize_weight = 1.\n\n";var d=Object.freeze({TOPK_LUA:'#script(lua)\n\nfunction main(prg)\n    local count = tonumber(prg.configuration.solve.models)\n    local backend = prg:backend()\n\n    local observer = {\n        minimize_literals = {}\n    }\n    function observer:minimize (priority, literals)\n        self.minimize_literals = literals\n    end\n\n    prg:register_observer(observer)\n\n    prg:ground({{"base", {}}}, self)\n\n    while count > 0 do\n        local cost = 0\n\n        prg.configuration.solve.models = count\n        local it = prg:solve{yield=true}\n        local ret, err = pcall(function()\n            if it:get().unsatisfiable then\n                count = 0\n                return\n            end\n\n            for m in it:iter() do\n                if m.optimality_proven then\n                    cost = m.cost[1]\n                    count = count-1\n                end\n            end\n        end)\n        it:close()\n        if not ret then\n            error(err)\n        end\n\n        if count > 0 then\n            local aux = backend:add_atom()\n            backend:add_weight_rule{{aux}, cost+1, observer.minimize_literals}\n            backend:add_rule{{aux}, {-aux}}\n        end\n    end\nend\n#end.\n\n',DEFINE:"% ====== Definitions ======\n\n% Types of marks to encode data.\nmarktype(point;bar;line;area;text;tick;rect).\n% High level data types: quantitative, ordinal, nominal, temporal.\ntype(quantitative;ordinal;nominal;temporal).\n% Basic types of the data.\nprimitive_type(string;number;boolean;datetime).\n% Supported aggregation functions.\naggregate_op(count;mean;median;min;max;stdev;sum).\nsummative_aggregate_op(count;sum).\n% Numbers of bins that can be recommended; any natural number is allowed.\nbinning(10;25;200).\n\n% Encoding channels.\nsingle_channel(x;y;color;size;shape;text;row;column).\nmulti_channel(detail).\nchannel(C) :- single_channel(C).\nchannel(C) :- multi_channel(C).\nnon_positional(color;size;shape;text;detail).\n\n% Possible tasks.\ntasks(value;summary).\n\n% Possible stackings.\nstacking(zero;normalize).\n\n% ====== Helpers ======\n\ndiscrete(E) :- type(E,(nominal;ordinal)).\ndiscrete(E) :- bin(E,_).\ncontinuous(E) :- encoding(E), not discrete(E).\n\nchannel_discrete(C) :- discrete(E), channel(E,C).\nchannel_continuous(C) :- continuous(E), channel(E,C).\n\nordered(E) :- type(E,(ordinal;quantitative)).\n\n% Fields\nfield(F) :- fieldtype(F,_).\n\n% Stacking is applied to the continuous x or y.\nstack(EC,S) :- channel(EC,(x;y)), channel(ED,(x;y)), continuous(EC), discrete(ED), stack(S).\n% X and y are continuous.\nstack(E,S) :- channel_continuous(x), channel(E,y), continuous(E), stack(S).\n\nstack(S) :- stack(_,S).\n\n% Data properties\nenc_cardinality(E,C) :- field(E,F), cardinality(F,C).\nenc_entropy(E,EN) :- field(E,F), entropy(F,EN).\nenc_interesting(E) :- field(E,F), interesting(F).\nenc_extent(E,MIN,MAX) :- field(E,F), extent(F,MIN,MAX).\n\n% Cardinality of discrete field. A binned field has the cadinality of its field.\ndiscrete_cardinality(E,CE) :- discrete(E), enc_cardinality(E,CE), channel(E,C), not bin(E,_).\ndiscrete_cardinality(E,CB) :- channel(E,C), bin(E,CB).\n\n% Define a fake soft/2 for all soft/1.\nsoft(F,_placeholder) :- soft(F).\n\n% Silence warnings about properties never appearing in head.\nentropy(0,0) :- #false.\ninteresting(0) :- #false.\nextent(0,0,0) :- #false.\nsoft(0) :- #false.\ntask(value) :- #false.\ntask(summary) :- #false.\ndata(0) :- #false.\n\n% == Chart Types ==\n\n% Continuous by continuous.\nis_c_c :- channel_continuous(x), channel_continuous(y).\n\n% Continuous by discrete (or continuous only).\nis_c_d :- channel_continuous(x), not channel_continuous(y).\nis_c_d :- channel_continuous(y), not channel_continuous(x).\n\n% Discrete by discrete.\nis_d_d :- channel_discrete(x), channel_discrete(y).\n\n% == Overlap ==\n\n% The continuous variable is a measure (it is aggregated) and all other channels are .aggregated, or we use stack -> no overlap\nnon_pos_unaggregated :- channel(E,C), non_positional(C), not aggregate(E,_).\nno_overlap :- is_c_d, continuous(E), channel(E,(x;y)), aggregate(E,_), not non_pos_unaggregated.\nno_overlap :- is_c_d, stack(_).\n\n% the size of the discrete positional encoding\ndiscrete_size(S) :- is_c_d, x_y_cardinality(_,S).\ndiscrete_size(1) :- is_c_d, channel_continuous(x), not channel(_,y).\ndiscrete_size(1) :- is_c_d, channel_continuous(y), not channel(_,x).\n\n% Data size is as small as discrete dimension -> no overlap.\nno_overlap :- is_c_d, num_rows(S), discrete_size(S).\n\n% We definitely overlap if the data size > discrete size.\noverlap :- is_c_d, not no_overlap, num_rows(S1), discrete_size(S2), S1 > S2.\n\n% helpers to go from quadratic to linear number of grounding\nx_y_cardinality(x,S) :- channel(E,x), discrete_cardinality(E,S).\nx_y_cardinality(y,S) :- channel(E,y), discrete_cardinality(E,S).\n\n% No overlap if all other dimensions are aggregated.\ndiscrete_size(S) :- is_d_d, x_y_cardinality(x,SX), x_y_cardinality(y,SY), S = SX*SY.\nno_overlap :- is_d_d, not non_pos_unaggregated.\nno_overlap :- is_d_d, num_rows(S1), discrete_size(S2), S1 <= S2.  % This cannot guarantee no overlap.\n\n% We can guarantee overlap using this rule unless we are using row / column.\nrow_col :- channel(_,(row;column)).\noverlap :- is_d_d, channel(E,C), not row_col, not no_overlap, num_rows(S1), discrete_size(S2), S1 > S2.\n\n% == Orientation ==\n\n% Orientation tells us which one is the dependent and independent variable.\n\norientation(vertical) :- mark(bar;tick;area;line), channel_discrete(x).\norientation(vertical) :- mark(area;line), channel_continuous(x), channel_continuous(y).\n\norientation(horizontal) :- mark(bar;tick;area;line), channel_discrete(y).\n\n",GENERATE:"% ====== Generators ======\n\n% encodings\n\n% maximum number for each multi channel encoding\n#const max_extra_encs = 5.\n\nobj_id(1..max_extra_encs).\n\n{ encoding(E): obj_id(E) }.\n\n:- not encoding(ID), encoding(ID-1), obj_id(ID), obj_id(ID-1).\n\n% properties of encodings\n\n% channel and type have to be present\n{ channel(E,C): channel(C) } = 1 :- encoding(E).\n{ type(E,T): type(T) } = 1 :- encoding(E).\n\n% other properties that are not required\n0 { field(E,F): field(F) } 1 :- encoding(E).\n0 { aggregate(E,A): aggregate_op(A) } 1 :- encoding(E).\n0 { bin(E,B): binning(B) } 1 :- encoding(E).\n0 { zero(E) } 1 :- encoding(E).\n0 { log(E) } 1 :- encoding(E).\n\n% pick one mark type\n\n{ mark(M) : marktype(M) } = 1.\n\n% stacking\n\n0 { stack(S): stacking(S) } 1.\n\n",HARD:s,HARD_INTEGRITY:":- hard(_).\n:- hard(_,_).\n:- hard(_,_,_).\n\n",SOFT:l,WEIGHTS:c,ASSIGN_WEIGHTS:"%% GENERATED FILE. DO NOT EDIT.\n\nsoft_weight(type_q,type_q_weight).\nsoft_weight(type_o,type_o_weight).\nsoft_weight(type_n,type_n_weight).\nsoft_weight(aggregate,aggregate_weight).\nsoft_weight(bin,bin_weight).\nsoft_weight(bin_high,bin_high_weight).\nsoft_weight(bin_low,bin_low_weight).\nsoft_weight(encoding,encoding_weight).\nsoft_weight(encoding_field,encoding_field_weight).\nsoft_weight(same_field_2,same_field_2_weight).\nsoft_weight(same_field_gte3,same_field_gte3_weight).\nsoft_weight(count_twice,count_twice_weight).\nsoft_weight(shape_cardinality,shape_cardinality_weight).\nsoft_weight(number_nominal,number_nominal_weight).\nsoft_weight(string_non_nominal,string_non_nominal_weight).\nsoft_weight(bin_cardinality,bin_cardinality_weight).\nsoft_weight(quant_bin,quant_bin_weight).\nsoft_weight(agg_dim,agg_dim_weight).\nsoft_weight(only_discrete,only_discrete_weight).\nsoft_weight(multiple_non_pos,multiple_non_pos_weight).\nsoft_weight(non_positional_pref,non_positional_pref_weight).\nsoft_weight(aggregate_group_by_raw,aggregate_group_by_raw_weight).\nsoft_weight(x_y_raw,x_y_raw_weight).\nsoft_weight(log,log_weight).\nsoft_weight(zero,zero_weight).\nsoft_weight(zero_size,zero_size_weight).\nsoft_weight(zero_positional,zero_positional_weight).\nsoft_weight(zero_skew,zero_skew_weight).\nsoft_weight(includes_zero,includes_zero_weight).\nsoft_weight(only_x,only_x_weight).\nsoft_weight(orientation_binned,orientation_binned_weight).\nsoft_weight(high_cardinality_ordinal,high_cardinality_ordinal_weight).\nsoft_weight(high_cardinality_nominal,high_cardinality_nominal_weight).\nsoft_weight(high_cardinality_nominal_color,high_cardinality_nominal_color_weight).\nsoft_weight(horizontal_scrolling,horizontal_scrolling_weight).\nsoft_weight(temporal_date,temporal_date_weight).\nsoft_weight(quantitative_numbers,quantitative_numbers_weight).\nsoft_weight(position_entropy,position_entropy_weight).\nsoft_weight(high_cardinality_size,high_cardinality_size_weight).\nsoft_weight(value_agg,value_agg_weight).\nsoft_weight(facet_summary,facet_summary_weight).\nsoft_weight(x_row,x_row_weight).\nsoft_weight(y_row,y_row_weight).\nsoft_weight(x_column,x_column_weight).\nsoft_weight(y_column,y_column_weight).\nsoft_weight(color_entropy_high,color_entropy_high_weight).\nsoft_weight(color_entropy_low,color_entropy_low_weight).\nsoft_weight(size_entropy_high,size_entropy_high_weight).\nsoft_weight(size_entropy_low,size_entropy_low_weight).\nsoft_weight(c_d_column,c_d_column_weight).\nsoft_weight(temporal_y,temporal_y_weight).\nsoft_weight(d_d_overlap,d_d_overlap_weight).\nsoft_weight(c_c_point,c_c_point_weight).\nsoft_weight(c_c_line,c_c_line_weight).\nsoft_weight(c_c_area,c_c_area_weight).\nsoft_weight(c_c_text,c_c_text_weight).\nsoft_weight(c_c_tick,c_c_tick_weight).\nsoft_weight(c_d_point,c_d_point_weight).\nsoft_weight(c_d_bar,c_d_bar_weight).\nsoft_weight(c_d_line,c_d_line_weight).\nsoft_weight(c_d_area,c_d_area_weight).\nsoft_weight(c_d_text,c_d_text_weight).\nsoft_weight(c_d_tick,c_d_tick_weight).\nsoft_weight(c_d_no_overlap_point,c_d_no_overlap_point_weight).\nsoft_weight(c_d_no_overlap_bar,c_d_no_overlap_bar_weight).\nsoft_weight(c_d_no_overlap_line,c_d_no_overlap_line_weight).\nsoft_weight(c_d_no_overlap_area,c_d_no_overlap_area_weight).\nsoft_weight(c_d_no_overlap_text,c_d_no_overlap_text_weight).\nsoft_weight(c_d_no_overlap_tick,c_d_no_overlap_tick_weight).\nsoft_weight(d_d_point,d_d_point_weight).\nsoft_weight(d_d_text,d_d_text_weight).\nsoft_weight(d_d_rect,d_d_rect_weight).\nsoft_weight(continuous_x,continuous_x_weight).\nsoft_weight(continuous_y,continuous_y_weight).\nsoft_weight(continuous_color,continuous_color_weight).\nsoft_weight(continuous_size,continuous_size_weight).\nsoft_weight(continuous_text,continuous_text_weight).\nsoft_weight(ordered_x,ordered_x_weight).\nsoft_weight(ordered_y,ordered_y_weight).\nsoft_weight(ordered_color,ordered_color_weight).\nsoft_weight(ordered_size,ordered_size_weight).\nsoft_weight(ordered_text,ordered_text_weight).\nsoft_weight(ordered_row,ordered_row_weight).\nsoft_weight(ordered_column,ordered_column_weight).\nsoft_weight(nominal_x,nominal_x_weight).\nsoft_weight(nominal_y,nominal_y_weight).\nsoft_weight(nominal_color,nominal_color_weight).\nsoft_weight(nominal_shape,nominal_shape_weight).\nsoft_weight(nominal_text,nominal_text_weight).\nsoft_weight(nominal_row,nominal_row_weight).\nsoft_weight(nominal_column,nominal_column_weight).\nsoft_weight(nominal_detail,nominal_detail_weight).\nsoft_weight(interesting_x,interesting_x_weight).\nsoft_weight(interesting_y,interesting_y_weight).\nsoft_weight(interesting_color,interesting_color_weight).\nsoft_weight(interesting_size,interesting_size_weight).\nsoft_weight(interesting_shape,interesting_shape_weight).\nsoft_weight(interesting_text,interesting_text_weight).\nsoft_weight(interesting_row,interesting_row_weight).\nsoft_weight(interesting_column,interesting_column_weight).\nsoft_weight(interesting_detail,interesting_detail_weight).\nsoft_weight(aggregate_count,aggregate_count_weight).\nsoft_weight(aggregate_sum,aggregate_sum_weight).\nsoft_weight(aggregate_mean,aggregate_mean_weight).\nsoft_weight(aggregate_median,aggregate_median_weight).\nsoft_weight(aggregate_min,aggregate_min_weight).\nsoft_weight(aggregate_max,aggregate_max_weight).\nsoft_weight(aggregate_stdev,aggregate_stdev_weight).\nsoft_weight(value_point,value_point_weight).\nsoft_weight(value_bar,value_bar_weight).\nsoft_weight(value_line,value_line_weight).\nsoft_weight(value_area,value_area_weight).\nsoft_weight(value_text,value_text_weight).\nsoft_weight(value_tick,value_tick_weight).\nsoft_weight(value_rect,value_rect_weight).\nsoft_weight(summary_point,summary_point_weight).\nsoft_weight(summary_bar,summary_bar_weight).\nsoft_weight(summary_line,summary_line_weight).\nsoft_weight(summary_area,summary_area_weight).\nsoft_weight(summary_text,summary_text_weight).\nsoft_weight(summary_tick,summary_tick_weight).\nsoft_weight(summary_rect,summary_rect_weight).\nsoft_weight(value_continuous_x,value_continuous_x_weight).\nsoft_weight(value_continuous_y,value_continuous_y_weight).\nsoft_weight(value_continuous_color,value_continuous_color_weight).\nsoft_weight(value_continuous_size,value_continuous_size_weight).\nsoft_weight(value_continuous_text,value_continuous_text_weight).\nsoft_weight(value_discrete_x,value_discrete_x_weight).\nsoft_weight(value_discrete_y,value_discrete_y_weight).\nsoft_weight(value_discrete_color,value_discrete_color_weight).\nsoft_weight(value_discrete_shape,value_discrete_shape_weight).\nsoft_weight(value_discrete_size,value_discrete_size_weight).\nsoft_weight(value_discrete_text,value_discrete_text_weight).\nsoft_weight(value_discrete_row,value_discrete_row_weight).\nsoft_weight(value_discrete_column,value_discrete_column_weight).\nsoft_weight(summary_continuous_x,summary_continuous_x_weight).\nsoft_weight(summary_continuous_y,summary_continuous_y_weight).\nsoft_weight(summary_continuous_color,summary_continuous_color_weight).\nsoft_weight(summary_continuous_size,summary_continuous_size_weight).\nsoft_weight(summary_continuous_text,summary_continuous_text_weight).\nsoft_weight(summary_discrete_x,summary_discrete_x_weight).\nsoft_weight(summary_discrete_y,summary_discrete_y_weight).\nsoft_weight(summary_discrete_color,summary_discrete_color_weight).\nsoft_weight(summary_discrete_shape,summary_discrete_shape_weight).\nsoft_weight(summary_discrete_size,summary_discrete_size_weight).\nsoft_weight(summary_discrete_text,summary_discrete_text_weight).\nsoft_weight(summary_discrete_row,summary_discrete_row_weight).\nsoft_weight(summary_discrete_column,summary_discrete_column_weight).\nsoft_weight(stack_zero,stack_zero_weight).\nsoft_weight(stack_normalize,stack_normalize_weight).\n\n",OPTIMIZE:"% Minimize the feature weight\n\n#minimize { W,F,Q: soft_weight(F,W), soft(F,Q); #inf,F,Q: soft(F,Q), not soft_weight(F,_); #inf,F: hard(F); #inf,F,Q: hard(F,Q); #inf,F,Q1,Q2: hard(F,Q1,Q2) }.\n\n",OUTPUT:"% ====== Output ======\n\n#show data/1.\n\n#show mark/1.\n\n#show type/2.\n#show channel/2.\n#show field/2.\n#show aggregate/2.\n#show bin/2.\n#show stack/2.\n\n#show log/1.\n#show zero/1.\n\n#show soft/2.\n\n"});function u(e,t){const n=e.match(f);if(!n)throw Error("invalid constraints");const i=n.map(e=>{const t=function(e){const t=e.match(h);if(t){const e=t[0],n=p.exec(e);if(n)return{description:n[1]}}return null}(e),n=function(e){const t=e.match(m);if(t){const e=t.join("\n"),n=g.exec(e);if(!n)throw Error(`invalid asp: ${e}`);const i=n[1],r=y.exec(e);if(!r)throw Error(`invalid asp: ${e}`);const o=r[1];return{type:i,name:o,asp:e}}return null}(e);return{...t,...n}});if(t){const e=t.match(_),n=function(e){const t={};for(const n of e){const e=v.exec(n);if(!e)throw Error(`invalid weight: ${n}`);const i=e[1],r=b.exec(n);if(!r)throw Error(`invalid weight: ${n}`);const o=+r[1];t[i]=o}return t}(e);if(!e)throw Error("invalid weights");for(const e of i){const t=e.name;e.weight=n[t]}}return i}const f=/%\s*@constraint(?:(.+)\n)+/g,h=/(%.*\n)+/g,p=/@constraint\s+(.*)/,m=/^[^%].*/gm,g=/(\w+)\(/,y=/\((\w+),?.*?\)/,_=/#const.*/g,v=/#const\s+(\w+?)_weight/,b=/=\s*(\d+)/,w="?";function x(e){return e!==w?e:null}function E(e){return"*"!==e?e:null}"undefined"!=typeof window?window:void 0!==e||"undefined"!=typeof self&&self;function k(e,t){return e(t={exports:{}},t.exports),t.exports}var S=k(function(e){var t=e.exports;t.namedfunc=function(e,t){return t.__name__=e,t},t.name=function(e){return null==e?null:e.__name__},t.identity=function(e){return e},t.true=t.namedfunc("true",function(){return!0}),t.false=t.namedfunc("false",function(){return!1}),t.duplicate=function(e){return JSON.parse(JSON.stringify(e))},t.equal=function(e,t){return JSON.stringify(e)===JSON.stringify(t)},t.extend=function(e){for(var t,n,i=1,r=arguments.length;i<r;++i)for(n in t=arguments[i])e[n]=t[n];return e},t.length=function(e){return null!=e&&null!=e.length?e.length:null},t.keys=function(e){var t,n=[];for(t in e)n.push(t);return n},t.vals=function(e){var t,n=[];for(t in e)n.push(e[t]);return n},t.toMap=function(e,n){return(n=t.$(n))?e.reduce(function(e,t){return e[n(t)]=1,e},{}):e.reduce(function(e,t){return e[t]=1,e},{})},t.keystr=function(e){var t=e.length;if(!t)return"";for(var n=String(e[0]),i=1;i<t;++i)n+="|"+String(e[i]);return n};var i=Object.prototype.toString;t.isObject=function(e){return e===Object(e)},t.isFunction=function(e){return"[object Function]"===i.call(e)},t.isString=function(e){return"string"==typeof value||"[object String]"===i.call(e)},t.isArray=Array.isArray||function(e){return"[object Array]"===i.call(e)},t.isNumber=function(e){return"number"==typeof e||"[object Number]"===i.call(e)},t.isBoolean=function(e){return!0===e||!1===e||"[object Boolean]"==i.call(e)},t.isDate=function(e){return"[object Date]"===i.call(e)},t.isValid=function(e){return null!=e&&e==e},t.isBuffer="function"==typeof n&&n.isBuffer||t.false,t.number=function(e){return null==e||""===e?null:+e},t.boolean=function(e){return null==e||""===e?null:"false"!==e&&!!e},t.date=function(e,t){var n=t||Date;return null==e||""===e?null:n.parse(e)},t.array=function(e){return null!=e?t.isArray(e)?e:[e]:[]},t.str=function(e){return t.isArray(e)?"["+e.map(t.str)+"]":t.isObject(e)||t.isString(e)?JSON.stringify(e).replace("\u2028","\\u2028").replace("\u2029","\\u2029"):e};var r=/\[(.*?)\]|[^.\[]+/g;function o(e,t){var n,i="";for(n=0;n<e;++n)i+=t;return i}function a(e,t,n){var i=0,r=e.split(s);return(e=n?(r=r.reverse()).filter(function(e){return(i+=e.length)<=t}).reverse():r.filter(function(e){return(i+=e.length)<=t})).length?e.join("").trim():r[0].slice(0,t)}t.field=function(e){return String(e).match(r).map(function(e){return"["!==e[0]?e:"'"!==e[1]&&'"'!==e[1]?e.slice(1,-1):e.slice(2,-2).replace(/\\(["'])/g,"$1")})},t.accessor=function(e){return null==e||t.isFunction(e)?e:t.namedfunc(e,Function("x","return x["+t.field(e).map(t.str).join("][")+"];"))},t.$=t.accessor,t.mutator=function(e){var n;return t.isString(e)&&(n=t.field(e)).length>1?function(e,t){for(var i=0;i<n.length-1;++i)e=e[n[i]];e[n[i]]=t}:function(t,n){t[e]=n}},t.$func=function(e,n){return function(i){i=t.$(i)||t.identity;var r=e+(t.name(i)?"_"+t.name(i):"");return t.namedfunc(r,function(e){return n(i(e))})}},t.$valid=t.$func("valid",t.isValid),t.$length=t.$func("length",t.length),t.$in=function(e,n){e=t.$(e);var i=t.isArray(n)?t.toMap(n):n;return function(t){return!!i[e(t)]}},t.comparator=function(e){var n=[];return void 0===e&&(e=[]),e=t.array(e).map(function(e){var i=1;return"-"===e[0]?(i=-1,e=e.slice(1)):"+"===e[0]&&(i=1,e=e.slice(1)),n.push(i),t.accessor(e)}),function(i,r){var o,a,s,l;for(o=0,a=e.length;o<a;++o)if(s=e[o],l=t.cmp(s(i),s(r)))return l*n[o];return 0}},t.cmp=function(e,t){return(e<t||null==e)&&null!=t?-1:(e>t||null==t)&&null!=e?1:(t=t instanceof Date?+t:t,(e=e instanceof Date?+e:e)!==e&&t==t?-1:t!=t&&e==e?1:0)},t.numcmp=function(e,t){return e-t},t.stablesort=function(e,t,n){var i=e.reduce(function(e,t,i){return e[n(t)]=i,e},{});return e.sort(function(e,r){var o=t(e),a=t(r);return o<a?-1:o>a?1:i[n(e)]-i[n(r)]}),e},t.permute=function(e){for(var t,n,i=e.length;i;)n=Math.floor(Math.random()*i--),t=e[i],e[i]=e[n],e[n]=t},t.pad=function(e,t,n,i){i=i||" ";var r=t-e.length;if(r<=0)return e;switch(n){case"left":return o(r,i)+e;case"middle":case"center":return o(Math.floor(r/2),i)+e+o(Math.ceil(r/2),i);default:return e+o(r,i)}},t.truncate=function(e,t,n,i,r){var o=e.length;if(o<=t)return e;r=void 0!==r?String(r):"…";var s=Math.max(0,t-r.length);switch(n){case"left":return r+(i?a(e,s,1):e.slice(o-s));case"middle":case"center":var l=Math.ceil(s/2),c=Math.floor(s/2);return(i?a(e,l):e.slice(0,l))+r+(i?a(e,c,1):e.slice(o-c));default:return(i?a(e,s):e.slice(0,s))+r}};var s=/([\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u2028\u2029\u3000\uFEFF])/}),T="__types__",D={boolean:S.boolean,integer:S.number,number:S.number,date:S.date,string:function(e){return null==e||""===e?null:e+""}},A={boolean:function(e){return"true"===e||"false"===e||S.isBoolean(e)},integer:function(e){return A.number(e)&&(e=+e)==~~e},number:function(e){return!isNaN(+e)&&!S.isDate(e)},date:function(e){return!isNaN(Date.parse(e))}};function P(e){return S.keys(e)}function O(e){return"["+e+"]"}function $(e,t){var n,i,r;if(e=S.array(e),t=S.$(t),e[T]&&(n=t(e[T]),S.isString(n)))return n;for(i=0,r=e.length;!S.isValid(n)&&i<r;++i)n=t?t(e[i]):e[i];return S.isDate(n)?"date":S.isNumber(n)?"number":S.isBoolean(n)?"boolean":S.isString(n)?"string":null}function C(e,t,n){var i,r,o;e=S.array(e),t=S.$(t);var a=["boolean","integer","number","date"];for(i=0;i<e.length;++i){for(o=t?t(e[i]):e[i],r=0;r<a.length;++r)n&&n.test(o)||!S.isValid(o)||A[a[r]](o)||(a.splice(r,1),r-=1);if(0===a.length)return"string"}return a[0]}$.annotation=function(e,t){if(!t)return e&&e[T]||null;e[T]=t},$.all=function(e,t){if(e.length){var n=t?S.identity:(t=P(e[0]),O);return t.reduce(function(t,i){return t[i]=$(e,n(i)),t},{})}},$.infer=C,$.inferAll=function(e,t,n){var i=t?S.identity:(t=P(e[0]),O);return t.reduce(function(t,r){return t[r]=C(e,i(r),n),t},{})},$.parsers=D;var F=$,j=k(function(e,t){!function(e){function t(e){return new i(e)}function n(e){return new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}")}function i(e){var t=new RegExp('["'+e+"\n]"),i=e.charCodeAt(0);function r(t){return t.map(o).join(e)}function o(e){return t.test(e)?'"'+e.replace(/\"/g,'""')+'"':e}this.parse=function(e,t){var i,r,o=this.parseRows(e,function(e,o){if(i)return i(e,o-1);r=e,i=t?function(e,t){var i=n(e);return function(n,r){return t(i(n),r,e)}}(e,t):n(e)});return o.columns=r,o},this.parseRows=function(e,t){var n,r,o={},a={},s=[],l=e.length,c=0,d=0;function u(){if(c>=l)return a;if(r)return r=!1,o;var t,n=c;if(34===e.charCodeAt(n)){for(var s=n;s++<l;)if(34===e.charCodeAt(s)){if(34!==e.charCodeAt(s+1))break;++s}return c=s+2,13===(t=e.charCodeAt(s+1))?(r=!0,10===e.charCodeAt(s+2)&&++c):10===t&&(r=!0),e.slice(n+1,s).replace(/""/g,'"')}for(;c<l;){var d=1;if(10===(t=e.charCodeAt(c++)))r=!0;else if(13===t)r=!0,10===e.charCodeAt(c)&&(++c,++d);else if(t!==i)continue;return e.slice(n,c-d)}return e.slice(n)}for(;(n=u())!==a;){for(var f=[];n!==o&&n!==a;)f.push(n),n=u();t&&null==(f=t(f,d++))||s.push(f)}return s},this.format=function(t,n){return null==n&&(n=function(e){var t=Object.create(null),n=[];return e.forEach(function(e){for(var i in e)i in t||n.push(t[i]=i)}),n}(t)),[n.map(o).join(e)].concat(t.map(function(t){return n.map(function(e){return o(t[e])}).join(e)})).join("\n")},this.formatRows=function(e){return e.map(r).join("\n")}}t.prototype=i.prototype;var r=t(","),o=t("\t");e.version="0.1.14",e.dsv=t,e.csv=r,e.tsv=o}(t)});function I(e,t){if(e){var n=t.header;e=(n?n.join(t.delimiter)+"\n":"")+e}return j.dsv(t.delimiter).parse(e)}I.delimiter=function(e){var t={delimiter:e};return function(e,n){return I(e,n?S.extend(n,t):t)}};var M=I,z=function(e,t){var n=S.isObject(e)&&!S.isBuffer(e)?e:JSON.parse(e);return t&&t.property&&(n=S.accessor(t.property)(n)),n};function N(e){return e}function U(e){if(null==e)return N;var t,n,i=e.scale[0],r=e.scale[1],o=e.translate[0],a=e.translate[1];return function(e,s){s||(t=n=0);var l=2,c=e.length,d=new Array(c);for(d[0]=(t+=e[0])*i+o,d[1]=(n+=e[1])*r+a;l<c;)d[l]=e[l],++l;return d}}function R(e){var t,n=U(e.transform),i=1/0,r=i,o=-i,a=-i;function s(e){(e=n(e))[0]<i&&(i=e[0]),e[0]>o&&(o=e[0]),e[1]<r&&(r=e[1]),e[1]>a&&(a=e[1])}function l(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(l);break;case"Point":s(e.coordinates);break;case"MultiPoint":e.coordinates.forEach(s)}}for(t in e.arcs.forEach(function(e){for(var t,s=-1,l=e.length;++s<l;)(t=n(e[s],s))[0]<i&&(i=t[0]),t[0]>o&&(o=t[0]),t[1]<r&&(r=t[1]),t[1]>a&&(a=t[1])}),e.objects)l(e.objects[t]);return[i,r,o,a]}function L(e,t){var n=t.id,i=t.bbox,r=null==t.properties?{}:t.properties,o=q(e,t);return null==n&&null==i?{type:"Feature",properties:r,geometry:o}:null==i?{type:"Feature",id:n,properties:r,geometry:o}:{type:"Feature",id:n,bbox:i,properties:r,geometry:o}}function q(e,t){var n=U(e.transform),i=e.arcs;function r(e,t){t.length&&t.pop();for(var r=i[e<0?~e:e],o=0,a=r.length;o<a;++o)t.push(n(r[o],o));e<0&&function(e,t){for(var n,i=e.length,r=i-t;r<--i;)n=e[r],e[r++]=e[i],e[i]=n}(t,a)}function o(e){return n(e)}function a(e){for(var t=[],n=0,i=e.length;n<i;++n)r(e[n],t);return t.length<2&&t.push(t[0]),t}function s(e){for(var t=a(e);t.length<4;)t.push(t[0]);return t}function l(e){return e.map(s)}return function e(t){var n,i=t.type;switch(i){case"GeometryCollection":return{type:i,geometries:t.geometries.map(e)};case"Point":n=o(t.coordinates);break;case"MultiPoint":n=t.coordinates.map(o);break;case"LineString":n=a(t.arcs);break;case"MultiLineString":n=t.arcs.map(a);break;case"Polygon":n=l(t.arcs);break;case"MultiPolygon":n=t.arcs.map(l);break;default:return null}return{type:i,coordinates:n}}(t)}function B(e,t){var n={},i={},r={},o=[],a=-1;function s(e,t){for(var i in e){var r=e[i];delete t[r.start],delete r.start,delete r.end,r.forEach(function(e){n[e<0?~e:e]=1}),o.push(r)}}return t.forEach(function(n,i){var r,o=e.arcs[n<0?~n:n];o.length<3&&!o[1][0]&&!o[1][1]&&(r=t[++a],t[a]=n,t[i]=r)}),t.forEach(function(t){var n,o,a=function(t){var n,i=e.arcs[t<0?~t:t],r=i[0];e.transform?(n=[0,0],i.forEach(function(e){n[0]+=e[0],n[1]+=e[1]})):n=i[i.length-1];return t<0?[n,r]:[r,n]}(t),s=a[0],l=a[1];if(n=r[s])if(delete r[n.end],n.push(t),n.end=l,o=i[l]){delete i[o.start];var c=o===n?n:n.concat(o);i[c.start=n.start]=r[c.end=o.end]=c}else i[n.start]=r[n.end]=n;else if(n=i[l])if(delete i[n.start],n.unshift(t),n.start=s,o=r[s]){delete r[o.end];var d=o===n?n:o.concat(n);i[d.start=o.start]=r[d.end=n.end]=d}else i[n.start]=r[n.end]=n;else i[(n=[t]).start=s]=r[n.end=l]=n}),s(r,i),s(i,r),t.forEach(function(e){n[e<0?~e:e]||o.push([e])}),o}function V(e,t,n){var i,r,o;if(arguments.length>1)i=function(e,t,n){var i,r=[],o=[];function a(e){var t=e<0?~e:e;(o[t]||(o[t]=[])).push({i:e,g:i})}function s(e){e.forEach(a)}function l(e){e.forEach(s)}return function e(t){switch(i=t,t.type){case"GeometryCollection":t.geometries.forEach(e);break;case"LineString":s(t.arcs);break;case"MultiLineString":case"Polygon":l(t.arcs);break;case"MultiPolygon":!function(e){e.forEach(l)}(t.arcs)}}(t),o.forEach(null==n?function(e){r.push(e[0].i)}:function(e){n(e[0].g,e[e.length-1].g)&&r.push(e[0].i)}),r}(0,t,n);else for(r=0,i=new Array(o=e.arcs.length);r<o;++r)i[r]=r;return{type:"MultiLineString",arcs:B(e,i)}}function W(e,t){var n={},i=[],r=[];function o(e){e.forEach(function(t){t.forEach(function(t){(n[t=t<0?~t:t]||(n[t]=[])).push(e)})}),i.push(e)}function a(t){return function(e){for(var t,n=-1,i=e.length,r=e[i-1],o=0;++n<i;)t=r,r=e[n],o+=t[0]*r[1]-t[1]*r[0];return Math.abs(o)}(q(e,{type:"Polygon",arcs:[t]}).coordinates[0])}return t.forEach(function e(t){switch(t.type){case"GeometryCollection":t.geometries.forEach(e);break;case"Polygon":o(t.arcs);break;case"MultiPolygon":t.arcs.forEach(o)}}),i.forEach(function(e){if(!e._){var t=[],i=[e];for(e._=1,r.push(t);e=i.pop();)t.push(e),e.forEach(function(e){e.forEach(function(e){n[e<0?~e:e].forEach(function(e){e._||(e._=1,i.push(e))})})})}}),i.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:r.map(function(t){var i,r=[];if(t.forEach(function(e){e.forEach(function(e){e.forEach(function(e){n[e<0?~e:e].length<2&&r.push(e)})})}),(i=(r=B(e,r)).length)>1)for(var o,s,l=1,c=a(r[0]);l<i;++l)(o=a(r[l]))>c&&(s=r[0],r[0]=r[l],r[l]=s,c=o);return r})}}function Y(e,t){for(var n=0,i=e.length;n<i;){var r=n+i>>>1;e[r]<t?n=r+1:i=r}return n}function H(e){if(null==e)return N;var t,n,i=e.scale[0],r=e.scale[1],o=e.translate[0],a=e.translate[1];return function(e,s){s||(t=n=0);var l=2,c=e.length,d=new Array(c),u=Math.round((e[0]-o)/i),f=Math.round((e[1]-a)/r);for(d[0]=u-t,t=u,d[1]=f-n,n=f;l<c;)d[l]=e[l],++l;return d}}var J=Object.freeze({bbox:R,feature:function(e,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return L(e,t)})}:L(e,t)},mesh:function(e){return q(e,V.apply(this,arguments))},meshArcs:V,merge:function(e){return q(e,W.apply(this,arguments))},mergeArcs:W,neighbors:function(e){var t={},n=e.map(function(){return[]});function i(e,n){e.forEach(function(e){e<0&&(e=~e);var i=t[e];i?i.push(n):t[e]=[n]})}function r(e,t){e.forEach(function(e){i(e,t)})}var o={LineString:i,MultiLineString:r,Polygon:r,MultiPolygon:function(e,t){e.forEach(function(e){r(e,t)})}};for(var a in e.forEach(function e(t,n){"GeometryCollection"===t.type?t.geometries.forEach(function(t){e(t,n)}):t.type in o&&o[t.type](t.arcs,n)}),t)for(var s=t[a],l=s.length,c=0;c<l;++c)for(var d=c+1;d<l;++d){var u,f=s[c],h=s[d];(u=n[f])[a=Y(u,h)]!==h&&u.splice(a,0,h),(u=n[h])[a=Y(u,f)]!==f&&u.splice(a,0,f)}return n},quantize:function(e,t){if(e.transform)throw new Error("already quantized");if(t&&t.scale)s=e.bbox;else{if(!((n=Math.floor(t))>=2))throw new Error("n must be ≥2");var n,i=(s=e.bbox||R(e))[0],r=s[1],o=s[2],a=s[3];t={scale:[o-i?(o-i)/(n-1):1,a-r?(a-r)/(n-1):1],translate:[i,r]}}var s,l,c=H(t),d=e.objects,u={};function f(e){return c(e)}function h(e){var t;switch(e.type){case"GeometryCollection":t={type:"GeometryCollection",geometries:e.geometries.map(h)};break;case"Point":t={type:"Point",coordinates:f(e.coordinates)};break;case"MultiPoint":t={type:"MultiPoint",coordinates:e.coordinates.map(f)};break;default:return e}return null!=e.id&&(t.id=e.id),null!=e.bbox&&(t.bbox=e.bbox),null!=e.properties&&(t.properties=e.properties),t}for(l in d)u[l]=h(d[l]);return{type:"Topology",bbox:s,transform:t,objects:u,arcs:e.arcs.map(function(e){var t,n=0,i=1,r=e.length,o=new Array(r);for(o[0]=c(e[0],0);++n<r;)((t=c(e[n],n))[0]||t[1])&&(o[i++]=t);return 1===i&&(o[i++]=[0,0]),o.length=i,o})}},transform:U,untransform:H}),G=function(e,t){var n=G.topojson;if(null==n)throw Error("TopoJSON library not loaded.");var i,r=z(e,t);if(t&&t.feature){if(i=r.objects[t.feature])return n.feature(r,i).features;throw Error("Invalid TopoJSON object: "+t.feature)}if(t&&t.mesh){if(i=r.objects[t.mesh])return[n.mesh(r,r.objects[t.mesh])];throw Error("Invalid TopoJSON object: "+t.mesh)}throw Error("Missing TopoJSON feature or mesh parameter.")};G.topojson=J;var X={json:z,topojson:G,treejson:function(e,t){return function(e,t){var n=t&&t.children||"children",i=t&&t.parent||"parent",r=[];return function e(t,o){t[i]=o,r.push(t);var a=t[n];if(a)for(var s=0;s<a.length;++s)e(a[s],t)}(e,null),r.root=e,r}(z(e,t),t)},dsv:M,csv:M.delimiter(","),tsv:M.delimiter("\t")},Q=k(function(e,t){!function(e){var t=new Date,n=new Date;function i(e,r,o,a){function s(t){return e(t=new Date(+t)),t}return s.floor=s,s.round=function(t){var n=new Date(+t),i=new Date(t-1);return e(n),e(i),r(i,1),t-n<i-t?n:i},s.ceil=function(t){return e(t=new Date(t-1)),r(t,1),t},s.offset=function(e,t){return r(e=new Date(+e),null==t?1:Math.floor(t)),e},s.range=function(t,n,i){var o=[];if(t=new Date(t-1),n=new Date(+n),i=null==i?1:Math.floor(i),!(t<n&&i>0))return o;for(r(t,1),e(t),t<n&&o.push(new Date(+t));r(t,i),e(t),t<n;)o.push(new Date(+t));return o},s.filter=function(t){return i(function(n){for(;e(n),!t(n);)n.setTime(n-1)},function(e,n){for(;--n>=0;)for(;r(e,1),!t(e););})},o&&(s.count=function(i,r){return t.setTime(+i),n.setTime(+r),e(t),e(n),Math.floor(o(t,n))},s.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?s.filter(a?function(t){return a(t)%e==0}:function(t){return s.count(0,t)%e==0}):s:null}),s}var r=i(function(){},function(e,t){e.setTime(+e+t)},function(e,t){return t-e});r.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?i(function(t){t.setTime(Math.floor(t/e)*e)},function(t,n){t.setTime(+t+n*e)},function(t,n){return(n-t)/e}):r:null};var o=i(function(e){e.setMilliseconds(0)},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getSeconds()}),a=i(function(e){e.setSeconds(0,0)},function(e,t){e.setTime(+e+6e4*t)},function(e,t){return(t-e)/6e4},function(e){return e.getMinutes()}),s=i(function(e){e.setMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getHours()}),l=i(function(e){e.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+t)},function(e,t){return(t-e-6e4*(t.getTimezoneOffset()-e.getTimezoneOffset()))/864e5},function(e){return e.getDate()-1});function c(e){return i(function(t){t.setHours(0,0,0,0),t.setDate(t.getDate()-(t.getDay()+7-e)%7)},function(e,t){e.setDate(e.getDate()+7*t)},function(e,t){return(t-e-6e4*(t.getTimezoneOffset()-e.getTimezoneOffset()))/6048e5})}var d=c(0),u=c(1),f=c(2),h=c(3),p=c(4),m=c(5),g=c(6),y=i(function(e){e.setHours(0,0,0,0),e.setDate(1)},function(e,t){e.setMonth(e.getMonth()+t)},function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())},function(e){return e.getMonth()}),_=i(function(e){e.setHours(0,0,0,0),e.setMonth(0,1)},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e,t){return t.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}),v=i(function(e){e.setUTCMilliseconds(0)},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getUTCSeconds()}),b=i(function(e){e.setUTCSeconds(0,0)},function(e,t){e.setTime(+e+6e4*t)},function(e,t){return(t-e)/6e4},function(e){return e.getUTCMinutes()}),w=i(function(e){e.setUTCMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getUTCHours()}),x=i(function(e){e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+t)},function(e,t){return(t-e)/864e5},function(e){return e.getUTCDate()-1});function E(e){return i(function(t){t.setUTCHours(0,0,0,0),t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7)},function(e,t){e.setUTCDate(e.getUTCDate()+7*t)},function(e,t){return(t-e)/6048e5})}var k=E(0),S=E(1),T=E(2),D=E(3),A=E(4),P=E(5),O=E(6),$=i(function(e){e.setUTCHours(0,0,0,0),e.setUTCDate(1)},function(e,t){e.setUTCMonth(e.getUTCMonth()+t)},function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()}),C=i(function(e){e.setUTCHours(0,0,0,0),e.setUTCMonth(0,1)},function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)},function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}),F=r.range,j=o.range,I=a.range,M=s.range,z=l.range,N=d.range,U=u.range,R=f.range,L=h.range,q=p.range,B=m.range,V=g.range,W=d.range,Y=y.range,H=_.range,J=r,G=F,X=v.range,Q=b.range,K=w.range,Z=x.range,ee=k.range,te=S.range,ne=T.range,ie=D.range,re=A.range,oe=P.range,ae=O.range,se=k.range,le=$.range,ce=C.range;e.version="0.1.1",e.milliseconds=F,e.seconds=j,e.minutes=I,e.hours=M,e.days=z,e.sundays=N,e.mondays=U,e.tuesdays=R,e.wednesdays=L,e.thursdays=q,e.fridays=B,e.saturdays=V,e.weeks=W,e.months=Y,e.years=H,e.utcMillisecond=J,e.utcMilliseconds=G,e.utcSeconds=X,e.utcMinutes=Q,e.utcHours=K,e.utcDays=Z,e.utcSundays=ee,e.utcMondays=te,e.utcTuesdays=ne,e.utcWednesdays=ie,e.utcThursdays=re,e.utcFridays=oe,e.utcSaturdays=ae,e.utcWeeks=se,e.utcMonths=le,e.utcYears=ce,e.millisecond=r,e.second=o,e.minute=a,e.hour=s,e.day=l,e.sunday=d,e.monday=u,e.tuesday=f,e.wednesday=h,e.thursday=p,e.friday=m,e.saturday=g,e.week=d,e.month=y,e.year=_,e.utcSecond=v,e.utcMinute=b,e.utcHour=w,e.utcDay=x,e.utcSunday=k,e.utcMonday=S,e.utcTuesday=T,e.utcWednesday=D,e.utcThursday=A,e.utcFriday=P,e.utcSaturday=O,e.utcWeek=k,e.utcMonth=$,e.utcYear=C,e.interval=i}(t)}),K=k(function(e,t){!function(e,t){function n(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function i(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function r(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}function o(e){var t=e.dateTime,o=e.date,s=e.time,l=e.periods,c=e.days,d=e.shortDays,u=e.months,ie=e.shortMonths,re=f(l),oe=h(l),ae=f(c),se=h(c),le=f(d),ce=h(d),de=f(u),ue=h(u),fe=f(ie),he=h(ie),pe={a:function(e){return d[e.getDay()]},A:function(e){return c[e.getDay()]},b:function(e){return ie[e.getMonth()]},B:function(e){return u[e.getMonth()]},c:null,d:A,e:A,H:P,I:O,j:$,L:C,m:F,M:j,p:function(e){return l[+(e.getHours()>=12)]},S:I,U:M,w:z,W:N,x:null,X:null,y:U,Y:R,Z:L,"%":ne},me={a:function(e){return d[e.getUTCDay()]},A:function(e){return c[e.getUTCDay()]},b:function(e){return ie[e.getUTCMonth()]},B:function(e){return u[e.getUTCMonth()]},c:null,d:q,e:q,H:B,I:V,j:W,L:Y,m:H,M:J,p:function(e){return l[+(e.getUTCHours()>=12)]},S:G,U:X,w:Q,W:K,x:null,X:null,y:Z,Y:ee,Z:te,"%":ne},ge={a:function(e,t,n){var i=le.exec(t.slice(n));return i?(e.w=ce[i[0].toLowerCase()],n+i[0].length):-1},A:function(e,t,n){var i=ae.exec(t.slice(n));return i?(e.w=se[i[0].toLowerCase()],n+i[0].length):-1},b:function(e,t,n){var i=fe.exec(t.slice(n));return i?(e.m=he[i[0].toLowerCase()],n+i[0].length):-1},B:function(e,t,n){var i=de.exec(t.slice(n));return i?(e.m=ue[i[0].toLowerCase()],n+i[0].length):-1},c:function(e,n,i){return ve(e,t,n,i)},d:w,e:w,H:E,I:E,j:x,L:T,m:b,M:k,p:function(e,t,n){var i=re.exec(t.slice(n));return i?(e.p=oe[i[0].toLowerCase()],n+i[0].length):-1},S:S,U:m,w:p,W:g,x:function(e,t,n){return ve(e,o,t,n)},X:function(e,t,n){return ve(e,s,t,n)},y:_,Y:y,Z:v,"%":D};function ye(e,t){return function(n){var i,r,o,s=[],l=-1,c=0,d=e.length;for(n instanceof Date||(n=new Date(+n));++l<d;)37===e.charCodeAt(l)&&(s.push(e.slice(c,l)),null!=(r=a[i=e.charAt(++l)])?i=e.charAt(++l):r="e"===i?" ":"0",(o=t[i])&&(i=o(n,r)),s.push(i),c=l+1);return s.push(e.slice(c,l)),s.join("")}}function _e(e,t){return function(n){var o=r(1900),a=ve(o,e,n+="",0);if(a!=n.length)return null;if("p"in o&&(o.H=o.H%12+12*o.p),"W"in o||"U"in o){"w"in o||(o.w="W"in o?1:0);var s="Z"in o?i(r(o.y)).getUTCDay():t(r(o.y)).getDay();o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(s+5)%7:o.w+7*o.U-(s+6)%7}return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,i(o)):t(o)}}function ve(e,t,n,i){for(var r,o,s=0,l=t.length,c=n.length;s<l;){if(i>=c)return-1;if(37===(r=t.charCodeAt(s++))){if(r=t.charAt(s++),!(o=ge[r in a?t.charAt(s++):r])||(i=o(e,n,i))<0)return-1}else if(r!=n.charCodeAt(i++))return-1}return i}return pe.x=ye(o,pe),pe.X=ye(s,pe),pe.c=ye(t,pe),me.x=ye(o,me),me.X=ye(s,me),me.c=ye(t,me),{format:function(e){var t=ye(e+="",pe);return t.parse=_e(e,n),t.toString=function(){return e},t},utcFormat:function(e){var t=ye(e+="",me);return t.parse=_e(e,i),t.toString=function(){return e},t}}}var a={"-":"",_:" ",0:"0"},s=/^\s*\d+/,l=/^%/,c=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;function d(e,t,n){var i=e<0?"-":"",r=(i?-e:e)+"",o=r.length;return i+(o<n?new Array(n-o+1).join(t)+r:r)}function u(e){return e.replace(c,"\\$&")}function f(e){return new RegExp("^(?:"+e.map(u).join("|")+")","i")}function h(e){for(var t={},n=-1,i=e.length;++n<i;)t[e[n].toLowerCase()]=n;return t}function p(e,t,n){var i=s.exec(t.slice(n,n+1));return i?(e.w=+i[0],n+i[0].length):-1}function m(e,t,n){var i=s.exec(t.slice(n));return i?(e.U=+i[0],n+i[0].length):-1}function g(e,t,n){var i=s.exec(t.slice(n));return i?(e.W=+i[0],n+i[0].length):-1}function y(e,t,n){var i=s.exec(t.slice(n,n+4));return i?(e.y=+i[0],n+i[0].length):-1}function _(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.y=+i[0]+(+i[0]>68?1900:2e3),n+i[0].length):-1}function v(e,t,n){var i=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(t.slice(n,n+6));return i?(e.Z=i[1]?0:-(i[2]+(i[3]||"00")),n+i[0].length):-1}function b(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.m=i[0]-1,n+i[0].length):-1}function w(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.d=+i[0],n+i[0].length):-1}function x(e,t,n){var i=s.exec(t.slice(n,n+3));return i?(e.m=0,e.d=+i[0],n+i[0].length):-1}function E(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.H=+i[0],n+i[0].length):-1}function k(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.M=+i[0],n+i[0].length):-1}function S(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.S=+i[0],n+i[0].length):-1}function T(e,t,n){var i=s.exec(t.slice(n,n+3));return i?(e.L=+i[0],n+i[0].length):-1}function D(e,t,n){var i=l.exec(t.slice(n,n+1));return i?n+i[0].length:-1}function A(e,t){return d(e.getDate(),t,2)}function P(e,t){return d(e.getHours(),t,2)}function O(e,t){return d(e.getHours()%12||12,t,2)}function $(e,n){return d(1+t.day.count(t.year(e),e),n,3)}function C(e,t){return d(e.getMilliseconds(),t,3)}function F(e,t){return d(e.getMonth()+1,t,2)}function j(e,t){return d(e.getMinutes(),t,2)}function I(e,t){return d(e.getSeconds(),t,2)}function M(e,n){return d(t.sunday.count(t.year(e),e),n,2)}function z(e){return e.getDay()}function N(e,n){return d(t.monday.count(t.year(e),e),n,2)}function U(e,t){return d(e.getFullYear()%100,t,2)}function R(e,t){return d(e.getFullYear()%1e4,t,4)}function L(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+d(t/60|0,"0",2)+d(t%60,"0",2)}function q(e,t){return d(e.getUTCDate(),t,2)}function B(e,t){return d(e.getUTCHours(),t,2)}function V(e,t){return d(e.getUTCHours()%12||12,t,2)}function W(e,n){return d(1+t.utcDay.count(t.utcYear(e),e),n,3)}function Y(e,t){return d(e.getUTCMilliseconds(),t,3)}function H(e,t){return d(e.getUTCMonth()+1,t,2)}function J(e,t){return d(e.getUTCMinutes(),t,2)}function G(e,t){return d(e.getUTCSeconds(),t,2)}function X(e,n){return d(t.utcSunday.count(t.utcYear(e),e),n,2)}function Q(e){return e.getUTCDay()}function K(e,n){return d(t.utcMonday.count(t.utcYear(e),e),n,2)}function Z(e,t){return d(e.getUTCFullYear()%100,t,2)}function ee(e,t){return d(e.getUTCFullYear()%1e4,t,4)}function te(){return"+0000"}function ne(){return"%"}var ie=o({dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),re=o({dateTime:"%A, %e de %B de %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"],shortDays:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],months:["gener","febrer","març","abril","maig","juny","juliol","agost","setembre","octubre","novembre","desembre"],shortMonths:["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."]}),oe=o({dateTime:"%A, der %e. %B %Y, %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],shortDays:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],shortMonths:["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}),ae=o({dateTime:"%A, der %e. %B %Y, %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],shortDays:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],shortMonths:["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}),se=o({dateTime:"%a %b %e %X %Y",date:"%Y-%m-%d",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),le=o({dateTime:"%a %e %b %X %Y",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),ce=o({dateTime:"%A, %e de %B de %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],shortDays:["dom","lun","mar","mié","jue","vie","sáb"],months:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],shortMonths:["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"]}),de=o({dateTime:"%A, %-d. %Bta %Y klo %X",date:"%-d.%-m.%Y",time:"%H:%M:%S",periods:["a.m.","p.m."],days:["sunnuntai","maanantai","tiistai","keskiviikko","torstai","perjantai","lauantai"],shortDays:["Su","Ma","Ti","Ke","To","Pe","La"],months:["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesäkuu","heinäkuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"],shortMonths:["Tammi","Helmi","Maalis","Huhti","Touko","Kesä","Heinä","Elo","Syys","Loka","Marras","Joulu"]}),ue=o({dateTime:"%a %e %b %Y %X",date:"%Y-%m-%d",time:"%H:%M:%S",periods:["",""],days:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],shortDays:["dim","lun","mar","mer","jeu","ven","sam"],months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],shortMonths:["jan","fév","mar","avr","mai","jui","jul","aoû","sep","oct","nov","déc"]}),fe=o({dateTime:"%A, le %e %B %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],shortDays:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],shortMonths:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."]}),he=o({dateTime:"%A, %e ב%B %Y %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["ראשון","שני","שלישי","רביעי","חמישי","שישי","שבת"],shortDays:["א׳","ב׳","ג׳","ד׳","ה׳","ו׳","ש׳"],months:["ינואר","פברואר","מרץ","אפריל","מאי","יוני","יולי","אוגוסט","ספטמבר","אוקטובר","נובמבר","דצמבר"],shortMonths:["ינו׳","פבר׳","מרץ","אפר׳","מאי","יוני","יולי","אוג׳","ספט׳","אוק׳","נוב׳","דצמ׳"]}),pe=o({dateTime:"%Y. %B %-e., %A %X",date:"%Y. %m. %d.",time:"%H:%M:%S",periods:["de.","du."],days:["vasárnap","hétfő","kedd","szerda","csütörtök","péntek","szombat"],shortDays:["V","H","K","Sze","Cs","P","Szo"],months:["január","február","március","április","május","június","július","augusztus","szeptember","október","november","december"],shortMonths:["jan.","feb.","már.","ápr.","máj.","jún.","júl.","aug.","szept.","okt.","nov.","dec."]}),me=o({dateTime:"%A %e %B %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Domenica","Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato"],shortDays:["Dom","Lun","Mar","Mer","Gio","Ven","Sab"],months:["Gennaio","Febbraio","Marzo","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobre","Novembre","Dicembre"],shortMonths:["Gen","Feb","Mar","Apr","Mag","Giu","Lug","Ago","Set","Ott","Nov","Dic"]}),ge=o({dateTime:"%Y %b %e %a %X",date:"%Y/%m/%d",time:"%H:%M:%S",periods:["AM","PM"],days:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"],shortDays:["日","月","火","水","木","金","土"],months:["睦月","如月","弥生","卯月","皐月","水無月","文月","葉月","長月","神無月","霜月","師走"],shortMonths:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]}),ye=o({dateTime:"%Y/%m/%d %a %X",date:"%Y/%m/%d",time:"%H:%M:%S",periods:["오전","오후"],days:["일요일","월요일","화요일","수요일","목요일","금요일","토요일"],shortDays:["일","월","화","수","목","금","토"],months:["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"],shortMonths:["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"]}),_e=o({dateTime:"%A, %e %B %Y г. %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["недела","понеделник","вторник","среда","четврток","петок","сабота"],shortDays:["нед","пон","вто","сре","чет","пет","саб"],months:["јануари","февруари","март","април","мај","јуни","јули","август","септември","октомври","ноември","декември"],shortMonths:["јан","фев","мар","апр","мај","јун","јул","авг","сеп","окт","ное","дек"]}),ve=o({dateTime:"%a %e %B %Y %T",date:"%d-%m-%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],shortDays:["zo","ma","di","wo","do","vr","za"],months:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],shortMonths:["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"]}),be=o({dateTime:"%A, %e %B %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Niedziela","Poniedziałek","Wtorek","Środa","Czwartek","Piątek","Sobota"],shortDays:["Niedz.","Pon.","Wt.","Śr.","Czw.","Pt.","Sob."],months:["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"],shortMonths:["Stycz.","Luty","Marz.","Kwie.","Maj","Czerw.","Lipc.","Sierp.","Wrz.","Paźdz.","Listop.","Grudz."]}),we=o({dateTime:"%A, %e de %B de %Y. %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],shortDays:["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"],months:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],shortMonths:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"]}),xe=o({dateTime:"%A, %e %B %Y г. %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],shortDays:["вс","пн","вт","ср","чт","пт","сб"],months:["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],shortMonths:["янв","фев","мар","апр","май","июн","июл","авг","сен","окт","ноя","дек"]}),Ee=o({dateTime:"%A den %d %B %Y %X",date:"%Y-%m-%d",time:"%H:%M:%S",periods:["fm","em"],days:["Söndag","Måndag","Tisdag","Onsdag","Torsdag","Fredag","Lördag"],shortDays:["Sön","Mån","Tis","Ons","Tor","Fre","Lör"],months:["Januari","Februari","Mars","April","Maj","Juni","Juli","Augusti","September","Oktober","November","December"],shortMonths:["Jan","Feb","Mar","Apr","Maj","Jun","Jul","Aug","Sep","Okt","Nov","Dec"]}),ke=o({dateTime:"%a %b %e %X %Y",date:"%Y/%-m/%-d",time:"%H:%M:%S",periods:["上午","下午"],days:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],shortDays:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],months:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],shortMonths:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]});function Se(e){return e.toISOString()}Se.parse=function(e){var t=new Date(e);return isNaN(t)?null:t},Se.toString=function(){return"%Y-%m-%dT%H:%M:%S.%LZ"};var Te=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Se:ie.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ"),De=ie.format,Ae=ie.utcFormat;e.version="0.2.1",e.format=De,e.utcFormat=Ae,e.locale=o,e.localeCaEs=re,e.localeDeCh=oe,e.localeDeDe=ae,e.localeEnCa=se,e.localeEnGb=le,e.localeEnUs=ie,e.localeEsEs=ce,e.localeFiFi=de,e.localeFrCa=ue,e.localeFrFr=fe,e.localeHeIl=he,e.localeHuHu=pe,e.localeItIt=me,e.localeJaJp=ge,e.localeKoKr=ye,e.localeMkMk=_e,e.localeNlNl=ve,e.localePlPl=be,e.localePtBr=we,e.localeRuRu=xe,e.localeSvSe=Ee,e.localeZhCn=ke,e.isoFormat=Te}(t,Q)}),Z=(k(function(e,t){!function(e){function t(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,i=e.slice(0,n);return[i.length>1?i[0]+i.slice(2):i,+e.slice(n+1)]}function n(e){return(e=t(Math.abs(e)))?e[1]:NaN}var i;function r(e,n){var i=t(e,n);if(!i)return e+"";var r=i[0],o=i[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")}var o={"":function(e,t){e=e.toPrecision(t);e:for(var n,i=e.length,r=1,o=-1;r<i;++r)switch(e[r]){case".":o=n=r;break;case"0":0===o&&(o=r),n=r;break;case"e":break e;default:o>0&&(o=0)}return o>0?e.slice(0,o)+e.slice(n+1):e},"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return r(100*e,t)},r:r,s:function(e,n){var r=t(e,n);if(!r)return e+"";var o=r[0],a=r[1],s=a-(i=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,l=o.length;return s===l?o:s>l?o+new Array(s-l+1).join("0"):s>0?o.slice(0,s)+"."+o.slice(s):"0."+new Array(1-s).join("0")+t(e,Math.max(0,n+s-1))[0]},X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},a=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function s(e){return new l(e)}function l(e){if(!(t=a.exec(e)))throw new Error("invalid format: "+e);var t,n=t[1]||" ",i=t[2]||">",r=t[3]||"-",s=t[4]||"",l=!!t[5],c=t[6]&&+t[6],d=!!t[7],u=t[8]&&+t[8].slice(1),f=t[9]||"";"n"===f?(d=!0,f="g"):o[f]||(f=""),(l||"0"===n&&"="===i)&&(l=!0,n="0",i="="),this.fill=n,this.align=i,this.sign=r,this.symbol=s,this.zero=l,this.width=c,this.comma=d,this.precision=u,this.type=f}l.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var c=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function d(e){return e}function u(e){var t=e.grouping&&e.thousands?function(e,t){return function(n,i){for(var r=n.length,o=[],a=0,s=e[0],l=0;r>0&&s>0&&(l+s+1>i&&(s=Math.max(1,i-l)),o.push(n.substring(r-=s,r+s)),!((l+=s+1)>i));)s=e[a=(a+1)%e.length];return o.reverse().join(t)}}(e.grouping,e.thousands):d,r=e.currency,a=e.decimal;function l(e){var n=(e=s(e)).fill,l=e.align,d=e.sign,u=e.symbol,f=e.zero,h=e.width,p=e.comma,m=e.precision,g=e.type,y="$"===u?r[0]:"#"===u&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",_="$"===u?r[1]:/[%p]/.test(g)?"%":"",v=o[g],b=!g||/[defgprs%]/.test(g);return m=null==m?g?6:12:/[gprs]/.test(g)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),function(e){var r=y,o=_;if("c"===g)o=v(e)+o,e="";else{var s=((e=+e)<0||1/e<0)&&(e*=-1,!0);if(e=v(e,m),s){var u=-1,w=e.length;for(s=!1;++u<w;)if(48<(x=e.charCodeAt(u))&&x<58||"x"===g&&96<x&&x<103||"X"===g&&64<x&&x<71){s=!0;break}}if(r=(s?"("===d?d:"-":"-"===d||"("===d?"":d)+r,o=o+("s"===g?c[8+i/3]:"")+(s&&"("===d?")":""),b)for(var x,u=-1,w=e.length;++u<w;)if(48>(x=e.charCodeAt(u))||x>57){o=(46===x?a+e.slice(u+1):e.slice(u))+o,e=e.slice(0,u);break}}p&&!f&&(e=t(e,1/0));var E=r.length+e.length+o.length,k=E<h?new Array(h-E+1).join(n):"";switch(p&&f&&(e=t(k+e,k.length?h-o.length:1/0),k=""),l){case"<":return r+e+o+k;case"=":return r+k+e+o;case"^":return k.slice(0,E=k.length>>1)+r+e+o+k.slice(E)}return k+r+e+o}}return{format:l,formatPrefix:function(e,t){var i=l(((e=s(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(n(t)/3))),o=Math.pow(10,-r),a=c[8+r/3];return function(e){return i(o*e)+a}}}}var f=u({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),h=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),p=u({decimal:",",thousands:" ",grouping:[3],currency:[""," Kč"]}),m=u({decimal:",",thousands:"'",grouping:[3],currency:[""," CHF"]}),g=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),y=u({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),_=u({decimal:".",thousands:",",grouping:[3],currency:["£",""]}),v=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),b=u({decimal:",",thousands:" ",grouping:[3],currency:[""," €"]}),w=u({decimal:",",thousands:" ",grouping:[3],currency:["","$"]}),x=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),E=u({decimal:".",thousands:",",grouping:[3],currency:["₪",""]}),k=u({decimal:",",thousands:" ",grouping:[3],currency:[""," Ft"]}),S=u({decimal:",",thousands:".",grouping:[3],currency:["€",""]}),T=u({decimal:".",thousands:",",grouping:[3],currency:["","円"]}),D=u({decimal:".",thousands:",",grouping:[3],currency:["₩",""]}),A=u({decimal:",",thousands:".",grouping:[3],currency:[""," ден."]}),P=u({decimal:",",thousands:".",grouping:[3],currency:["€ ",""]}),O=u({decimal:",",thousands:".",grouping:[3],currency:["","zł"]}),$=u({decimal:",",thousands:".",grouping:[3],currency:["R$",""]}),C=u({decimal:",",thousands:" ",grouping:[3],currency:[""," руб."]}),F=u({decimal:",",thousands:" ",grouping:[3],currency:["","SEK"]}),j=u({decimal:".",thousands:",",grouping:[3],currency:["¥",""]}),I=f.format,M=f.formatPrefix;e.version="0.4.2",e.format=I,e.formatPrefix=M,e.locale=u,e.localeCaEs=h,e.localeCsCz=p,e.localeDeCh=m,e.localeDeDe=g,e.localeEnCa=y,e.localeEnGb=_,e.localeEnUs=f,e.localeEsEs=v,e.localeFiFi=b,e.localeFrCa=w,e.localeFrFr=x,e.localeHeIl=E,e.localeHuHu=k,e.localeItIt=S,e.localeJaJp=T,e.localeKoKr=D,e.localeMkMk=A,e.localeNlNl=P,e.localePlPl=O,e.localePtBr=$,e.localeRuRu=C,e.localeSvSe=F,e.localeZhCn=j,e.formatSpecifier=s,e.precisionFixed=function(e){return Math.max(0,-n(Math.abs(e)))},e.precisionPrefix=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(n(t)/3)))-n(Math.abs(e)))},e.precisionRound=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,n(t)-n(e))+1}}(t)}),K),ee=(new Date(2e3,0,1),function(e){return Z.format(e)});Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var te=ee;function ne(e,t){var n=t&&t.type||"json";return e=X[n](e,t),t&&t.parse&&function(e,t){var n,i,r,o,a,s,l=e.length;for(t="auto"===t?F.inferAll(e):S.duplicate(t),n=S.keys(t),i=n.map(function(e){var n=t[e];if(n&&0===n.indexOf("date:")){var i=n.split(/:(.+)?/,2)[1];if(!("'"===i[0]&&"'"===i[i.length-1]||'"'===i[0]&&'"'===i[i.length-1]))throw Error("Format pattern must be quoted: "+i);return i=i.slice(1,-1),i=te(i),function(e){return i.parse(e)}}if(!F.parsers[n])throw Error("Illegal format pattern: "+e+":"+n);return F.parsers[n]}),o=0,s=n.length;o<l;++o)for(r=e[o],a=0;a<s;++a)r[n[a]]=i[a](r[n[a]]);F.annotation(e,t)}(e,t.parse),e}ne.formats=X;var ie=ne,re=k(function(e){var t=e.exports;t.repeat=function(e,t){var n,i=Array(t);for(n=0;n<t;++n)i[n]=e;return i},t.zeros=function(e){return t.repeat(0,e)},t.range=function(e,t,n){if(arguments.length<3&&(n=1,arguments.length<2&&(t=e,e=0)),(t-e)/n==1/0)throw new Error("Infinite range");var i,r=[],o=-1;if(n<0)for(;(i=e+n*++o)>t;)r.push(i);else for(;(i=e+n*++o)<t;)r.push(i);return r},t.random={},t.random.uniform=function(e,n){void 0===n&&(n=void 0===e?1:e,e=0);var i=n-e,r=function(){return e+i*Math.random()};return r.samples=function(e){return t.zeros(e).map(r)},r.pdf=function(t){return t>=e&&t<=n?1/i:0},r.cdf=function(t){return t<e?0:t>n?1:(t-e)/i},r.icdf=function(t){return t>=0&&t<=1?e+t*i:NaN},r},t.random.integer=function(e,n){void 0===n&&(n=e,e=0);var i=n-e,r=function(){return e+Math.floor(i*Math.random())};return r.samples=function(e){return t.zeros(e).map(r)},r.pdf=function(t){return t===Math.floor(t)&&t>=e&&t<n?1/i:0},r.cdf=function(t){var r=Math.floor(t);return r<e?0:r>=n?1:(r-e+1)/i},r.icdf=function(t){return t>=0&&t<=1?e-1+Math.floor(t*i):NaN},r},t.random.normal=function(e,n){var i;e=e||0,n=n||1;var r=function(){var t,r,o=0,a=0;if(void 0!==i)return o=i,i=void 0,o;do{t=(o=2*Math.random()-1)*o+(a=2*Math.random()-1)*a}while(0===t||t>1);return r=Math.sqrt(-2*Math.log(t)/t),i=e+a*r*n,e+o*r*n};return r.samples=function(e){return t.zeros(e).map(r)},r.pdf=function(t){var i=Math.exp(Math.pow(t-e,2)/(-2*Math.pow(n,2)));return 1/(n*Math.sqrt(2*Math.PI))*i},r.cdf=function(t){var i,r=(t-e)/n,o=Math.abs(r);if(o>37)i=0;else{var a=Math.exp(-o*o/2);o<7.07106781186547?(i=a*((((((.0352624965998911*o+.700383064443688)*o+6.37396220353165)*o+33.912866078383)*o+112.079291497871)*o+221.213596169931)*o+220.206867912376),i/=((((((.0883883476483184*o+1.75566716318264)*o+16.064177579207)*o+86.7807322029461)*o+296.564248779674)*o+637.333633378831)*o+793.826512519948)*o+440.413735824752):i=a/(o+1/(o+2/(o+3/(o+4/(o+.65)))))/2.506628274631}return r>0?1-i:i},r.icdf=function(t){if(t<=0||t>=1)return NaN;var i=2*t-1,r=8*(Math.PI-3)/(3*Math.PI*(4-Math.PI)),o=2/(Math.PI*r)+Math.log(1-Math.pow(i,2))/2,a=Math.log(1-i*i)/r,s=(i>0?1:-1)*Math.sqrt(Math.sqrt(o*o-a)-o);return e+n*Math.SQRT2*s},r},t.random.bootstrap=function(e,n){var i=e.filter(S.isValid),r=i.length,o=n?t.random.normal(0,n):null,a=function(){return i[~~(Math.random()*r)]+(o?o():0)};return a.samples=function(e){return t.zeros(e).map(a)},a}}),oe=k(function(e){var t=e.exports;function n(e,n,i){var r=e&&e.nullh||0,o=re.random.normal(0,1),a=t.mean(n,i),s=t.stdev(n,i)/Math.sqrt(t.count.valid(n,i));if(0===s)return a-r==0?1:0;var l=(a-r)/s;return 2*o.cdf(-Math.abs(l))}function i(e,n,i,r){var o,a=r?n.map(S.$(i)):n,s=r?n.map(S.$(r)):i,l=t.count(a),c=t.count(s),d=Array();if(l!==c)throw Error("Array lengths must match.");for(o=0;o<l;++o)S.isValid(a[o])&&S.isValid(s[o])&&d.push(a[o]-s[o]);return t.z.test(d,e&&e.nullh||0)}function r(e,n,i,r){var o=r?n.map(S.$(i)):n,a=r?n.map(S.$(r)):i,s=t.count.valid(o),l=t.count.valid(a),c=re.random.normal(0,1),d=t.mean(o)-t.mean(a)-(e&&e.nullh||0),u=Math.sqrt(t.variance(o)/s+t.variance(a)/l);if(0===u)return 0===d?1:0;var f=d/u;return 2*c.cdf(-Math.abs(f))}t.unique=function(e,t,n){t=S.$(t),n=n||[];var i,r,o,a={};for(r=0,o=e.length;r<o;++r)(i=t?t(e[r]):e[r])in a||(a[i]=1,n.push(i));return n},t.count=function(e){return e&&e.length||0},t.count.valid=function(e,t){t=S.$(t);var n,i,r,o=0;for(i=0,r=e.length;i<r;++i)n=t?t(e[i]):e[i],S.isValid(n)&&(o+=1);return o},t.count.missing=function(e,t){t=S.$(t);var n,i,r=0;for(n=0,i=e.length;n<i;++n)null==(t?t(e[n]):e[n])&&(r+=1);return r},t.count.distinct=function(e,t){t=S.$(t);var n,i,r,o={},a=0;for(i=0,r=e.length;i<r;++i)(n=t?t(e[i]):e[i])in o||(o[n]=1,a+=1);return a},t.count.map=function(e,t){t=S.$(t);var n,i,r,o={};for(i=0,r=e.length;i<r;++i)o[n=t?t(e[i]):e[i]]=n in o?o[n]+1:1;return o},t.median=function(e,n){return n&&(e=e.map(S.$(n))),e=e.filter(S.isValid).sort(S.cmp),t.quantile(e,.5)},t.quartile=function(e,n){n&&(e=e.map(S.$(n))),e=e.filter(S.isValid).sort(S.cmp);var i=t.quantile;return[i(e,.25),i(e,.5),i(e,.75)]},t.quantile=function(e,t,n){void 0===n&&(n=t,t=S.identity),t=S.$(t);var i=(e.length-1)*n+1,r=Math.floor(i),o=+t(e[r-1]),a=i-r;return a?o+a*(t(e[r])-o):o},t.sum=function(e,t){t=S.$(t);for(var n,i=0,r=0,o=e.length;r<o;++r)n=t?t(e[r]):e[r],S.isValid(n)&&(i+=n);return i},t.mean=function(e,t){t=S.$(t);var n,i,r,o,a=0;for(n=0,r=0,i=e.length;n<i;++n)o=t?t(e[n]):e[n],S.isValid(o)&&(a+=(o-a)/++r);return a},t.mean.geometric=function(e,t){t=S.$(t);var n,i,r,o,a=1;for(o=0,n=0,i=e.length;o<i;++o)if(r=t?t(e[o]):e[o],S.isValid(r)){if(r<=0)throw Error("Geometric mean only defined for positive values.");a*=r,++n}return a=n>0?Math.pow(a,1/n):0},t.mean.harmonic=function(e,t){t=S.$(t);var n,i,r,o,a=0;for(o=0,n=0,i=e.length;o<i;++o)r=t?t(e[o]):e[o],S.isValid(r)&&(a+=1/r,++n);return n/a},t.variance=function(e,t){if(t=S.$(t),!S.isArray(e)||e.length<2)return 0;var n,i,r,o,a=0,s=0;for(i=0,r=0;i<e.length;++i)o=t?t(e[i]):e[i],S.isValid(o)&&(s+=(n=o-a)*(o-(a+=n/++r)));return s/=r-1},t.stdev=function(e,n){return Math.sqrt(t.variance(e,n))},t.modeskew=function(e,n){var i=t.mean(e,n),r=t.median(e,n),o=t.stdev(e,n);return 0===o?0:(i-r)/o},t.min=function(e,n){return t.extent(e,n)[0]},t.max=function(e,n){return t.extent(e,n)[1]},t.extent=function(e,t){t=S.$(t);var n,i,r,o,a=e.length;for(o=0;o<a;++o)if(r=t?t(e[o]):e[o],S.isValid(r)){n=i=r;break}for(;o<a;++o)r=t?t(e[o]):e[o],S.isValid(r)&&(r<n&&(n=r),r>i&&(i=r));return[n,i]},t.extent.index=function(e,t){t=S.$(t);var n,i,r,o,a=-1,s=-1,l=e.length;for(o=0;o<l;++o)if(r=t?t(e[o]):e[o],S.isValid(r)){n=i=r,a=s=o;break}for(;o<l;++o)r=t?t(e[o]):e[o],S.isValid(r)&&(r<n&&(n=r,a=o),r>i&&(i=r,s=o));return[a,s]},t.dot=function(e,t,n){var i,r,o=0;if(n)for(t=S.$(t),n=S.$(n),i=0;i<e.length;++i)(r=t(e[i])*n(e[i]))==r&&(o+=r);else{if(e.length!==t.length)throw Error("Array lengths must match.");for(i=0;i<e.length;++i)(r=e[i]*t[i])==r&&(o+=r)}return o},t.dist=function(e,t,n,i){var r,o,a=S.isFunction(n)||S.isString(n),s=e,l=a?e:t,c=a?i:n,d=2===c||null==c,u=e.length,f=0;for(a&&(t=S.$(t),n=S.$(n)),o=0;o<u;++o)r=a?t(s[o])-n(l[o]):s[o]-l[o],f+=d?r*r:Math.pow(Math.abs(r),c);return d?Math.sqrt(f):Math.pow(f,1/c)},t.cohensd=function(e,n,i){var r=i?e.map(S.$(n)):e,o=i?e.map(S.$(i)):n,a=t.mean(r),s=t.mean(o),l=t.count.valid(r),c=t.count.valid(o);if(l+c-2<=0)return 0;var d=t.variance(r),u=t.variance(o),f=Math.sqrt(((l-1)*d+(c-1)*u)/(l+c-2));return 0===f?0:(a-s)/f},t.covariance=function(e,n,i){var r,o,a,s,l,c=i?e.map(S.$(n)):e,d=i?e.map(S.$(i)):n,u=c.length,f=t.mean(c),h=t.mean(d),p=0,m=0;if(u!==d.length)throw Error("Input lengths must match.");for(r=0;r<u;++r)if(o=c[r],s=S.isValid(o),a=d[r],l=S.isValid(a),s&&l)p+=(o-f)*(a-h),++m;else if(s||l)throw Error("Valid values must align.");return p/(m-1)},t.rank=function(e,t){t=S.$(t)||S.identity;var n,i,r,o=e.map(function(e,n){return{idx:n,val:t(e)}}).sort(S.comparator("val")),a=e.length,s=Array(a),l=-1,c={};for(n=0;n<a;++n){if(i=o[n].val,l<0&&c===i)l=n-1;else if(l>-1&&c!==i){for(r=1+(n-1+l)/2;l<n;++l)s[o[l].idx]=r;l=-1}s[o[n].idx]=n+1,c=i}if(l>-1)for(r=1+(a-1+l)/2;l<a;++l)s[o[l].idx]=r;return s},t.cor=function(e,n,i){var r=i;i=r?e.map(S.$(i)):n,n=r?e.map(S.$(n)):e;var o=t.dot(n,i),a=t.mean(n),s=t.mean(i),l=t.stdev(n),c=t.stdev(i),d=e.length;return(o-d*a*s)/((d-1)*l*c)},t.cor.rank=function(e,n,i){var r,o,a,s=i?t.rank(e,n):t.rank(e),l=i?t.rank(e,i):t.rank(n),c=e.length;for(r=0,o=0;r<c;++r)o+=(a=s[r]-l[r])*a;return 1-6*o/(c*(c*c-1))},t.cor.dist=function(e,n,i){var r,o,a,s,l=i?e.map(S.$(n)):e,c=i?e.map(S.$(i)):n,d=t.dist.mat(l),u=t.dist.mat(c),f=d.length;for(r=0,o=0,a=0,s=0;r<f;++r)o+=d[r]*d[r],a+=u[r]*u[r],s+=d[r]*u[r];return Math.sqrt(s/Math.sqrt(o*a))},t.linearRegression=function(e,n,i){var r,o,a=i?e.map(S.$(n)):e,s=i?e.map(S.$(i)):n,l=a.length,c=t.covariance(a,s),d=t.stdev(a),u=t.stdev(s),f=c/(d*d),h=t.mean(s)-f*t.mean(a),p={slope:f,intercept:h,R:c/(d*u),rss:0};for(o=0;o<l;++o)S.isValid(a[o])&&S.isValid(s[o])&&(r=f*a[o]+h-s[o],p.rss+=r*r);return p},t.bootstrap={},t.bootstrap.ci=function(e,n,i,r,o){var a,s,l,c,d,u,f;for(S.isFunction(n)||S.isString(n)?(a=e.map(S.$(n)),s=i,l=r,c=o):(a=e,s=n,l=i,c=r),s=s?+s:1e3,l=l||.05,d=re.random.bootstrap(a,c),f=0,u=Array(s);f<s;++f)u[f]=t.mean(d.samples(a.length));return u.sort(S.numcmp),[t.quantile(u,l/2),t.quantile(u,1-l/2)]},t.z={},t.z.ci=function(e,n,i){var r=e,o=n;(S.isFunction(n)||S.isString(n))&&(r=e.map(S.$(n)),o=i);var a=.05===(o=o||.05)?1.96:re.random.normal(0,1).icdf(1-o/2),s=t.mean(r),l=t.stdev(r)/Math.sqrt(t.count.valid(r));return[s-a*l,s+a*l]},t.z.test=function(e,t,o,a){return S.isFunction(o)||S.isString(o)?(a&&a.paired?i:r)(a,e,t,o):S.isArray(t)?(o&&o.paired?i:r)(o,e,t):S.isFunction(t)||S.isString(t)?n(o,e,t):n(t,e)},t.dist.mat=function(e){var t,n,i,r=e.length,o=r*r,a=Array(o),s=re.zeros(r),l=0;for(n=0;n<r;++n)for(a[n*r+n]=0,i=n+1;i<r;++i)a[n*r+i]=t=Math.abs(e[n]-e[i]),a[i*r+n]=t,s[n]+=t,s[i]+=t;for(n=0;n<r;++n)l+=s[n],s[n]/=r;for(l/=o,n=0;n<r;++n)for(i=n;i<r;++i)a[n*r+i]+=l-s[n]-s[i],a[i*r+n]=a[n*r+i];return a},t.entropy=function(e,t){t=S.$(t);var n,i,r=0,o=0,a=e.length;for(n=0;n<a;++n)r+=t?t(e[n]):e[n];if(0===r)return 0;for(n=0;n<a;++n)(i=(t?t(e[n]):e[n])/r)&&(o+=i*Math.log(i));return-o/Math.LN2},t.mutual=function(e,t,n,i){var r,o,a,s=i?e.map(S.$(t)):e,l=i?e.map(S.$(n)):t,c=i?e.map(S.$(i)):n,d={},u={},f=c.length,h=0,p=0,m=0;for(a=0;a<f;++a)d[s[a]]=0,u[l[a]]=0;for(a=0;a<f;++a)d[s[a]]+=c[a],u[l[a]]+=c[a],h+=c[a];for(o=1/(h*Math.LN2),a=0;a<f;++a)0!==c[a]&&(r=h*c[a]/(d[s[a]]*u[l[a]]),p+=c[a]*o*Math.log(r),m+=c[a]*o*Math.log(c[a]/h));return[p,1+p/m]},t.mutual.info=function(e,n,i,r){return t.mutual(e,n,i,r)[0]},t.mutual.dist=function(e,n,i,r){return t.mutual(e,n,i,r)[1]},t.profile=function(e,n){var i,r,o,a,s,l=0,c=0,d=0,u=0,f=null,h=null,p=0,m=[],g={};for(o=0;o<e.length;++o)g[a=n?n(e[o]):e[o]]=a in g?g[a]+1:(u+=1,1),null==a?++d:S.isValid(a)&&(s="string"==typeof a?a.length:a,(null===f||s<f)&&(f=s),(null===h||s>h)&&(h=s),p+=(i=s-l)*(s-(l+=i/++c)),m.push(s));return p/=c-1,r=Math.sqrt(p),m.sort(S.cmp),{type:F(e,n),unique:g,count:e.length,valid:c,missing:d,distinct:u,min:f,max:h,mean:l,stdev:r,median:a=t.quantile(m,.5),q1:t.quantile(m,.25),q3:t.quantile(m,.75),modeskew:0===r?0:(l-a)/r}},t.summary=function(e,n){var i=(n=n||S.keys(e[0])).map(function(n){var i=t.profile(e,S.$(n));return i.field=n,i});return i.__summary__=!0,i}});function ae(e){const t=ie(e),n={};return oe.summary(t).forEach(e=>{const t=e.field;delete e.field,n[t]=e}),{stats:n,size:e.length}}function se(e){const t=e[0].type;e.forEach(e=>{if(e.type!==t)throw new Error(`constraints not all of type ${t}`)});let n,i,r="";"soft"===t&&(n="",i="");for(const o of e){if(r+=`% @constraint ${o.description}\n${o.asp}`,r+="\n\n","soft"===t){n+=`#const ${o.name}_weight = ${o.weight}.`,n+="\n",i+=`soft_weight(${o.name}, ${o.name}_weight).`,i+="\n"}}return"hard"===t?{definitions:r}:{definitions:r,weights:n,assigns:i}}const le=/(\w+)\(([\w\.\/]+)(,([\w\.]+))?\)/,ce=["encoding","zero","log","mark","stack"],de=["channel","type","field","aggregate","bin"];function ue(e){if(!e)throw Error("No data has been prepared");const t=e.stats,n=[`num_rows(${e.size}).\n`];return Object.keys(t).forEach((e,i)=>{const r=`"${e}"`,o=t[e],a=`fieldtype(${r},${o.type}).`,s=`cardinality(${r}, ${o.distinct}).`;n.push(`${a}\n${s}`)}),n}var fe={},he=Object.freeze({default:fe});function pe(e,t){for(var n=0,i=e.length-1;i>=0;i--){var r=e[i];"."===r?e.splice(i,1):".."===r?(e.splice(i,1),n++):n&&(e.splice(i,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}var me=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,ge=function(e){return me.exec(e).slice(1)};function ye(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var i=n>=0?arguments[n]:"/";if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(e=i+"/"+e,t="/"===i.charAt(0))}return e=pe(Te(e.split("/"),function(e){return!!e}),!t).join("/"),(t?"/":"")+e||"."}function _e(e){var t=ve(e),n="/"===De(e,-1);return(e=pe(Te(e.split("/"),function(e){return!!e}),!t).join("/"))||t||(e="."),e&&n&&(e+="/"),(t?"/":"")+e}function ve(e){return"/"===e.charAt(0)}function be(){return _e(Te(Array.prototype.slice.call(arguments,0),function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e}).join("/"))}function we(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=ye(e).substr(1),t=ye(t).substr(1);for(var i=n(e.split("/")),r=n(t.split("/")),o=Math.min(i.length,r.length),a=o,s=0;s<o;s++)if(i[s]!==r[s]){a=s;break}var l=[];for(s=a;s<i.length;s++)l.push("..");return(l=l.concat(r.slice(a))).join("/")}function xe(e){var t=ge(e),n=t[0],i=t[1];return n||i?(i&&(i=i.substr(0,i.length-1)),n+i):"."}function Ee(e,t){var n=ge(e)[2];return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n}function ke(e){return ge(e)[3]}var Se={extname:ke,basename:Ee,dirname:xe,sep:"/",delimiter:":",relative:we,join:be,isAbsolute:ve,normalize:_e,resolve:ye};function Te(e,t){if(e.filter)return e.filter(t);for(var n=[],i=0;i<e.length;i++)t(e[i],i,e)&&n.push(e[i]);return n}var De="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)},Ae=Object.freeze({resolve:ye,normalize:_e,isAbsolute:ve,join:be,relative:we,sep:"/",delimiter:":",dirname:xe,basename:Ee,extname:ke,default:Se}),Pe=he&&fe||he,Oe=Ae&&Se||Ae,$e=k(function(e,t){var o=function(){var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return function(t){t=void 0!==(t=t||{})?t:{};var o,a={};for(o in t)t.hasOwnProperty(o)&&(a[o]=t[o]);t.arguments=[],t.thisProgram="./this.program",t.quit=function(e,t){throw t},t.preRun=[],t.postRun=[];var s,l=!1,c=!1,d=!1;l="object"==typeof window,c="function"==typeof importScripts,d="object"==typeof i&&!l&&!c,s=!l&&!d&&!c;var u,f,h="";function p(e){return t.locateFile?t.locateFile(e,h):h+e}d?(h=r+"/",t.read=function(e,t){var n;return u||(u=Pe),f||(f=Oe),e=f.normalize(e),n=u.readFileSync(e),t?n:n.toString()},t.readBinary=function(e){var n=t.read(e,!0);return n.buffer||(n=new Uint8Array(n)),k(n.buffer),n},i.argv.length>1&&(t.thisProgram=i.argv[1].replace(/\\/g,"/")),t.arguments=i.argv.slice(2),i.on("uncaughtException",function(e){if(!(e instanceof an))throw e}),i.on("unhandledRejection",function(e,t){i.exit(1)}),t.quit=function(e){i.exit(e)},t.inspect=function(){return"[Emscripten Module object]"}):s?("undefined"!=typeof read&&(t.read=function(e){return read(e)}),t.readBinary=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(k("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?t.arguments=scriptArgs:void 0!==arguments&&(t.arguments=arguments),"function"==typeof quit&&(t.quit=function(e){quit(e)})):(l||c)&&(l?document.currentScript&&(h=document.currentScript.src):h=self.location.href,e&&(h=e),h=0!==h.indexOf("blob:")?h.substr(0,h.lastIndexOf("/")+1):"",t.read=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(t.readBinary=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),t.readAsync=function(e,t,n){var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=function(){200==i.status||0==i.status&&i.response?t(i.response):n()},i.onerror=n,i.send(null)},t.setWindowTitle=function(e){document.title=e});var m=t.print||("undefined"!=typeof console?console.log.bind(console):"undefined"!=typeof print?print:null),g=t.printErr||("undefined"!=typeof printErr?printErr:"undefined"!=typeof console&&console.warn.bind(console)||m);for(o in a)a.hasOwnProperty(o)&&(t[o]=a[o]);a=void 0;var y=16;function _(e){var t=H;return H=H+e+15&-16,t}function v(e){var t=V[K>>2],n=t+e+15&-16;if((V[K>>2]=n,n>=se)&&!oe())return V[K>>2]=t,0;return t}function b(e,t){return t||(t=y),e=Math.ceil(e/t)*t}function w(e){switch(e){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:if("*"===e[e.length-1])return 4;if("i"===e[0]){var t=parseInt(e.substr(1));return k(t%8==0),t/8}return 0}}var x={"f64-rem":function(e,t){return e%t},debugger:function(){}},E=!1;function k(e,t){e||ln("Assertion failed: "+t)}var S={stackSave:function(){on()},stackRestore:function(){rn()},arrayToC:function(e){var t=nn(e.length);return ye(e,t),t},stringToC:function(e){var t=0;if(null!==e&&void 0!==e&&0!==e){var n=1+(e.length<<2);z(e,t=nn(n),n)}return t}},T={string:S.stringToC,array:S.arrayToC};function D(e,t,n,i){switch("*"===(n=n||"i8").charAt(n.length-1)&&(n="i32"),n){case"i1":case"i8":L[e>>0]=t;break;case"i16":B[e>>1]=t;break;case"i32":V[e>>2]=t;break;case"i64":tempI64=[t>>>0,(tempDouble=t,+ve(tempDouble)>=1?tempDouble>0?(0|xe(+we(tempDouble/4294967296),4294967295))>>>0:~~+be((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],V[e>>2]=tempI64[0],V[e+4>>2]=tempI64[1];break;case"float":W[e>>2]=t;break;case"double":Y[e>>3]=t;break;default:ln("invalid type for setValue: "+n)}}var A=0,P=2,O=4;function $(e,t,n,i){var r,o;"number"==typeof e?(r=!0,o=e):(r=!1,o=e.length);var a,s="string"==typeof t?t:null;if(a=n==O?i:["function"==typeof Zt?Zt:_,nn,_,v][void 0===n?P:n](Math.max(o,s?1:t.length)),r){var l;for(i=a,k(0==(3&a)),l=a+(-4&o);i<l;i+=4)V[i>>2]=0;for(l=a+o;i<l;)L[i++>>0]=0;return a}if("i8"===s)return e.subarray||e.slice?q.set(e,a):q.set(new Uint8Array(e),a),a;for(var c,d,u,f=0;f<o;){var h=e[f];0!==(c=s||t[f])?("i64"==c&&(c="i32"),D(a+f,h,c),u!==c&&(d=w(c),u=c),f+=d):f++}return a}function C(e){return J?pe?Zt(e):v(e):_(e)}function F(e,t){if(0===t||!e)return"";for(var n,i=0,r=0;i|=n=q[e+r>>0],(0!=n||t)&&(r++,!t||r!=t););t||(t=r);var o="";if(i<128){for(var a;t>0;)a=String.fromCharCode.apply(String,q.subarray(e,e+Math.min(t,1024))),o=o?o+a:a,e+=1024,t-=1024;return o}return function(e){return I(q,e)}(e)}var j="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function I(e,t){for(var n=t;e[n];)++n;if(n-t>16&&e.subarray&&j)return j.decode(e.subarray(t,n));for(var i,r,o,a,s,l="";;){if(!(i=e[t++]))return l;if(128&i)if(r=63&e[t++],192!=(224&i))if(o=63&e[t++],224==(240&i)?i=(15&i)<<12|r<<6|o:(a=63&e[t++],240==(248&i)?i=(7&i)<<18|r<<12|o<<6|a:(s=63&e[t++],i=248==(252&i)?(3&i)<<24|r<<18|o<<12|a<<6|s:(1&i)<<30|r<<24|o<<18|a<<12|s<<6|63&e[t++])),i<65536)l+=String.fromCharCode(i);else{var c=i-65536;l+=String.fromCharCode(55296|c>>10,56320|1023&c)}else l+=String.fromCharCode((31&i)<<6|r);else l+=String.fromCharCode(i)}}function M(e,t,n,i){if(!(i>0))return 0;for(var r=n,o=n+i-1,a=0;a<e.length;++a){var s=e.charCodeAt(a);if(s>=55296&&s<=57343)s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a);if(s<=127){if(n>=o)break;t[n++]=s}else if(s<=2047){if(n+1>=o)break;t[n++]=192|s>>6,t[n++]=128|63&s}else if(s<=65535){if(n+2>=o)break;t[n++]=224|s>>12,t[n++]=128|s>>6&63,t[n++]=128|63&s}else if(s<=2097151){if(n+3>=o)break;t[n++]=240|s>>18,t[n++]=128|s>>12&63,t[n++]=128|s>>6&63,t[n++]=128|63&s}else if(s<=67108863){if(n+4>=o)break;t[n++]=248|s>>24,t[n++]=128|s>>18&63,t[n++]=128|s>>12&63,t[n++]=128|s>>6&63,t[n++]=128|63&s}else{if(n+5>=o)break;t[n++]=252|s>>30,t[n++]=128|s>>24&63,t[n++]=128|s>>18&63,t[n++]=128|s>>12&63,t[n++]=128|s>>6&63,t[n++]=128|63&s}}return t[n]=0,n-r}function z(e,t,n){return M(e,q,t,n)}function N(e){for(var t=0,n=0;n<e.length;++n){var i=e.charCodeAt(n);i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++n)),i<=127?++t:t+=i<=2047?2:i<=65535?3:i<=2097151?4:i<=67108863?5:6}return t}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");function U(){var e=function(){var e=new Error;if(!e.stack){try{throw new Error(0)}catch(t){e=t}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}();return t.extraStackTrace&&(e+="\n"+t.extraStackTrace()),function(e){return e.replace(/__Z[\w\d_]+/g,function(e){var t=function(e){return e}(e);return e===t?e:e+" ["+t+"]"})}(e)}var R,L,q,B,V,W,Y,H,J,G,X,Q,K,Z=65536,ee=16777216,te=16777216;function ne(e,t){return e%t>0&&(e+=t-e%t),e}function ie(e){t.buffer=R=e}function re(){t.HEAP8=L=new Int8Array(R),t.HEAP16=B=new Int16Array(R),t.HEAP32=V=new Int32Array(R),t.HEAPU8=q=new Uint8Array(R),t.HEAPU16=new Uint16Array(R),t.HEAPU32=new Uint32Array(R),t.HEAPF32=W=new Float32Array(R),t.HEAPF64=Y=new Float64Array(R)}function oe(){var e=t.usingWasm?Z:ee,n=2147483648-e;if(V[K>>2]>n)return!1;var i=se;for(se=Math.max(se,te);se<V[K>>2];)se=se<=536870912?ne(2*se,e):Math.min(ne((3*se+2147483648)/4,e),n);var r=t.reallocBuffer(se);return r&&r.byteLength==se?(ie(r),re(),!0):(se=i,!1)}H=G=K=0,J=!1,t.reallocBuffer||(t.reallocBuffer=function(e){var t;try{var n=L;t=new ArrayBuffer(e),new Int8Array(t).set(n)}catch(e){return!1}return!!Qt(t)&&t});try{Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get)(new ArrayBuffer(4))}catch(e){(function(e){return e.byteLength})}var ae=t.TOTAL_STACK||5242880,se=t.TOTAL_MEMORY||16777216;function le(e){for(;e.length>0;){var n=e.shift();if("function"!=typeof n){var i=n.func;"number"==typeof i?void 0===n.arg?t.dynCall_v(i):t.dynCall_vi(i,n.arg):i(void 0===n.arg?null:n.arg)}else n()}}se<ae&&g("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+se+"! (TOTAL_STACK="+ae+")"),t.buffer?R=t.buffer:("object"==typeof WebAssembly&&"function"==typeof WebAssembly.Memory?(t.wasmMemory=new WebAssembly.Memory({initial:se/Z}),R=t.wasmMemory.buffer):R=new ArrayBuffer(se),t.buffer=R),re();var ce=[],de=[],ue=[],fe=[],he=[],pe=!1;function me(e){ce.unshift(e)}function ge(e){he.unshift(e)}function ye(e,t){L.set(e,t)}function _e(e,t,n){for(var i=0;i<e.length;++i)L[t++>>0]=e.charCodeAt(i);n||(L[t>>0]=0)}var ve=Math.abs,be=Math.ceil,we=Math.floor,xe=Math.min,Ee=0,ke=null,Se=null;function Te(e){Ee++,t.monitorRunDependencies&&t.monitorRunDependencies(Ee)}function De(e){if(Ee--,t.monitorRunDependencies&&t.monitorRunDependencies(Ee),0==Ee&&(null!==ke&&(clearInterval(ke),ke=null),Se)){var n=Se;Se=null,n()}}t.preloadedImages={},t.preloadedAudios={};var Ae="data:application/octet-stream;base64,";function $e(e){return String.prototype.startsWith?e.startsWith(Ae):0===e.indexOf(Ae)}!function(){var e="clingo.wast",n="clingo.wasm",i="clingo.temp.asm.js";$e(e)||(e=p(e)),$e(n)||(n=p(n)),$e(i)||(i=p(i));var r={global:null,env:null,asm2wasm:x,parent:t},o=null;function a(){try{if(t.wasmBinary)return new Uint8Array(t.wasmBinary);if(t.readBinary)return t.readBinary(n);throw"both async and sync fetching of the wasm failed"}catch(e){ln(e)}}function s(e,i,s){if("object"!=typeof WebAssembly)return g("no native wasm support detected"),!1;if(!(t.wasmMemory instanceof WebAssembly.Memory))return g("no native wasm Memory in use"),!1;function d(e,n){(o=e.exports).memory&&function(e){var n=t.buffer;e.byteLength<n.byteLength&&g("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here");var i=new Int8Array(n);new Int8Array(e).set(i),ie(e),re()}(o.memory),t.asm=o,t.usingWasm=!0,De()}if(i.memory=t.wasmMemory,r.global={NaN:NaN,Infinity:1/0},r["global.Math"]=Math,r.env=i,Te(),t.instantiateWasm)try{return t.instantiateWasm(r,d)}catch(e){return g("Module.instantiateWasm callback failed with error: "+e),!1}function u(e){d(e.instance,e.module)}function f(e){(t.wasmBinary||!l&&!c||"function"!=typeof fetch?new Promise(function(e,t){e(a())}):fetch(n,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+n+"'";return e.arrayBuffer()}).catch(function(){return a()})).then(function(e){return WebAssembly.instantiate(e,r)}).then(e).catch(function(e){g("failed to asynchronously prepare wasm: "+e),ln(e)})}return t.wasmBinary||"function"!=typeof WebAssembly.instantiateStreaming||$e(n)||"function"!=typeof fetch?f(u):WebAssembly.instantiateStreaming(fetch(n,{credentials:"same-origin"}),r).then(u).catch(function(e){g("wasm streaming compile failed: "+e),g("falling back to ArrayBuffer instantiation"),f(u)}),{}}t.asmPreload=t.asm,t.reallocBuffer,t.reallocBuffer=function(e){return function(e){e=ne(e,t.usingWasm?Z:ee);var n=t.buffer.byteLength;if(t.usingWasm)try{return-1!==t.wasmMemory.grow((e-n)/65536)?t.buffer=t.wasmMemory.buffer:null}catch(e){return null}}(e)},t.asm=function(e,n,i){if(!(n=function(e){return e}(n)).table){var r=t.wasmTableSize;void 0===r&&(r=1024);var o=t.wasmMaxTableSize;"object"==typeof WebAssembly&&"function"==typeof WebAssembly.Table?n.table=void 0!==o?new WebAssembly.Table({initial:r,maximum:o,element:"anyfunc"}):new WebAssembly.Table({initial:r,element:"anyfunc"}):n.table=new Array(r),t.wasmTable=n.table}var a;return n.memoryBase||(n.memoryBase=t.STATIC_BASE),n.tableBase||(n.tableBase=0),k(a=s(0,n),"no binaryen method succeeded."),a}}(),H=205792,de.push({func:function(){kt()}},{func:function(){Ut()}},{func:function(){qt()}},{func:function(){Bt()}},{func:function(){Vt()}},{func:function(){Wt()}},{func:function(){Dt()}},{func:function(){St()}},{func:function(){Tt()}},{func:function(){jt()}},{func:function(){Lt()}},{func:function(){Pt()}},{func:function(){Ot()}},{func:function(){$t()}},{func:function(){Rt()}},{func:function(){Yt()}},{func:function(){It()}},{func:function(){Mt()}},{func:function(){zt()}},{func:function(){Nt()}},{func:function(){Ct()}},{func:function(){Ht()}},{func:function(){At()}});t.STATIC_BASE=1024,t.STATIC_BUMP=204768;var Ce=H;function Fe(e){!function(e,n){if(n&&t.noExitRuntime&&0===e)return;t.noExitRuntime||(E=!0,G=Et,le(fe),t.onExit&&t.onExit(e));t.quit(e,new an(e))}(e)}H+=16;var je={};function Ie(){ln()}function Me(){return d||"undefined"!=typeof dateNow||(l||c)&&self.performance&&self.performance.now}var ze={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function Ne(e){return t.___errno_location&&(V[t.___errno_location()>>2]=e),e}function Ue(e,t){var n;if(0===e)n=Date.now();else{if(1!==e||!Me())return Ne(ze.EINVAL),-1;n=Ie()}return V[t>>2]=n/1e3|0,V[t+4>>2]=n%1e3*1e3*1e3|0,0}var Re={last:0,caught:[],infos:{},deAdjust:function(e){if(!e||Re.infos[e])return e;for(var t in Re.infos){var n=+t;if(Re.infos[n].adjusted===e)return n}return e},addRef:function(e){e&&Re.infos[e].refcount++},decRef:function(e){if(e){var n=Re.infos[e];k(n.refcount>0),n.refcount--,0!==n.refcount||n.rethrown||(n.destructor&&t.dynCall_vi(n.destructor,e),delete Re.infos[e],Le(e))}},clearRef:function(e){e&&(Re.infos[e].refcount=0)}};function Le(e){try{return Kt(e)}catch(e){}}function qe(){var e=Re.caught.pop();throw e=Re.deAdjust(e),Re.infos[e].rethrown||(Re.caught.push(e),Re.infos[e].rethrown=!0),Re.last=e,e+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}var Be={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"},Ve={splitPath:function(e){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1)},normalizeArray:function(e,t){for(var n=0,i=e.length-1;i>=0;i--){var r=e[i];"."===r?e.splice(i,1):".."===r?(e.splice(i,1),n++):n&&(e.splice(i,1),n--)}if(t)for(;n;n--)e.unshift("..");return e},normalize:function(e){var t="/"===e.charAt(0),n="/"===e.substr(-1);return(e=Ve.normalizeArray(e.split("/").filter(function(e){return!!e}),!t).join("/"))||t||(e="."),e&&n&&(e+="/"),(t?"/":"")+e},dirname:function(e){var t=Ve.splitPath(e),n=t[0],i=t[1];return n||i?(i&&(i=i.substr(0,i.length-1)),n+i):"."},basename:function(e){if("/"===e)return"/";var t=e.lastIndexOf("/");return-1===t?e:e.substr(t+1)},extname:function(e){return Ve.splitPath(e)[3]},join:function(){var e=Array.prototype.slice.call(arguments,0);return Ve.normalize(e.join("/"))},join2:function(e,t){return Ve.normalize(e+"/"+t)},resolve:function(){for(var e="",t=!1,n=arguments.length-1;n>=-1&&!t;n--){var i=n>=0?arguments[n]:Xe.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");if(!i)return"";e=i+"/"+e,t="/"===i.charAt(0)}return e=Ve.normalizeArray(e.split("/").filter(function(e){return!!e}),!t).join("/"),(t?"/":"")+e||"."},relative:function(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=Ve.resolve(e).substr(1),t=Ve.resolve(t).substr(1);for(var i=n(e.split("/")),r=n(t.split("/")),o=Math.min(i.length,r.length),a=o,s=0;s<o;s++)if(i[s]!==r[s]){a=s;break}var l=[];for(s=a;s<i.length;s++)l.push("..");return(l=l.concat(r.slice(a))).join("/")}},We={ttys:[],init:function(){},shutdown:function(){},register:function(e,t){We.ttys[e]={input:[],output:[],ops:t},Xe.registerDevice(e,We.stream_ops)},stream_ops:{open:function(e){var t=We.ttys[e.node.rdev];if(!t)throw new Xe.ErrnoError(ze.ENODEV);e.tty=t,e.seekable=!1},close:function(e){e.tty.ops.flush(e.tty)},flush:function(e){e.tty.ops.flush(e.tty)},read:function(e,t,n,i,r){if(!e.tty||!e.tty.ops.get_char)throw new Xe.ErrnoError(ze.ENXIO);for(var o=0,a=0;a<i;a++){var s;try{s=e.tty.ops.get_char(e.tty)}catch(e){throw new Xe.ErrnoError(ze.EIO)}if(void 0===s&&0===o)throw new Xe.ErrnoError(ze.EAGAIN);if(null===s||void 0===s)break;o++,t[n+a]=s}return o&&(e.node.timestamp=Date.now()),o},write:function(e,t,n,i,r){if(!e.tty||!e.tty.ops.put_char)throw new Xe.ErrnoError(ze.ENXIO);for(var o=0;o<i;o++)try{e.tty.ops.put_char(e.tty,t[n+o])}catch(e){throw new Xe.ErrnoError(ze.EIO)}return i&&(e.node.timestamp=Date.now()),o}},default_tty_ops:{get_char:function(e){if(!e.input.length){var t=null;if(d){var r=new n(256),o=0,a="win32"!=i.platform,s=i.stdin.fd;if(a){var l=!1;try{s=vt.openSync("/dev/stdin","r"),l=!0}catch(e){}}try{o=vt.readSync(s,r,0,256,null)}catch(e){if(-1==e.toString().indexOf("EOF"))throw e;o=0}l&&vt.closeSync(s),t=o>0?r.slice(0,o).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(t=window.prompt("Input: "))&&(t+="\n"):"function"==typeof readline&&null!==(t=readline())&&(t+="\n");if(!t)return null;e.input=wt(t,!0)}return e.input.shift()},put_char:function(e,t){null===t||10===t?(m(I(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},flush:function(e){e.output&&e.output.length>0&&(m(I(e.output,0)),e.output=[])}},default_tty1_ops:{put_char:function(e,t){null===t||10===t?(g(I(e.output,0)),e.output=[]):0!=t&&e.output.push(t)},flush:function(e){e.output&&e.output.length>0&&(g(I(e.output,0)),e.output=[])}}},Ye={ops_table:null,mount:function(e){return Ye.createNode(null,"/",16895,0)},createNode:function(e,t,n,i){if(Xe.isBlkdev(n)||Xe.isFIFO(n))throw new Xe.ErrnoError(ze.EPERM);Ye.ops_table||(Ye.ops_table={dir:{node:{getattr:Ye.node_ops.getattr,setattr:Ye.node_ops.setattr,lookup:Ye.node_ops.lookup,mknod:Ye.node_ops.mknod,rename:Ye.node_ops.rename,unlink:Ye.node_ops.unlink,rmdir:Ye.node_ops.rmdir,readdir:Ye.node_ops.readdir,symlink:Ye.node_ops.symlink},stream:{llseek:Ye.stream_ops.llseek}},file:{node:{getattr:Ye.node_ops.getattr,setattr:Ye.node_ops.setattr},stream:{llseek:Ye.stream_ops.llseek,read:Ye.stream_ops.read,write:Ye.stream_ops.write,allocate:Ye.stream_ops.allocate,mmap:Ye.stream_ops.mmap,msync:Ye.stream_ops.msync}},link:{node:{getattr:Ye.node_ops.getattr,setattr:Ye.node_ops.setattr,readlink:Ye.node_ops.readlink},stream:{}},chrdev:{node:{getattr:Ye.node_ops.getattr,setattr:Ye.node_ops.setattr},stream:Xe.chrdev_stream_ops}});var r=Xe.createNode(e,t,n,i);return Xe.isDir(r.mode)?(r.node_ops=Ye.ops_table.dir.node,r.stream_ops=Ye.ops_table.dir.stream,r.contents={}):Xe.isFile(r.mode)?(r.node_ops=Ye.ops_table.file.node,r.stream_ops=Ye.ops_table.file.stream,r.usedBytes=0,r.contents=null):Xe.isLink(r.mode)?(r.node_ops=Ye.ops_table.link.node,r.stream_ops=Ye.ops_table.link.stream):Xe.isChrdev(r.mode)&&(r.node_ops=Ye.ops_table.chrdev.node,r.stream_ops=Ye.ops_table.chrdev.stream),r.timestamp=Date.now(),e&&(e.contents[t]=r),r},getFileDataAsRegularArray:function(e){if(e.contents&&e.contents.subarray){for(var t=[],n=0;n<e.usedBytes;++n)t.push(e.contents[n]);return t}return e.contents},getFileDataAsTypedArray:function(e){return e.contents?e.contents.subarray?e.contents.subarray(0,e.usedBytes):new Uint8Array(e.contents):new Uint8Array},expandFileStorage:function(e,t){if(e.contents&&e.contents.subarray&&t>e.contents.length&&(e.contents=Ye.getFileDataAsRegularArray(e),e.usedBytes=e.contents.length),!e.contents||e.contents.subarray){var n=e.contents?e.contents.length:0;if(n>=t)return;t=Math.max(t,n*(n<1048576?2:1.125)|0),0!=n&&(t=Math.max(t,256));var i=e.contents;return e.contents=new Uint8Array(t),void(e.usedBytes>0&&e.contents.set(i.subarray(0,e.usedBytes),0))}for(!e.contents&&t>0&&(e.contents=[]);e.contents.length<t;)e.contents.push(0)},resizeFileStorage:function(e,t){if(e.usedBytes!=t){if(0==t)return e.contents=null,void(e.usedBytes=0);if(!e.contents||e.contents.subarray){var n=e.contents;return e.contents=new Uint8Array(new ArrayBuffer(t)),n&&e.contents.set(n.subarray(0,Math.min(t,e.usedBytes))),void(e.usedBytes=t)}if(e.contents||(e.contents=[]),e.contents.length>t)e.contents.length=t;else for(;e.contents.length<t;)e.contents.push(0);e.usedBytes=t}},node_ops:{getattr:function(e){var t={};return t.dev=Xe.isChrdev(e.mode)?e.id:1,t.ino=e.id,t.mode=e.mode,t.nlink=1,t.uid=0,t.gid=0,t.rdev=e.rdev,Xe.isDir(e.mode)?t.size=4096:Xe.isFile(e.mode)?t.size=e.usedBytes:Xe.isLink(e.mode)?t.size=e.link.length:t.size=0,t.atime=new Date(e.timestamp),t.mtime=new Date(e.timestamp),t.ctime=new Date(e.timestamp),t.blksize=4096,t.blocks=Math.ceil(t.size/t.blksize),t},setattr:function(e,t){void 0!==t.mode&&(e.mode=t.mode),void 0!==t.timestamp&&(e.timestamp=t.timestamp),void 0!==t.size&&Ye.resizeFileStorage(e,t.size)},lookup:function(e,t){throw Xe.genericErrors[ze.ENOENT]},mknod:function(e,t,n,i){return Ye.createNode(e,t,n,i)},rename:function(e,t,n){if(Xe.isDir(e.mode)){var i;try{i=Xe.lookupNode(t,n)}catch(e){}if(i)for(var r in i.contents)throw new Xe.ErrnoError(ze.ENOTEMPTY)}delete e.parent.contents[e.name],e.name=n,t.contents[n]=e,e.parent=t},unlink:function(e,t){delete e.contents[t]},rmdir:function(e,t){var n=Xe.lookupNode(e,t);for(var i in n.contents)throw new Xe.ErrnoError(ze.ENOTEMPTY);delete e.contents[t]},readdir:function(e){var t=[".",".."];for(var n in e.contents)e.contents.hasOwnProperty(n)&&t.push(n);return t},symlink:function(e,t,n){var i=Ye.createNode(e,t,41471,0);return i.link=n,i},readlink:function(e){if(!Xe.isLink(e.mode))throw new Xe.ErrnoError(ze.EINVAL);return e.link}},stream_ops:{read:function(e,t,n,i,r){var o=e.node.contents;if(r>=e.node.usedBytes)return 0;var a=Math.min(e.node.usedBytes-r,i);if(k(a>=0),a>8&&o.subarray)t.set(o.subarray(r,r+a),n);else for(var s=0;s<a;s++)t[n+s]=o[r+s];return a},write:function(e,t,n,i,r,o){if(!i)return 0;var a=e.node;if(a.timestamp=Date.now(),t.subarray&&(!a.contents||a.contents.subarray)){if(o)return a.contents=t.subarray(n,n+i),a.usedBytes=i,i;if(0===a.usedBytes&&0===r)return a.contents=new Uint8Array(t.subarray(n,n+i)),a.usedBytes=i,i;if(r+i<=a.usedBytes)return a.contents.set(t.subarray(n,n+i),r),i}if(Ye.expandFileStorage(a,r+i),a.contents.subarray&&t.subarray)a.contents.set(t.subarray(n,n+i),r);else for(var s=0;s<i;s++)a.contents[r+s]=t[n+s];return a.usedBytes=Math.max(a.usedBytes,r+i),i},llseek:function(e,t,n){var i=t;if(1===n?i+=e.position:2===n&&Xe.isFile(e.node.mode)&&(i+=e.node.usedBytes),i<0)throw new Xe.ErrnoError(ze.EINVAL);return i},allocate:function(e,t,n){Ye.expandFileStorage(e.node,t+n),e.node.usedBytes=Math.max(e.node.usedBytes,t+n)},mmap:function(e,t,n,i,r,o,a){if(!Xe.isFile(e.node.mode))throw new Xe.ErrnoError(ze.ENODEV);var s,l,c=e.node.contents;if(2&a||c.buffer!==t&&c.buffer!==t.buffer){if((r>0||r+i<e.node.usedBytes)&&(c=c.subarray?c.subarray(r,r+i):Array.prototype.slice.call(c,r,r+i)),l=!0,!(s=Zt(i)))throw new Xe.ErrnoError(ze.ENOMEM);t.set(c,s)}else l=!1,s=c.byteOffset;return{ptr:s,allocated:l}},msync:function(e,t,n,i,r){if(!Xe.isFile(e.node.mode))throw new Xe.ErrnoError(ze.ENODEV);if(2&r)return 0;Ye.stream_ops.write(e,t,0,i,n,!1);return 0}}},He={dbs:{},indexedDB:function(){if("undefined"!=typeof indexedDB)return indexedDB;var e=null;return"object"==typeof window&&(e=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB),k(e,"IDBFS used, but indexedDB not supported"),e},DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function(e){return Ye.mount.apply(null,arguments)},syncfs:function(e,t,n){He.getLocalSet(e,function(i,r){if(i)return n(i);He.getRemoteSet(e,function(e,i){if(e)return n(e);var o=t?i:r,a=t?r:i;He.reconcile(o,a,n)})})},getDB:function(e,t){var n,i=He.dbs[e];if(i)return t(null,i);try{n=He.indexedDB().open(e,He.DB_VERSION)}catch(e){return t(e)}if(!n)return t("Unable to connect to IndexedDB");n.onupgradeneeded=function(e){var t,n=e.target.result,i=e.target.transaction;(t=n.objectStoreNames.contains(He.DB_STORE_NAME)?i.objectStore(He.DB_STORE_NAME):n.createObjectStore(He.DB_STORE_NAME)).indexNames.contains("timestamp")||t.createIndex("timestamp","timestamp",{unique:!1})},n.onsuccess=function(){i=n.result,He.dbs[e]=i,t(null,i)},n.onerror=function(e){t(this.error),e.preventDefault()}},getLocalSet:function(e,t){var n={};function i(e){return"."!==e&&".."!==e}function r(e){return function(t){return Ve.join2(e,t)}}for(var o=Xe.readdir(e.mountpoint).filter(i).map(r(e.mountpoint));o.length;){var a,s=o.pop();try{a=Xe.stat(s)}catch(e){return t(e)}Xe.isDir(a.mode)&&o.push.apply(o,Xe.readdir(s).filter(i).map(r(s))),n[s]={timestamp:a.mtime}}return t(null,{type:"local",entries:n})},getRemoteSet:function(e,t){var n={};He.getDB(e.mountpoint,function(e,i){if(e)return t(e);try{var r=i.transaction([He.DB_STORE_NAME],"readonly");r.onerror=function(e){t(this.error),e.preventDefault()},r.objectStore(He.DB_STORE_NAME).index("timestamp").openKeyCursor().onsuccess=function(e){var r=e.target.result;if(!r)return t(null,{type:"remote",db:i,entries:n});n[r.primaryKey]={timestamp:r.key},r.continue()}}catch(e){return t(e)}})},loadLocalEntry:function(e,t){var n,i;try{i=Xe.lookupPath(e).node,n=Xe.stat(e)}catch(e){return t(e)}return Xe.isDir(n.mode)?t(null,{timestamp:n.mtime,mode:n.mode}):Xe.isFile(n.mode)?(i.contents=Ye.getFileDataAsTypedArray(i),t(null,{timestamp:n.mtime,mode:n.mode,contents:i.contents})):t(new Error("node type not supported"))},storeLocalEntry:function(e,t,n){try{if(Xe.isDir(t.mode))Xe.mkdir(e,t.mode);else{if(!Xe.isFile(t.mode))return n(new Error("node type not supported"));Xe.writeFile(e,t.contents,{canOwn:!0})}Xe.chmod(e,t.mode),Xe.utime(e,t.timestamp,t.timestamp)}catch(e){return n(e)}n(null)},removeLocalEntry:function(e,t){try{Xe.lookupPath(e);var n=Xe.stat(e);Xe.isDir(n.mode)?Xe.rmdir(e):Xe.isFile(n.mode)&&Xe.unlink(e)}catch(e){return t(e)}t(null)},loadRemoteEntry:function(e,t,n){var i=e.get(t);i.onsuccess=function(e){n(null,e.target.result)},i.onerror=function(e){n(this.error),e.preventDefault()}},storeRemoteEntry:function(e,t,n,i){var r=e.put(n,t);r.onsuccess=function(){i(null)},r.onerror=function(e){i(this.error),e.preventDefault()}},removeRemoteEntry:function(e,t,n){var i=e.delete(t);i.onsuccess=function(){n(null)},i.onerror=function(e){n(this.error),e.preventDefault()}},reconcile:function(e,t,n){var i=0,r=[];Object.keys(e.entries).forEach(function(n){var o=e.entries[n],a=t.entries[n];(!a||o.timestamp>a.timestamp)&&(r.push(n),i++)});var o=[];if(Object.keys(t.entries).forEach(function(n){t.entries[n];e.entries[n]||(o.push(n),i++)}),!i)return n(null);var a=0,s=("remote"===e.type?e.db:t.db).transaction([He.DB_STORE_NAME],"readwrite"),l=s.objectStore(He.DB_STORE_NAME);function c(e){return e?c.errored?void 0:(c.errored=!0,n(e)):++a>=i?n(null):void 0}s.onerror=function(e){c(this.error),e.preventDefault()},r.sort().forEach(function(e){"local"===t.type?He.loadRemoteEntry(l,e,function(t,n){if(t)return c(t);He.storeLocalEntry(e,n,c)}):He.loadLocalEntry(e,function(t,n){if(t)return c(t);He.storeRemoteEntry(l,e,n,c)})}),o.sort().reverse().forEach(function(e){"local"===t.type?He.removeLocalEntry(e,c):He.removeRemoteEntry(l,e,c)})}},Je={isWindows:!1,staticInit:function(){Je.isWindows=!!i.platform.match(/^win/);var e=i.binding("constants");e.fs&&(e=e.fs),Je.flagsForNodeMap={1024:e.O_APPEND,64:e.O_CREAT,128:e.O_EXCL,0:e.O_RDONLY,2:e.O_RDWR,4096:e.O_SYNC,512:e.O_TRUNC,1:e.O_WRONLY}},bufferFrom:function(e){return n.alloc?n.from(e):new n(e)},mount:function(e){return k(d),Je.createNode(null,"/",Je.getMode(e.opts.root),0)},createNode:function(e,t,n,i){if(!Xe.isDir(n)&&!Xe.isFile(n)&&!Xe.isLink(n))throw new Xe.ErrnoError(ze.EINVAL);var r=Xe.createNode(e,t,n);return r.node_ops=Je.node_ops,r.stream_ops=Je.stream_ops,r},getMode:function(e){var t;try{t=vt.lstatSync(e),Je.isWindows&&(t.mode=t.mode|(292&t.mode)>>2)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}return t.mode},realPath:function(e){for(var t=[];e.parent!==e;)t.push(e.name),e=e.parent;return t.push(e.mount.opts.root),t.reverse(),Ve.join.apply(null,t)},flagsForNode:function(e){e&=-2097153,e&=-2049,e&=-32769,e&=-524289;var t=0;for(var n in Je.flagsForNodeMap)e&n&&(t|=Je.flagsForNodeMap[n],e^=n);if(e)throw new Xe.ErrnoError(ze.EINVAL);return t},node_ops:{getattr:function(e){var t,n=Je.realPath(e);try{t=vt.lstatSync(n)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}return Je.isWindows&&!t.blksize&&(t.blksize=4096),Je.isWindows&&!t.blocks&&(t.blocks=(t.size+t.blksize-1)/t.blksize|0),{dev:t.dev,ino:t.ino,mode:t.mode,nlink:t.nlink,uid:t.uid,gid:t.gid,rdev:t.rdev,size:t.size,atime:t.atime,mtime:t.mtime,ctime:t.ctime,blksize:t.blksize,blocks:t.blocks}},setattr:function(e,t){var n=Je.realPath(e);try{if(void 0!==t.mode&&(vt.chmodSync(n,t.mode),e.mode=t.mode),void 0!==t.timestamp){var i=new Date(t.timestamp);vt.utimesSync(n,i,i)}void 0!==t.size&&vt.truncateSync(n,t.size)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},lookup:function(e,t){var n=Ve.join2(Je.realPath(e),t),i=Je.getMode(n);return Je.createNode(e,t,i)},mknod:function(e,t,n,i){var r=Je.createNode(e,t,n,i),o=Je.realPath(r);try{Xe.isDir(r.mode)?vt.mkdirSync(o,r.mode):vt.writeFileSync(o,"",{mode:r.mode})}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}return r},rename:function(e,t,n){var i=Je.realPath(e),r=Ve.join2(Je.realPath(t),n);try{vt.renameSync(i,r)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},unlink:function(e,t){var n=Ve.join2(Je.realPath(e),t);try{vt.unlinkSync(n)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},rmdir:function(e,t){var n=Ve.join2(Je.realPath(e),t);try{vt.rmdirSync(n)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},readdir:function(e){var t=Je.realPath(e);try{return vt.readdirSync(t)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},symlink:function(e,t,n){var i=Ve.join2(Je.realPath(e),t);try{vt.symlinkSync(n,i)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},readlink:function(e){var t=Je.realPath(e);try{return t=vt.readlinkSync(t),t=bt.relative(bt.resolve(e.mount.opts.root),t)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}}},stream_ops:{open:function(e){var t=Je.realPath(e.node);try{Xe.isFile(e.node.mode)&&(e.nfd=vt.openSync(t,Je.flagsForNode(e.flags)))}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},close:function(e){try{Xe.isFile(e.node.mode)&&e.nfd&&vt.closeSync(e.nfd)}catch(e){if(!e.code)throw e;throw new Xe.ErrnoError(ze[e.code])}},read:function(e,t,n,i,r){if(0===i)return 0;try{return vt.readSync(e.nfd,Je.bufferFrom(t.buffer),n,i,r)}catch(e){throw new Xe.ErrnoError(ze[e.code])}},write:function(e,t,n,i,r){try{return vt.writeSync(e.nfd,Je.bufferFrom(t.buffer),n,i,r)}catch(e){throw new Xe.ErrnoError(ze[e.code])}},llseek:function(e,t,n){var i=t;if(1===n)i+=e.position;else if(2===n&&Xe.isFile(e.node.mode))try{i+=vt.fstatSync(e.nfd).size}catch(e){throw new Xe.ErrnoError(ze[e.code])}if(i<0)throw new Xe.ErrnoError(ze.EINVAL);return i}}},Ge={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function(e){k(c),Ge.reader||(Ge.reader=new FileReaderSync);var t=Ge.createNode(null,"/",Ge.DIR_MODE,0),n={};function i(e){for(var i=e.split("/"),r=t,o=0;o<i.length-1;o++){var a=i.slice(0,o+1).join("/");n[a]||(n[a]=Ge.createNode(r,i[o],Ge.DIR_MODE,0)),r=n[a]}return r}function r(e){var t=e.split("/");return t[t.length-1]}return Array.prototype.forEach.call(e.opts.files||[],function(e){Ge.createNode(i(e.name),r(e.name),Ge.FILE_MODE,0,e,e.lastModifiedDate)}),(e.opts.blobs||[]).forEach(function(e){Ge.createNode(i(e.name),r(e.name),Ge.FILE_MODE,0,e.data)}),(e.opts.packages||[]).forEach(function(e){e.metadata.files.forEach(function(t){var n=t.filename.substr(1);Ge.createNode(i(n),r(n),Ge.FILE_MODE,0,e.blob.slice(t.start,t.end))})}),t},createNode:function(e,t,n,i,r,o){var a=Xe.createNode(e,t,n);return a.mode=n,a.node_ops=Ge.node_ops,a.stream_ops=Ge.stream_ops,a.timestamp=(o||new Date).getTime(),k(Ge.FILE_MODE!==Ge.DIR_MODE),n===Ge.FILE_MODE?(a.size=r.size,a.contents=r):(a.size=4096,a.contents={}),e&&(e.contents[t]=a),a},node_ops:{getattr:function(e){return{dev:1,ino:void 0,mode:e.mode,nlink:1,uid:0,gid:0,rdev:void 0,size:e.size,atime:new Date(e.timestamp),mtime:new Date(e.timestamp),ctime:new Date(e.timestamp),blksize:4096,blocks:Math.ceil(e.size/4096)}},setattr:function(e,t){void 0!==t.mode&&(e.mode=t.mode),void 0!==t.timestamp&&(e.timestamp=t.timestamp)},lookup:function(e,t){throw new Xe.ErrnoError(ze.ENOENT)},mknod:function(e,t,n,i){throw new Xe.ErrnoError(ze.EPERM)},rename:function(e,t,n){throw new Xe.ErrnoError(ze.EPERM)},unlink:function(e,t){throw new Xe.ErrnoError(ze.EPERM)},rmdir:function(e,t){throw new Xe.ErrnoError(ze.EPERM)},readdir:function(e){var t=[".",".."];for(var n in e.contents)e.contents.hasOwnProperty(n)&&t.push(n);return t},symlink:function(e,t,n){throw new Xe.ErrnoError(ze.EPERM)},readlink:function(e){throw new Xe.ErrnoError(ze.EPERM)}},stream_ops:{read:function(e,t,n,i,r){if(r>=e.node.size)return 0;var o=e.node.contents.slice(r,r+i),a=Ge.reader.readAsArrayBuffer(o);return t.set(new Uint8Array(a),n),o.size},write:function(e,t,n,i,r){throw new Xe.ErrnoError(ze.EIO)},llseek:function(e,t,n){var i=t;if(1===n?i+=e.position:2===n&&Xe.isFile(e.node.mode)&&(i+=e.node.size),i<0)throw new Xe.ErrnoError(ze.EINVAL);return i}}};H+=16,H+=16;var Xe={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof Xe.ErrnoError))throw e+" : "+U();return Ne(e.errno)},lookupPath:function(e,t){if(e=Ve.resolve(Xe.cwd(),e),t=t||{},!e)return{path:"",node:null};var n={follow_mount:!0,recurse_count:0};for(var i in n)void 0===t[i]&&(t[i]=n[i]);if(t.recurse_count>8)throw new Xe.ErrnoError(ze.ELOOP);for(var r=Ve.normalizeArray(e.split("/").filter(function(e){return!!e}),!1),o=Xe.root,a="/",s=0;s<r.length;s++){var l=s===r.length-1;if(l&&t.parent)break;if(o=Xe.lookupNode(o,r[s]),a=Ve.join2(a,r[s]),Xe.isMountpoint(o)&&(!l||l&&t.follow_mount)&&(o=o.mounted.root),!l||t.follow)for(var c=0;Xe.isLink(o.mode);){var d=Xe.readlink(a);if(a=Ve.resolve(Ve.dirname(a),d),o=Xe.lookupPath(a,{recurse_count:t.recurse_count}).node,c++>40)throw new Xe.ErrnoError(ze.ELOOP)}}return{path:a,node:o}},getPath:function(e){for(var t;;){if(Xe.isRoot(e)){var n=e.mount.mountpoint;return t?"/"!==n[n.length-1]?n+"/"+t:n+t:n}t=t?e.name+"/"+t:e.name,e=e.parent}},hashName:function(e,t){for(var n=0,i=0;i<t.length;i++)n=(n<<5)-n+t.charCodeAt(i)|0;return(e+n>>>0)%Xe.nameTable.length},hashAddNode:function(e){var t=Xe.hashName(e.parent.id,e.name);e.name_next=Xe.nameTable[t],Xe.nameTable[t]=e},hashRemoveNode:function(e){var t=Xe.hashName(e.parent.id,e.name);if(Xe.nameTable[t]===e)Xe.nameTable[t]=e.name_next;else for(var n=Xe.nameTable[t];n;){if(n.name_next===e){n.name_next=e.name_next;break}n=n.name_next}},lookupNode:function(e,t){var n=Xe.mayLookup(e);if(n)throw new Xe.ErrnoError(n,e);for(var i=Xe.hashName(e.id,t),r=Xe.nameTable[i];r;r=r.name_next){var o=r.name;if(r.parent.id===e.id&&o===t)return r}return Xe.lookup(e,t)},createNode:function(e,t,n,i){if(!Xe.FSNode){Xe.FSNode=function(e,t,n,i){e||(e=this),this.parent=e,this.mount=e.mount,this.mounted=null,this.id=Xe.nextInode++,this.name=t,this.mode=n,this.node_ops={},this.stream_ops={},this.rdev=i},Xe.FSNode.prototype={};Object.defineProperties(Xe.FSNode.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(e){e?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(e){e?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return Xe.isDir(this.mode)}},isDevice:{get:function(){return Xe.isChrdev(this.mode)}}})}var r=new Xe.FSNode(e,t,n,i);return Xe.hashAddNode(r),r},destroyNode:function(e){Xe.hashRemoveNode(e)},isRoot:function(e){return e===e.parent},isMountpoint:function(e){return!!e.mounted},isFile:function(e){return 32768==(61440&e)},isDir:function(e){return 16384==(61440&e)},isLink:function(e){return 40960==(61440&e)},isChrdev:function(e){return 8192==(61440&e)},isBlkdev:function(e){return 24576==(61440&e)},isFIFO:function(e){return 4096==(61440&e)},isSocket:function(e){return 49152==(49152&e)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(e){var t=Xe.flagModes[e];if(void 0===t)throw new Error("Unknown file open mode: "+e);return t},flagsToPermissionString:function(e){var t=["r","w","rw"][3&e];return 512&e&&(t+="w"),t},nodePermissions:function(e,t){return Xe.ignorePermissions?0:(-1===t.indexOf("r")||292&e.mode)&&(-1===t.indexOf("w")||146&e.mode)&&(-1===t.indexOf("x")||73&e.mode)?0:ze.EACCES},mayLookup:function(e){var t=Xe.nodePermissions(e,"x");return t||(e.node_ops.lookup?0:ze.EACCES)},mayCreate:function(e,t){try{Xe.lookupNode(e,t);return ze.EEXIST}catch(e){}return Xe.nodePermissions(e,"wx")},mayDelete:function(e,t,n){var i;try{i=Xe.lookupNode(e,t)}catch(e){return e.errno}var r=Xe.nodePermissions(e,"wx");if(r)return r;if(n){if(!Xe.isDir(i.mode))return ze.ENOTDIR;if(Xe.isRoot(i)||Xe.getPath(i)===Xe.cwd())return ze.EBUSY}else if(Xe.isDir(i.mode))return ze.EISDIR;return 0},mayOpen:function(e,t){return e?Xe.isLink(e.mode)?ze.ELOOP:Xe.isDir(e.mode)&&("r"!==Xe.flagsToPermissionString(t)||512&t)?ze.EISDIR:Xe.nodePermissions(e,Xe.flagsToPermissionString(t)):ze.ENOENT},MAX_OPEN_FDS:4096,nextfd:function(e,t){e=e||0,t=t||Xe.MAX_OPEN_FDS;for(var n=e;n<=t;n++)if(!Xe.streams[n])return n;throw new Xe.ErrnoError(ze.EMFILE)},getStream:function(e){return Xe.streams[e]},createStream:function(e,t,n){Xe.FSStream||(Xe.FSStream=function(){},Xe.FSStream.prototype={},Object.defineProperties(Xe.FSStream.prototype,{object:{get:function(){return this.node},set:function(e){this.node=e}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}}));var i=new Xe.FSStream;for(var r in e)i[r]=e[r];e=i;var o=Xe.nextfd(t,n);return e.fd=o,Xe.streams[o]=e,e},closeStream:function(e){Xe.streams[e]=null},chrdev_stream_ops:{open:function(e){var t=Xe.getDevice(e.node.rdev);e.stream_ops=t.stream_ops,e.stream_ops.open&&e.stream_ops.open(e)},llseek:function(){throw new Xe.ErrnoError(ze.ESPIPE)}},major:function(e){return e>>8},minor:function(e){return 255&e},makedev:function(e,t){return e<<8|t},registerDevice:function(e,t){Xe.devices[e]={stream_ops:t}},getDevice:function(e){return Xe.devices[e]},getMounts:function(e){for(var t=[],n=[e];n.length;){var i=n.pop();t.push(i),n.push.apply(n,i.mounts)}return t},syncfs:function(e,t){"function"==typeof e&&(t=e,e=!1),Xe.syncFSRequests++,Xe.syncFSRequests>1&&console.log("warning: "+Xe.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var n=Xe.getMounts(Xe.root.mount),i=0;function r(e){return k(Xe.syncFSRequests>0),Xe.syncFSRequests--,t(e)}function o(e){if(e)return o.errored?void 0:(o.errored=!0,r(e));++i>=n.length&&r(null)}n.forEach(function(t){if(!t.type.syncfs)return o(null);t.type.syncfs(t,e,o)})},mount:function(e,t,n){var i,r="/"===n,o=!n;if(r&&Xe.root)throw new Xe.ErrnoError(ze.EBUSY);if(!r&&!o){var a=Xe.lookupPath(n,{follow_mount:!1});if(n=a.path,i=a.node,Xe.isMountpoint(i))throw new Xe.ErrnoError(ze.EBUSY);if(!Xe.isDir(i.mode))throw new Xe.ErrnoError(ze.ENOTDIR)}var s={type:e,opts:t,mountpoint:n,mounts:[]},l=e.mount(s);return l.mount=s,s.root=l,r?Xe.root=l:i&&(i.mounted=s,i.mount&&i.mount.mounts.push(s)),l},unmount:function(e){var t=Xe.lookupPath(e,{follow_mount:!1});if(!Xe.isMountpoint(t.node))throw new Xe.ErrnoError(ze.EINVAL);var n=t.node,i=n.mounted,r=Xe.getMounts(i);Object.keys(Xe.nameTable).forEach(function(e){for(var t=Xe.nameTable[e];t;){var n=t.name_next;-1!==r.indexOf(t.mount)&&Xe.destroyNode(t),t=n}}),n.mounted=null;var o=n.mount.mounts.indexOf(i);k(-1!==o),n.mount.mounts.splice(o,1)},lookup:function(e,t){return e.node_ops.lookup(e,t)},mknod:function(e,t,n){var i=Xe.lookupPath(e,{parent:!0}).node,r=Ve.basename(e);if(!r||"."===r||".."===r)throw new Xe.ErrnoError(ze.EINVAL);var o=Xe.mayCreate(i,r);if(o)throw new Xe.ErrnoError(o);if(!i.node_ops.mknod)throw new Xe.ErrnoError(ze.EPERM);return i.node_ops.mknod(i,r,t,n)},create:function(e,t){return t=void 0!==t?t:438,t&=4095,t|=32768,Xe.mknod(e,t,0)},mkdir:function(e,t){return t=void 0!==t?t:511,t&=1023,t|=16384,Xe.mknod(e,t,0)},mkdirTree:function(e,t){for(var n=e.split("/"),i="",r=0;r<n.length;++r)if(n[r]){i+="/"+n[r];try{Xe.mkdir(i,t)}catch(e){if(e.errno!=ze.EEXIST)throw e}}},mkdev:function(e,t,n){return void 0===n&&(n=t,t=438),t|=8192,Xe.mknod(e,t,n)},symlink:function(e,t){if(!Ve.resolve(e))throw new Xe.ErrnoError(ze.ENOENT);var n=Xe.lookupPath(t,{parent:!0}).node;if(!n)throw new Xe.ErrnoError(ze.ENOENT);var i=Ve.basename(t),r=Xe.mayCreate(n,i);if(r)throw new Xe.ErrnoError(r);if(!n.node_ops.symlink)throw new Xe.ErrnoError(ze.EPERM);return n.node_ops.symlink(n,i,e)},rename:function(e,t){var n,i,r=Ve.dirname(e),o=Ve.dirname(t),a=Ve.basename(e),s=Ve.basename(t);try{n=Xe.lookupPath(e,{parent:!0}).node,i=Xe.lookupPath(t,{parent:!0}).node}catch(e){throw new Xe.ErrnoError(ze.EBUSY)}if(!n||!i)throw new Xe.ErrnoError(ze.ENOENT);if(n.mount!==i.mount)throw new Xe.ErrnoError(ze.EXDEV);var l,c=Xe.lookupNode(n,a),d=Ve.relative(e,o);if("."!==d.charAt(0))throw new Xe.ErrnoError(ze.EINVAL);if("."!==(d=Ve.relative(t,r)).charAt(0))throw new Xe.ErrnoError(ze.ENOTEMPTY);try{l=Xe.lookupNode(i,s)}catch(e){}if(c!==l){var u=Xe.isDir(c.mode),f=Xe.mayDelete(n,a,u);if(f)throw new Xe.ErrnoError(f);if(f=l?Xe.mayDelete(i,s,u):Xe.mayCreate(i,s))throw new Xe.ErrnoError(f);if(!n.node_ops.rename)throw new Xe.ErrnoError(ze.EPERM);if(Xe.isMountpoint(c)||l&&Xe.isMountpoint(l))throw new Xe.ErrnoError(ze.EBUSY);if(i!==n&&(f=Xe.nodePermissions(n,"w")))throw new Xe.ErrnoError(f);Xe.hashRemoveNode(c);try{n.node_ops.rename(c,i,s)}catch(e){throw e}finally{Xe.hashAddNode(c)}}},rmdir:function(e){var t=Xe.lookupPath(e,{parent:!0}).node,n=Ve.basename(e),i=Xe.lookupNode(t,n),r=Xe.mayDelete(t,n,!0);if(r)throw new Xe.ErrnoError(r);if(!t.node_ops.rmdir)throw new Xe.ErrnoError(ze.EPERM);if(Xe.isMountpoint(i))throw new Xe.ErrnoError(ze.EBUSY);t.node_ops.rmdir(t,n),Xe.destroyNode(i)},readdir:function(e){var t=Xe.lookupPath(e,{follow:!0}).node;if(!t.node_ops.readdir)throw new Xe.ErrnoError(ze.ENOTDIR);return t.node_ops.readdir(t)},unlink:function(e){var t=Xe.lookupPath(e,{parent:!0}).node,n=Ve.basename(e),i=Xe.lookupNode(t,n),r=Xe.mayDelete(t,n,!1);if(r)throw new Xe.ErrnoError(r);if(!t.node_ops.unlink)throw new Xe.ErrnoError(ze.EPERM);if(Xe.isMountpoint(i))throw new Xe.ErrnoError(ze.EBUSY);t.node_ops.unlink(t,n),Xe.destroyNode(i)},readlink:function(e){var t=Xe.lookupPath(e).node;if(!t)throw new Xe.ErrnoError(ze.ENOENT);if(!t.node_ops.readlink)throw new Xe.ErrnoError(ze.EINVAL);return Ve.resolve(Xe.getPath(t.parent),t.node_ops.readlink(t))},stat:function(e,t){var n=Xe.lookupPath(e,{follow:!t}).node;if(!n)throw new Xe.ErrnoError(ze.ENOENT);if(!n.node_ops.getattr)throw new Xe.ErrnoError(ze.EPERM);return n.node_ops.getattr(n)},lstat:function(e){return Xe.stat(e,!0)},chmod:function(e,t,n){var i;"string"==typeof e?i=Xe.lookupPath(e,{follow:!n}).node:i=e;if(!i.node_ops.setattr)throw new Xe.ErrnoError(ze.EPERM);i.node_ops.setattr(i,{mode:4095&t|-4096&i.mode,timestamp:Date.now()})},lchmod:function(e,t){Xe.chmod(e,t,!0)},fchmod:function(e,t){var n=Xe.getStream(e);if(!n)throw new Xe.ErrnoError(ze.EBADF);Xe.chmod(n.node,t)},chown:function(e,t,n,i){var r;"string"==typeof e?r=Xe.lookupPath(e,{follow:!i}).node:r=e;if(!r.node_ops.setattr)throw new Xe.ErrnoError(ze.EPERM);r.node_ops.setattr(r,{timestamp:Date.now()})},lchown:function(e,t,n){Xe.chown(e,t,n,!0)},fchown:function(e,t,n){var i=Xe.getStream(e);if(!i)throw new Xe.ErrnoError(ze.EBADF);Xe.chown(i.node,t,n)},truncate:function(e,t){if(t<0)throw new Xe.ErrnoError(ze.EINVAL);var n;"string"==typeof e?n=Xe.lookupPath(e,{follow:!0}).node:n=e;if(!n.node_ops.setattr)throw new Xe.ErrnoError(ze.EPERM);if(Xe.isDir(n.mode))throw new Xe.ErrnoError(ze.EISDIR);if(!Xe.isFile(n.mode))throw new Xe.ErrnoError(ze.EINVAL);var i=Xe.nodePermissions(n,"w");if(i)throw new Xe.ErrnoError(i);n.node_ops.setattr(n,{size:t,timestamp:Date.now()})},ftruncate:function(e,t){var n=Xe.getStream(e);if(!n)throw new Xe.ErrnoError(ze.EBADF);if(0==(2097155&n.flags))throw new Xe.ErrnoError(ze.EINVAL);Xe.truncate(n.node,t)},utime:function(e,t,n){var i=Xe.lookupPath(e,{follow:!0}).node;i.node_ops.setattr(i,{timestamp:Math.max(t,n)})},open:function(e,n,i,r,o){if(""===e)throw new Xe.ErrnoError(ze.ENOENT);var a;if(n="string"==typeof n?Xe.modeStringToFlags(n):n,i=void 0===i?438:i,i=64&n?4095&i|32768:0,"object"==typeof e)a=e;else{e=Ve.normalize(e);try{a=Xe.lookupPath(e,{follow:!(131072&n)}).node}catch(e){}}var s=!1;if(64&n)if(a){if(128&n)throw new Xe.ErrnoError(ze.EEXIST)}else a=Xe.mknod(e,i,0),s=!0;if(!a)throw new Xe.ErrnoError(ze.ENOENT);if(Xe.isChrdev(a.mode)&&(n&=-513),65536&n&&!Xe.isDir(a.mode))throw new Xe.ErrnoError(ze.ENOTDIR);if(!s){var l=Xe.mayOpen(a,n);if(l)throw new Xe.ErrnoError(l)}512&n&&Xe.truncate(a,0),n&=-641;var c=Xe.createStream({node:a,path:Xe.getPath(a),flags:n,seekable:!0,position:0,stream_ops:a.stream_ops,ungotten:[],error:!1},r,o);return c.stream_ops.open&&c.stream_ops.open(c),!t.logReadFiles||1&n||(Xe.readFiles||(Xe.readFiles={}),e in Xe.readFiles||(Xe.readFiles[e]=1,l("read file: "+e))),c},close:function(e){if(Xe.isClosed(e))throw new Xe.ErrnoError(ze.EBADF);e.getdents&&(e.getdents=null);try{e.stream_ops.close&&e.stream_ops.close(e)}catch(e){throw e}finally{Xe.closeStream(e.fd)}e.fd=null},isClosed:function(e){return null===e.fd},llseek:function(e,t,n){if(Xe.isClosed(e))throw new Xe.ErrnoError(ze.EBADF);if(!e.seekable||!e.stream_ops.llseek)throw new Xe.ErrnoError(ze.ESPIPE);return e.position=e.stream_ops.llseek(e,t,n),e.ungotten=[],e.position},read:function(e,t,n,i,r){if(i<0||r<0)throw new Xe.ErrnoError(ze.EINVAL);if(Xe.isClosed(e))throw new Xe.ErrnoError(ze.EBADF);if(1==(2097155&e.flags))throw new Xe.ErrnoError(ze.EBADF);if(Xe.isDir(e.node.mode))throw new Xe.ErrnoError(ze.EISDIR);if(!e.stream_ops.read)throw new Xe.ErrnoError(ze.EINVAL);var o=void 0!==r;if(o){if(!e.seekable)throw new Xe.ErrnoError(ze.ESPIPE)}else r=e.position;var a=e.stream_ops.read(e,t,n,i,r);return o||(e.position+=a),a},write:function(e,t,n,i,r,o){if(i<0||r<0)throw new Xe.ErrnoError(ze.EINVAL);if(Xe.isClosed(e))throw new Xe.ErrnoError(ze.EBADF);if(0==(2097155&e.flags))throw new Xe.ErrnoError(ze.EBADF);if(Xe.isDir(e.node.mode))throw new Xe.ErrnoError(ze.EISDIR);if(!e.stream_ops.write)throw new Xe.ErrnoError(ze.EINVAL);1024&e.flags&&Xe.llseek(e,0,2);var a=void 0!==r;if(a){if(!e.seekable)throw new Xe.ErrnoError(ze.ESPIPE)}else r=e.position;var s=e.stream_ops.write(e,t,n,i,r,o);a||(e.position+=s);try{e.path&&Xe.trackingDelegate.onWriteToFile&&Xe.trackingDelegate.onWriteToFile(e.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return s},allocate:function(e,t,n){if(Xe.isClosed(e))throw new Xe.ErrnoError(ze.EBADF);if(t<0||n<=0)throw new Xe.ErrnoError(ze.EINVAL);if(0==(2097155&e.flags))throw new Xe.ErrnoError(ze.EBADF);if(!Xe.isFile(e.node.mode)&&!Xe.isDir(e.node.mode))throw new Xe.ErrnoError(ze.ENODEV);if(!e.stream_ops.allocate)throw new Xe.ErrnoError(ze.EOPNOTSUPP);e.stream_ops.allocate(e,t,n)},mmap:function(e,t,n,i,r,o,a){if(1==(2097155&e.flags))throw new Xe.ErrnoError(ze.EACCES);if(!e.stream_ops.mmap)throw new Xe.ErrnoError(ze.ENODEV);return e.stream_ops.mmap(e,t,n,i,r,o,a)},msync:function(e,t,n,i,r){return e&&e.stream_ops.msync?e.stream_ops.msync(e,t,n,i,r):0},munmap:function(e){return 0},ioctl:function(e,t,n){if(!e.stream_ops.ioctl)throw new Xe.ErrnoError(ze.ENOTTY);return e.stream_ops.ioctl(e,t,n)},readFile:function(e,t){if((t=t||{}).flags=t.flags||"r",t.encoding=t.encoding||"binary","utf8"!==t.encoding&&"binary"!==t.encoding)throw new Error('Invalid encoding type "'+t.encoding+'"');var n,i=Xe.open(e,t.flags),r=Xe.stat(e).size,o=new Uint8Array(r);return Xe.read(i,o,0,r,0),"utf8"===t.encoding?n=I(o,0):"binary"===t.encoding&&(n=o),Xe.close(i),n},writeFile:function(e,t,n){(n=n||{}).flags=n.flags||"w";var i=Xe.open(e,n.flags,n.mode);if("string"==typeof t){var r=new Uint8Array(N(t)+1),o=M(t,r,0,r.length);Xe.write(i,r,0,o,void 0,n.canOwn)}else{if(!ArrayBuffer.isView(t))throw new Error("Unsupported data type");Xe.write(i,t,0,t.byteLength,void 0,n.canOwn)}Xe.close(i)},cwd:function(){return Xe.currentPath},chdir:function(e){var t=Xe.lookupPath(e,{follow:!0});if(null===t.node)throw new Xe.ErrnoError(ze.ENOENT);if(!Xe.isDir(t.node.mode))throw new Xe.ErrnoError(ze.ENOTDIR);var n=Xe.nodePermissions(t.node,"x");if(n)throw new Xe.ErrnoError(n);Xe.currentPath=t.path},createDefaultDirectories:function(){Xe.mkdir("/tmp"),Xe.mkdir("/home"),Xe.mkdir("/home/web_user")},createDefaultDevices:function(){var e;if(Xe.mkdir("/dev"),Xe.registerDevice(Xe.makedev(1,3),{read:function(){return 0},write:function(e,t,n,i,r){return i}}),Xe.mkdev("/dev/null",Xe.makedev(1,3)),We.register(Xe.makedev(5,0),We.default_tty_ops),We.register(Xe.makedev(6,0),We.default_tty1_ops),Xe.mkdev("/dev/tty",Xe.makedev(5,0)),Xe.mkdev("/dev/tty1",Xe.makedev(6,0)),"undefined"!=typeof crypto){var t=new Uint8Array(1);e=function(){return crypto.getRandomValues(t),t[0]}}else e=d?function(){return Pe.randomBytes(1)[0]}:function(){return 256*Math.random()|0};Xe.createDevice("/dev","random",e),Xe.createDevice("/dev","urandom",e),Xe.mkdir("/dev/shm"),Xe.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){Xe.mkdir("/proc"),Xe.mkdir("/proc/self"),Xe.mkdir("/proc/self/fd"),Xe.mount({mount:function(){var e=Xe.createNode("/proc/self","fd",16895,73);return e.node_ops={lookup:function(e,t){var n=+t,i=Xe.getStream(n);if(!i)throw new Xe.ErrnoError(ze.EBADF);var r={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return i.path}}};return r.parent=r,r}},e}},{},"/proc/self/fd")},createStandardStreams:function(){t.stdin?Xe.createDevice("/dev","stdin",t.stdin):Xe.symlink("/dev/tty","/dev/stdin"),t.stdout?Xe.createDevice("/dev","stdout",null,t.stdout):Xe.symlink("/dev/tty","/dev/stdout"),t.stderr?Xe.createDevice("/dev","stderr",null,t.stderr):Xe.symlink("/dev/tty1","/dev/stderr");var e=Xe.open("/dev/stdin","r");k(0===e.fd,"invalid handle for stdin ("+e.fd+")");var n=Xe.open("/dev/stdout","w");k(1===n.fd,"invalid handle for stdout ("+n.fd+")");var i=Xe.open("/dev/stderr","w");k(2===i.fd,"invalid handle for stderr ("+i.fd+")")},ensureErrnoError:function(){Xe.ErrnoError||(Xe.ErrnoError=function(e,t){this.node=t,this.setErrno=function(e){for(var t in this.errno=e,ze)if(ze[t]===e){this.code=t;break}},this.setErrno(e),this.message=Be[e],this.stack&&Object.defineProperty(this,"stack",{value:(new Error).stack,writable:!0})},Xe.ErrnoError.prototype=new Error,Xe.ErrnoError.prototype.constructor=Xe.ErrnoError,[ze.ENOENT].forEach(function(e){Xe.genericErrors[e]=new Xe.ErrnoError(e),Xe.genericErrors[e].stack="<generic error, no stack>"}))},staticInit:function(){Xe.ensureErrnoError(),Xe.nameTable=new Array(4096),Xe.mount(Ye,{},"/"),Xe.createDefaultDirectories(),Xe.createDefaultDevices(),Xe.createSpecialDirectories(),Xe.filesystems={MEMFS:Ye,IDBFS:He,NODEFS:Je,WORKERFS:Ge}},init:function(e,n,i){k(!Xe.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),Xe.init.initialized=!0,Xe.ensureErrnoError(),t.stdin=e||t.stdin,t.stdout=n||t.stdout,t.stderr=i||t.stderr,Xe.createStandardStreams()},quit:function(){Xe.init.initialized=!1;var e=t._fflush;e&&e(0);for(var n=0;n<Xe.streams.length;n++){var i=Xe.streams[n];i&&Xe.close(i)}},getMode:function(e,t){var n=0;return e&&(n|=365),t&&(n|=146),n},joinPath:function(e,t){var n=Ve.join.apply(null,e);return t&&"/"==n[0]&&(n=n.substr(1)),n},absolutePath:function(e,t){return Ve.resolve(t,e)},standardizePath:function(e){return Ve.normalize(e)},findObject:function(e,t){var n=Xe.analyzePath(e,t);return n.exists?n.object:(Ne(n.error),null)},analyzePath:function(e,t){try{e=(i=Xe.lookupPath(e,{follow:!t})).path}catch(e){}var n={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var i=Xe.lookupPath(e,{parent:!0});n.parentExists=!0,n.parentPath=i.path,n.parentObject=i.node,n.name=Ve.basename(e),i=Xe.lookupPath(e,{follow:!t}),n.exists=!0,n.path=i.path,n.object=i.node,n.name=i.node.name,n.isRoot="/"===i.path}catch(e){n.error=e.errno}return n},createFolder:function(e,t,n,i){var r=Ve.join2("string"==typeof e?e:Xe.getPath(e),t),o=Xe.getMode(n,i);return Xe.mkdir(r,o)},createPath:function(e,t,n,i){e="string"==typeof e?e:Xe.getPath(e);for(var r=t.split("/").reverse();r.length;){var o=r.pop();if(o){var a=Ve.join2(e,o);try{Xe.mkdir(a)}catch(e){}e=a}}return a},createFile:function(e,t,n,i,r){var o=Ve.join2("string"==typeof e?e:Xe.getPath(e),t),a=Xe.getMode(i,r);return Xe.create(o,a)},createDataFile:function(e,t,n,i,r,o){var a=t?Ve.join2("string"==typeof e?e:Xe.getPath(e),t):e,s=Xe.getMode(i,r),l=Xe.create(a,s);if(n){if("string"==typeof n){for(var c=new Array(n.length),d=0,u=n.length;d<u;++d)c[d]=n.charCodeAt(d);n=c}Xe.chmod(l,146|s);var f=Xe.open(l,"w");Xe.write(f,n,0,n.length,0,o),Xe.close(f),Xe.chmod(l,s)}return l},createDevice:function(e,t,n,i){var r=Ve.join2("string"==typeof e?e:Xe.getPath(e),t),o=Xe.getMode(!!n,!!i);Xe.createDevice.major||(Xe.createDevice.major=64);var a=Xe.makedev(Xe.createDevice.major++,0);return Xe.registerDevice(a,{open:function(e){e.seekable=!1},close:function(e){i&&i.buffer&&i.buffer.length&&i(10)},read:function(e,t,i,r,o){for(var a=0,s=0;s<r;s++){var l;try{l=n()}catch(e){throw new Xe.ErrnoError(ze.EIO)}if(void 0===l&&0===a)throw new Xe.ErrnoError(ze.EAGAIN);if(null===l||void 0===l)break;a++,t[i+s]=l}return a&&(e.node.timestamp=Date.now()),a},write:function(e,t,n,r,o){for(var a=0;a<r;a++)try{i(t[n+a])}catch(e){throw new Xe.ErrnoError(ze.EIO)}return r&&(e.node.timestamp=Date.now()),a}}),Xe.mkdev(r,o,a)},createLink:function(e,t,n,i,r){var o=Ve.join2("string"==typeof e?e:Xe.getPath(e),t);return Xe.symlink(n,o)},forceLoadFile:function(e){if(e.isDevice||e.isFolder||e.link||e.contents)return!0;var n=!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!t.read)throw new Error("Cannot load without read() or XMLHttpRequest.");try{e.contents=wt(t.read(e.url),!0),e.usedBytes=e.contents.length}catch(e){n=!1}return n||Ne(ze.EIO),n},createLazyFile:function(e,t,n,i,r){function o(){this.lengthKnown=!1,this.chunks=[]}if(o.prototype.get=function(e){if(!(e>this.length-1||e<0)){var t=e%this.chunkSize,n=e/this.chunkSize|0;return this.getter(n)[t]}},o.prototype.setDataGetter=function(e){this.getter=e},o.prototype.cacheLength=function(){var e=new XMLHttpRequest;if(e.open("HEAD",n,!1),e.send(null),!(e.status>=200&&e.status<300||304===e.status))throw new Error("Couldn't load "+n+". Status: "+e.status);var t,i=Number(e.getResponseHeader("Content-length")),r=(t=e.getResponseHeader("Accept-Ranges"))&&"bytes"===t,o=(t=e.getResponseHeader("Content-Encoding"))&&"gzip"===t,a=1048576;r||(a=i);var s=this;s.setDataGetter(function(e){var t=e*a,r=(e+1)*a-1;if(r=Math.min(r,i-1),void 0===s.chunks[e]&&(s.chunks[e]=function(e,t){if(e>t)throw new Error("invalid range ("+e+", "+t+") or no bytes requested!");if(t>i-1)throw new Error("only "+i+" bytes available! programmer error!");var r=new XMLHttpRequest;if(r.open("GET",n,!1),i!==a&&r.setRequestHeader("Range","bytes="+e+"-"+t),"undefined"!=typeof Uint8Array&&(r.responseType="arraybuffer"),r.overrideMimeType&&r.overrideMimeType("text/plain; charset=x-user-defined"),r.send(null),!(r.status>=200&&r.status<300||304===r.status))throw new Error("Couldn't load "+n+". Status: "+r.status);return void 0!==r.response?new Uint8Array(r.response||[]):wt(r.responseText||"",!0)}(t,r)),void 0===s.chunks[e])throw new Error("doXHR failed!");return s.chunks[e]}),!o&&i||(a=i=1,i=this.getter(0).length,a=i,console.log("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=i,this._chunkSize=a,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!c)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var a=new o;Object.defineProperties(a,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var s={isDevice:!1,contents:a}}else s={isDevice:!1,url:n};var l=Xe.createFile(e,t,s,i,r);s.contents?l.contents=s.contents:s.url&&(l.contents=null,l.url=s.url),Object.defineProperties(l,{usedBytes:{get:function(){return this.contents.length}}});var d={};return Object.keys(l.stream_ops).forEach(function(e){var t=l.stream_ops[e];d[e]=function(){if(!Xe.forceLoadFile(l))throw new Xe.ErrnoError(ze.EIO);return t.apply(null,arguments)}}),d.read=function(e,t,n,i,r){if(!Xe.forceLoadFile(l))throw new Xe.ErrnoError(ze.EIO);var o=e.node.contents;if(r>=o.length)return 0;var a=Math.min(o.length-r,i);if(k(a>=0),o.slice)for(var s=0;s<a;s++)t[n+s]=o[r+s];else for(s=0;s<a;s++)t[n+s]=o.get(r+s);return a},l.stream_ops=d,l},createPreloadedFile:function(e,n,i,r,o,a,s,l,c,d){Browser.init();var u=n?Ve.resolve(Ve.join2(e,n)):e;function f(i){function f(t){d&&d(),l||Xe.createDataFile(e,n,t,r,o,c),a&&a(),De()}var h=!1;t.preloadPlugins.forEach(function(e){h||e.canHandle(u)&&(e.handle(i,u,f,function(){s&&s(),De()}),h=!0)}),h||f(i)}Te(),"string"==typeof i?Browser.asyncLoad(i,function(e){f(e)},s):f(i)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(e,t,n){t=t||function(){},n=n||function(){};var i=Xe.indexedDB();try{var r=i.open(Xe.DB_NAME(),Xe.DB_VERSION)}catch(e){return n(e)}r.onupgradeneeded=function(){console.log("creating db"),r.result.createObjectStore(Xe.DB_STORE_NAME)},r.onsuccess=function(){var i=r.result.transaction([Xe.DB_STORE_NAME],"readwrite"),o=i.objectStore(Xe.DB_STORE_NAME),a=0,s=0,l=e.length;function c(){0==s?t():n()}e.forEach(function(e){var t=o.put(Xe.analyzePath(e).object.contents,e);t.onsuccess=function(){++a+s==l&&c()},t.onerror=function(){a+ ++s==l&&c()}}),i.onerror=n},r.onerror=n},loadFilesFromDB:function(e,t,n){t=t||function(){},n=n||function(){};var i=Xe.indexedDB();try{var r=i.open(Xe.DB_NAME(),Xe.DB_VERSION)}catch(e){return n(e)}r.onupgradeneeded=n,r.onsuccess=function(){var i=r.result;try{var o=i.transaction([Xe.DB_STORE_NAME],"readonly")}catch(e){return void n(e)}var a=o.objectStore(Xe.DB_STORE_NAME),s=0,l=0,c=e.length;function d(){0==l?t():n()}e.forEach(function(e){var t=a.get(e);t.onsuccess=function(){Xe.analyzePath(e).exists&&Xe.unlink(e),Xe.createDataFile(Ve.dirname(e),Ve.basename(e),t.result,!0,!0,!0),++s+l==c&&d()},t.onerror=function(){s+ ++l==c&&d()}}),o.onerror=n},r.onerror=n}},Qe={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(e,t){if("/"!==t[0]){var n;if(-100===e)n=Xe.cwd();else{var i=Xe.getStream(e);if(!i)throw new Xe.ErrnoError(ze.EBADF);n=i.path}t=Ve.join2(n,t)}return t},doStat:function(e,t,n){try{var i=e(t)}catch(e){if(e&&e.node&&Ve.normalize(t)!==Ve.normalize(Xe.getPath(e.node)))return-ze.ENOTDIR;throw e}return V[n>>2]=i.dev,V[n+4>>2]=0,V[n+8>>2]=i.ino,V[n+12>>2]=i.mode,V[n+16>>2]=i.nlink,V[n+20>>2]=i.uid,V[n+24>>2]=i.gid,V[n+28>>2]=i.rdev,V[n+32>>2]=0,V[n+36>>2]=i.size,V[n+40>>2]=4096,V[n+44>>2]=i.blocks,V[n+48>>2]=i.atime.getTime()/1e3|0,V[n+52>>2]=0,V[n+56>>2]=i.mtime.getTime()/1e3|0,V[n+60>>2]=0,V[n+64>>2]=i.ctime.getTime()/1e3|0,V[n+68>>2]=0,V[n+72>>2]=i.ino,0},doMsync:function(e,t,n,i){var r=new Uint8Array(q.subarray(e,e+n));Xe.msync(t,r,0,n,i)},doMkdir:function(e,t){return"/"===(e=Ve.normalize(e))[e.length-1]&&(e=e.substr(0,e.length-1)),Xe.mkdir(e,t,0),0},doMknod:function(e,t,n){switch(61440&t){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ze.EINVAL}return Xe.mknod(e,t,n),0},doReadlink:function(e,t,n){if(n<=0)return-ze.EINVAL;var i=Xe.readlink(e),r=Math.min(n,N(i)),o=L[t+r];return z(i,t,n+1),L[t+r]=o,r},doAccess:function(e,t){if(-8&t)return-ze.EINVAL;var n;n=Xe.lookupPath(e,{follow:!0}).node;var i="";return 4&t&&(i+="r"),2&t&&(i+="w"),1&t&&(i+="x"),i&&Xe.nodePermissions(n,i)?-ze.EACCES:0},doDup:function(e,t,n){var i=Xe.getStream(n);return i&&Xe.close(i),Xe.open(e,t,0,n,n).fd},doReadv:function(e,t,n,i){for(var r=0,o=0;o<n;o++){var a=V[t+8*o>>2],s=V[t+(8*o+4)>>2],l=Xe.read(e,L,a,s,i);if(l<0)return-1;if(r+=l,l<s)break}return r},doWritev:function(e,t,n,i){for(var r=0,o=0;o<n;o++){var a=V[t+8*o>>2],s=V[t+(8*o+4)>>2],l=Xe.write(e,L,a,s,i);if(l<0)return-1;r+=l}return r},varargs:0,get:function(e){return Qe.varargs+=4,V[Qe.varargs-4>>2]},getStr:function(){return F(Qe.get())},getStreamFromFD:function(){var e=Xe.getStream(Qe.get());if(!e)throw new Xe.ErrnoError(ze.EBADF);return e},getSocketFromFD:function(){var e=SOCKFS.getSocket(Qe.get());if(!e)throw new Xe.ErrnoError(ze.EBADF);return e},getSocketAddress:function(e){var t=Qe.get(),n=Qe.get();if(e&&0===t)return null;var i=__read_sockaddr(t,n);if(i.errno)throw new Xe.ErrnoError(i.errno);return i.addr=DNS.lookup_addr(i.addr)||i.addr,i},get64:function(){var e=Qe.get(),t=Qe.get();return k(e>=0?0===t:-1===t),e},getZero:function(){k(0===Qe.get())}};var Ke=0;var Ze=H+=16;H+=48;var et=$(wt("GMT"),"i8",P);function tt(e,t){var n=new Date(1e3*V[e>>2]);V[t>>2]=n.getUTCSeconds(),V[t+4>>2]=n.getUTCMinutes(),V[t+8>>2]=n.getUTCHours(),V[t+12>>2]=n.getUTCDate(),V[t+16>>2]=n.getUTCMonth(),V[t+20>>2]=n.getUTCFullYear()-1900,V[t+24>>2]=n.getUTCDay(),V[t+36>>2]=0,V[t+32>>2]=0;var i=Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0),r=(n.getTime()-i)/864e5|0;return V[t+28>>2]=r,V[t+40>>2]=et,t}var nt=be,it=be;function rt(e){return Math.pow(2,e)}var ot=ve,at=we;function st(e){return Math.log(e)/Math.LN10}function lt(){var e=lt;return e.LLVM_SAVEDSTACKS||(e.LLVM_SAVEDSTACKS=[]),e.LLVM_SAVEDSTACKS.push(on()),e.LLVM_SAVEDSTACKS.length-1}function ct(){if(!ct.called){ct.called=!0,V[Gt()>>2]=60*(new Date).getTimezoneOffset();var e=new Date(2e3,0,1),t=new Date(2e3,6,1);V[Jt()>>2]=Number(e.getTimezoneOffset()!=t.getTimezoneOffset());var n=a(e),i=a(t),r=$(wt(n),"i8",A),o=$(wt(i),"i8",A);t.getTimezoneOffset()<e.getTimezoneOffset()?(V[Xt()>>2]=r,V[Xt()+4>>2]=o):(V[Xt()>>2]=o,V[Xt()+4>>2]=r)}function a(e){var t=e.toTimeString().match(/\(([A-Za-z ]+)\)$/);return t?t[1]:"GMT"}}function dt(e,t){ct();var n=new Date(1e3*V[e>>2]);V[t>>2]=n.getSeconds(),V[t+4>>2]=n.getMinutes(),V[t+8>>2]=n.getHours(),V[t+12>>2]=n.getDate(),V[t+16>>2]=n.getMonth(),V[t+20>>2]=n.getFullYear()-1900,V[t+24>>2]=n.getDay();var i=new Date(n.getFullYear(),0,1),r=(n.getTime()-i.getTime())/864e5|0;V[t+28>>2]=r,V[t+36>>2]=-60*n.getTimezoneOffset();var o=new Date(2e3,6,1).getTimezoneOffset(),a=i.getTimezoneOffset(),s=0|(o!=a&&n.getTimezoneOffset()==Math.min(a,o));V[t+32>>2]=s;var l=V[Xt()+(s?4:0)>>2];return V[t+40>>2]=l,t}var ut={};var ft=1;function ht(e){return e%4==0&&(e%100!=0||e%400==0)}function pt(e,t){for(var n=0,i=0;i<=t;n+=e[i++]);return n}var mt=[31,29,31,30,31,30,31,31,30,31,30,31],gt=[31,28,31,30,31,30,31,31,30,31,30,31];function yt(e,t){for(var n=new Date(e.getTime());t>0;){var i=ht(n.getFullYear()),r=n.getMonth(),o=(i?mt:gt)[r];if(!(t>o-n.getDate()))return n.setDate(n.getDate()+t),n;t-=o-n.getDate()+1,n.setDate(1),r<11?n.setMonth(r+1):(n.setMonth(0),n.setFullYear(n.getFullYear()+1))}return n}function _t(e,t,n,i){var r=V[i+40>>2],o={tm_sec:V[i>>2],tm_min:V[i+4>>2],tm_hour:V[i+8>>2],tm_mday:V[i+12>>2],tm_mon:V[i+16>>2],tm_year:V[i+20>>2],tm_wday:V[i+24>>2],tm_yday:V[i+28>>2],tm_isdst:V[i+32>>2],tm_gmtoff:V[i+36>>2],tm_zone:r?F(r):""},a=F(n),s={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var l in s)a=a.replace(new RegExp(l,"g"),s[l]);var c=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],d=["January","February","March","April","May","June","July","August","September","October","November","December"];function u(e,t,n){for(var i="number"==typeof e?e.toString():e||"";i.length<t;)i=n[0]+i;return i}function f(e,t){return u(e,t,"0")}function h(e,t){function n(e){return e<0?-1:e>0?1:0}var i;return 0===(i=n(e.getFullYear()-t.getFullYear()))&&0===(i=n(e.getMonth()-t.getMonth()))&&(i=n(e.getDate()-t.getDate())),i}function p(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function m(e){var t=yt(new Date(e.tm_year+1900,0,1),e.tm_yday),n=new Date(t.getFullYear(),0,4),i=new Date(t.getFullYear()+1,0,4),r=p(n),o=p(i);return h(r,t)<=0?h(o,t)<=0?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var g={"%a":function(e){return c[e.tm_wday].substring(0,3)},"%A":function(e){return c[e.tm_wday]},"%b":function(e){return d[e.tm_mon].substring(0,3)},"%B":function(e){return d[e.tm_mon]},"%C":function(e){return f((e.tm_year+1900)/100|0,2)},"%d":function(e){return f(e.tm_mday,2)},"%e":function(e){return u(e.tm_mday,2," ")},"%g":function(e){return m(e).toString().substring(2)},"%G":function(e){return m(e)},"%H":function(e){return f(e.tm_hour,2)},"%I":function(e){var t=e.tm_hour;return 0==t?t=12:t>12&&(t-=12),f(t,2)},"%j":function(e){return f(e.tm_mday+pt(ht(e.tm_year+1900)?mt:gt,e.tm_mon-1),3)},"%m":function(e){return f(e.tm_mon+1,2)},"%M":function(e){return f(e.tm_min,2)},"%n":function(){return"\n"},"%p":function(e){return e.tm_hour>=0&&e.tm_hour<12?"AM":"PM"},"%S":function(e){return f(e.tm_sec,2)},"%t":function(){return"\t"},"%u":function(e){return new Date(e.tm_year+1900,e.tm_mon+1,e.tm_mday,0,0,0,0).getDay()||7},"%U":function(e){var t=new Date(e.tm_year+1900,0,1),n=0===t.getDay()?t:yt(t,7-t.getDay()),i=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(h(n,i)<0){var r=pt(ht(i.getFullYear())?mt:gt,i.getMonth()-1)-31,o=31-n.getDate()+r+i.getDate();return f(Math.ceil(o/7),2)}return 0===h(n,t)?"01":"00"},"%V":function(e){var t,n=new Date(e.tm_year+1900,0,4),i=new Date(e.tm_year+1901,0,4),r=p(n),o=p(i),a=yt(new Date(e.tm_year+1900,0,1),e.tm_yday);return h(a,r)<0?"53":h(o,a)<=0?"01":(t=r.getFullYear()<e.tm_year+1900?e.tm_yday+32-r.getDate():e.tm_yday+1-r.getDate(),f(Math.ceil(t/7),2))},"%w":function(e){return new Date(e.tm_year+1900,e.tm_mon+1,e.tm_mday,0,0,0,0).getDay()},"%W":function(e){var t=new Date(e.tm_year,0,1),n=1===t.getDay()?t:yt(t,0===t.getDay()?1:7-t.getDay()+1),i=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(h(n,i)<0){var r=pt(ht(i.getFullYear())?mt:gt,i.getMonth()-1)-31,o=31-n.getDate()+r+i.getDate();return f(Math.ceil(o/7),2)}return 0===h(n,t)?"01":"00"},"%y":function(e){return(e.tm_year+1900).toString().substring(2)},"%Y":function(e){return e.tm_year+1900},"%z":function(e){var t=e.tm_gmtoff,n=t>=0;return t=(t=Math.abs(t)/60)/60*100+t%60,(n?"+":"-")+String("0000"+t).slice(-4)},"%Z":function(e){return e.tm_zone},"%%":function(){return"%"}};for(var l in g)a.indexOf(l)>=0&&(a=a.replace(new RegExp(l,"g"),g[l](o)));var y=wt(a,!1);return y.length>t?0:(ye(y,e),y.length-1)}if(Ie=d?function(){var e=i.hrtime();return 1e3*e[0]+e[1]/1e6}:"undefined"!=typeof dateNow?dateNow:"object"==typeof self&&self.performance&&"function"==typeof self.performance.now?function(){return self.performance.now()}:"object"==typeof performance&&"function"==typeof performance.now?function(){return performance.now()}:Date.now,Xe.staticInit(),de.unshift(function(){t.noFSInit||Xe.init.initialized||Xe.init()}),ue.push(function(){Xe.ignorePermissions=!1}),fe.push(function(){Xe.quit()}),de.unshift(function(){}),fe.push(function(){}),d){var vt=Pe,bt=Oe;Je.staticInit()}function wt(e,t,n){var i=n>0?n:N(e)+1,r=new Array(i),o=M(e,r,0,r.length);return t&&(r.length=o),r}K=_(4),Q=b(X=(G=b(H))+ae),V[K>>2]=Q,J=!0,t.wasmTableSize=7612,t.wasmMaxTableSize=7612,t.asmGlobalArg={},t.asmLibraryArg={abort:ln,assert:k,enlargeMemory:oe,getTotalMemory:function(){return se},abortOnCannotGrowMemory:function(){ln("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+se+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")},invoke_di:function(e,n){var i=on();try{return t.dynCall_di(e,n)}catch(e){if(rn(i),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_didi:function(e,n,i,r){var o=on();try{return t.dynCall_didi(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_diii:function(e,n,i,r){var o=on();try{return t.dynCall_diii(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_dij:function(e,n,i,r){var o=on();try{return t.dynCall_dij(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_ii:function(e,n){var i=on();try{return t.dynCall_ii(e,n)}catch(e){if(rn(i),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iid:function(e,n,i){var r=on();try{return t.dynCall_iid(e,n,i)}catch(e){if(rn(r),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iii:function(e,n,i){var r=on();try{return t.dynCall_iii(e,n,i)}catch(e){if(rn(r),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiii:function(e,n,i,r){var o=on();try{return t.dynCall_iiii(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiid:function(e,n,i,r,o){var a=on();try{return t.dynCall_iiiid(e,n,i,r,o)}catch(e){if(rn(a),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiii:function(e,n,i,r,o){var a=on();try{return t.dynCall_iiiii(e,n,i,r,o)}catch(e){if(rn(a),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiiid:function(e,n,i,r,o,a){var s=on();try{return t.dynCall_iiiiid(e,n,i,r,o,a)}catch(e){if(rn(s),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiiii:function(e,n,i,r,o,a){var s=on();try{return t.dynCall_iiiiii(e,n,i,r,o,a)}catch(e){if(rn(s),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiiiid:function(e,n,i,r,o,a,s){var l=on();try{return t.dynCall_iiiiiid(e,n,i,r,o,a,s)}catch(e){if(rn(l),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiiiii:function(e,n,i,r,o,a,s){var l=on();try{return t.dynCall_iiiiiii(e,n,i,r,o,a,s)}catch(e){if(rn(l),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiiiiii:function(e,n,i,r,o,a,s,l){var c=on();try{return t.dynCall_iiiiiiii(e,n,i,r,o,a,s,l)}catch(e){if(rn(c),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiiiiiii:function(e,n,i,r,o,a,s,l,c){var d=on();try{return t.dynCall_iiiiiiiii(e,n,i,r,o,a,s,l,c)}catch(e){if(rn(d),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiiiij:function(e,n,i,r,o,a,s){var l=on();try{return t.dynCall_iiiiij(e,n,i,r,o,a,s)}catch(e){if(rn(l),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iij:function(e,n,i,r){var o=on();try{return t.dynCall_iij(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iiji:function(e,n,i,r,o){var a=on();try{return t.dynCall_iiji(e,n,i,r,o)}catch(e){if(rn(a),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iijii:function(e,n,i,r,o,a){var s=on();try{return t.dynCall_iijii(e,n,i,r,o,a)}catch(e){if(rn(s),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_iijj:function(e,n,i,r,o,a){var s=on();try{return t.dynCall_iijj(e,n,i,r,o,a)}catch(e){if(rn(s),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_ijii:function(e,n,i,r,o){var a=on();try{return t.dynCall_ijii(e,n,i,r,o)}catch(e){if(rn(a),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_ijiii:function(e,n,i,r,o,a){var s=on();try{return t.dynCall_ijiii(e,n,i,r,o,a)}catch(e){if(rn(s),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_ijiiii:function(e,n,i,r,o,a,s){var l=on();try{return t.dynCall_ijiiii(e,n,i,r,o,a,s)}catch(e){if(rn(l),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_ji:function(e,n){var i=on();try{return t.dynCall_ji(e,n)}catch(e){if(rn(i),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_jii:function(e,n,i){var r=on();try{return t.dynCall_jii(e,n,i)}catch(e){if(rn(r),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_jiii:function(e,n,i,r){var o=on();try{return t.dynCall_jiii(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_jij:function(e,n,i,r){var o=on();try{return t.dynCall_jij(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_jiji:function(e,n,i,r,o){var a=on();try{return t.dynCall_jiji(e,n,i,r,o)}catch(e){if(rn(a),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_jijii:function(e,n,i,r,o,a){var s=on();try{return t.dynCall_jijii(e,n,i,r,o,a)}catch(e){if(rn(s),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_v:function(e){var n=on();try{t.dynCall_v(e)}catch(e){if(rn(n),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_vi:function(e,n){var i=on();try{t.dynCall_vi(e,n)}catch(e){if(rn(i),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_vii:function(e,n,i){var r=on();try{t.dynCall_vii(e,n,i)}catch(e){if(rn(r),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_viii:function(e,n,i,r){var o=on();try{t.dynCall_viii(e,n,i,r)}catch(e){if(rn(o),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_viiii:function(e,n,i,r,o){var a=on();try{t.dynCall_viiii(e,n,i,r,o)}catch(e){if(rn(a),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_viiiii:function(e,n,i,r,o,a){var s=on();try{t.dynCall_viiiii(e,n,i,r,o,a)}catch(e){if(rn(s),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_viiiiii:function(e,n,i,r,o,a,s){var l=on();try{t.dynCall_viiiiii(e,n,i,r,o,a,s)}catch(e){if(rn(l),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_viiiiiii:function(e,n,i,r,o,a,s,l){var c=on();try{t.dynCall_viiiiiii(e,n,i,r,o,a,s,l)}catch(e){if(rn(c),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_viijii:function(e,n,i,r,o,a,s){var l=on();try{t.dynCall_viijii(e,n,i,r,o,a,s)}catch(e){if(rn(l),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},invoke_vijd:function(e,n,i,r,o){var a=on();try{t.dynCall_vijd(e,n,i,r,o)}catch(e){if(rn(a),"number"!=typeof e&&"longjmp"!==e)throw e;t.setThrew(1,0)}},__Exit:function(e){Fe(e)},___buildEnvironment:function e(n){var i,r;e.called?(r=V[n>>2],i=V[r>>2]):(e.called=!0,je.USER=je.LOGNAME="web_user",je.PATH="/",je.PWD="/",je.HOME="/home/web_user",je.LANG="C.UTF-8",je._=t.thisProgram,i=C(1024),r=C(256),V[r>>2]=i,V[n>>2]=r);var o=[],a=0;for(var s in je)if("string"==typeof je[s]){var l=s+"="+je[s];o.push(l),a+=l.length}if(a>1024)throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");for(var c=0;c<o.length;c++)_e(l=o[c],i),V[r+4*c>>2]=i,i+=l.length+1;V[r+4*o.length>>2]=0},___clock_gettime:function(){return Ue.apply(null,arguments)},___cxa_allocate_exception:function(e){return Zt(e)},___cxa_begin_catch:function(e){var t=Re.infos[e];return t&&!t.caught&&(t.caught=!0,Ft.uncaught_exception--),t&&(t.rethrown=!1),Re.caught.push(e),Re.addRef(Re.deAdjust(e)),e},___cxa_current_primary_exception:function(){var e=Re.caught[Re.caught.length-1]||0;return e&&Re.addRef(Re.deAdjust(e)),e},___cxa_decrement_exception_refcount:function(e){Re.decRef(Re.deAdjust(e))},___cxa_end_catch:function(){t.setThrew(0);var e=Re.caught.pop();e&&(Re.decRef(Re.deAdjust(e)),Re.last=0)},___cxa_find_matching_catch:function e(){var n=Re.last;if(!n)return 0|(tn(0),0);var i=Re.infos[n],r=i.type;if(!r)return 0|(tn(0),n);var o=Array.prototype.slice.call(arguments);t.___cxa_is_pointer_type(r);e.buffer||(e.buffer=Zt(4)),V[e.buffer>>2]=n,n=e.buffer;for(var a=0;a<o.length;a++)if(o[a]&&t.___cxa_can_catch(o[a],r,n))return n=V[n>>2],i.adjusted=n,0|(tn(o[a]),n);return n=V[n>>2],0|(tn(r),n)},___cxa_free_exception:Le,___cxa_increment_exception_refcount:function(e){Re.addRef(Re.deAdjust(e))},___cxa_pure_virtual:function(){throw E=!0,"Pure virtual function called!"},___cxa_rethrow:qe,___cxa_rethrow_primary_exception:function(e){e&&(Re.caught.push(e),Re.infos[e].rethrown=!0,qe())},___cxa_throw:function(e,t,n){throw Re.infos[e]={ptr:e,adjusted:e,type:t,destructor:n,refcount:0,caught:!1,rethrown:!1},Re.last=e,"uncaught_exception"in Ft?Ft.uncaught_exception++:Ft.uncaught_exception=1,e+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."},___cxa_uncaught_exception:function(){return!!Ft.uncaught_exception},___gxx_personality_v0:function(){},___lock:function(){},___map_file:function(e,t){return Ne(ze.EPERM),-1},___resumeException:function(e){throw Re.last||(Re.last=e),e+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."},___setErrNo:Ne,___syscall10:function(e,t){Qe.varargs=t;try{var n=Qe.getStr();return Xe.unlink(n),0}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall140:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD(),i=(Qe.get(),Qe.get()),r=Qe.get(),o=Qe.get(),a=i;return Xe.llseek(n,a,o),V[r>>2]=n.position,n.getdents&&0===a&&0===o&&(n.getdents=null),0}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall145:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD(),i=Qe.get(),r=Qe.get();return Qe.doReadv(n,i,r)}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall146:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD(),i=Qe.get(),r=Qe.get();return Qe.doWritev(n,i,r)}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall196:function(e,t){Qe.varargs=t;try{var n=Qe.getStr(),i=Qe.get();return Qe.doStat(Xe.lstat,n,i)}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall221:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD();switch(Qe.get()){case 0:return(i=Qe.get())<0?-ze.EINVAL:Xe.open(n.path,n.flags,0,i).fd;case 1:case 2:return 0;case 3:return n.flags;case 4:var i=Qe.get();return n.flags|=i,0;case 12:case 12:return i=Qe.get(),B[i+0>>1]=2,0;case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ze.EINVAL;case 9:return Ne(ze.EINVAL),-1;default:return-ze.EINVAL}}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall330:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD(),i=Qe.get();return k(!Qe.get()),n.fd===i?-ze.EINVAL:Qe.doDup(n.path,n.flags,i)}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall38:function(e,t){Qe.varargs=t;try{var n=Qe.getStr(),i=Qe.getStr();return Xe.rename(n,i),0}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall40:function(e,t){Qe.varargs=t;try{var n=Qe.getStr();return Xe.rmdir(n),0}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall5:function(e,t){Qe.varargs=t;try{var n=Qe.getStr(),i=Qe.get(),r=Qe.get();return Xe.open(n,i,r).fd}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall54:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD(),i=Qe.get();switch(i){case 21509:case 21505:return n.tty?0:-ze.ENOTTY;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return n.tty?0:-ze.ENOTTY;case 21519:if(!n.tty)return-ze.ENOTTY;var r=Qe.get();return V[r>>2]=0,0;case 21520:return n.tty?-ze.EINVAL:-ze.ENOTTY;case 21531:return r=Qe.get(),Xe.ioctl(n,i,r);case 21523:case 21524:return n.tty?0:-ze.ENOTTY;default:ln("bad ioctl syscall "+i)}}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall6:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD();return Xe.close(n),0}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall63:function(e,t){Qe.varargs=t;try{var n=Qe.getStreamFromFD(),i=Qe.get();return n.fd===i?i:Qe.doDup(n.path,n.flags,i)}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall77:function(e,t){Qe.varargs=t;try{Qe.get();var n=Qe.get();return en(n,0,136),V[n>>2]=1,V[n+4>>2]=2,V[n+8>>2]=3,V[n+12>>2]=4,0}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___syscall91:function(e,t){Qe.varargs=t;try{var n=Qe.get(),i=Qe.get(),r=Qe.mappings[n];if(!r)return 0;if(i===r.len){var o=Xe.getStream(r.fd);Qe.doMsync(n,o,i,r.flags),Qe.mappings[n]=null,r.allocated&&Kt(r.malloc)}return 0}catch(e){return void 0!==Xe&&e instanceof Xe.ErrnoError||ln(e),-e.errno}},___unlock:function(){},___wait:function(){},__addDays:yt,__arraySum:pt,__exit:Fe,__isLeapYear:ht,_abort:function(){t.abort()},_alarm:function(e){setTimeout(function(){Ke&&t.dynCall_vi(Ke,0)},1e3*e)},_clock:function e(){return void 0===e.start&&(e.start=Date.now()),1e3*(Date.now()-e.start)|0},_clock_gettime:Ue,_difftime:function(e,t){return e-t},_emscripten_get_now:Ie,_emscripten_get_now_is_monotonic:Me,_emscripten_memcpy_big:function(e,t,n){return q.set(q.subarray(t,t+n),e),e},_exit:function(e){Fe(e)},_getenv:function e(t){return 0===t?0:(t=F(t),je.hasOwnProperty(t)?(e.ret&&Kt(e.ret),e.ret=function(e){var t=N(e)+1,n=Zt(t);return n&&M(e,L,n,t),n}(je[t]),e.ret):0)},_gettimeofday:function(e){var t=Date.now();return V[e>>2]=t/1e3|0,V[e+4>>2]=t%1e3*1e3|0,0},_gmtime:function(e){return tt(e,Ze)},_gmtime_r:tt,_llvm_ceil_f32:nt,_llvm_ceil_f64:it,_llvm_exp2_f32:rt,_llvm_exp2_f64:function(){return rt.apply(null,arguments)},_llvm_fabs_f64:ot,_llvm_floor_f64:at,_llvm_log10_f32:st,_llvm_log10_f64:function(){return st.apply(null,arguments)},_llvm_stackrestore:function(e){var t=lt,n=t.LLVM_SAVEDSTACKS[e];t.LLVM_SAVEDSTACKS.splice(e,1),rn(n)},_llvm_stacksave:lt,_llvm_trap:function(){ln("trap!")},_localtime:function(e){return dt(e,Ze)},_localtime_r:dt,_longjmp:function(e,n){throw t.setThrew(e,n||1),"longjmp"},_mktime:function(e){ct();var t=new Date(V[e+20>>2]+1900,V[e+16>>2],V[e+12>>2],V[e+8>>2],V[e+4>>2],V[e>>2],0),n=V[e+32>>2],i=t.getTimezoneOffset(),r=new Date(t.getFullYear(),0,1),o=new Date(2e3,6,1).getTimezoneOffset(),a=r.getTimezoneOffset(),s=Math.min(a,o);if(n<0)V[e+32>>2]=Number(o!=a&&s==i);else if(n>0!=(s==i)){var l=Math.max(a,o),c=n>0?s:l;t.setTime(t.getTime()+6e4*(c-i))}V[e+24>>2]=t.getDay();var d=(t.getTime()-r.getTime())/864e5|0;return V[e+28>>2]=d,t.getTime()/1e3|0},_pthread_cond_wait:function(){return 0},_pthread_getspecific:function(e){return ut[e]||0},_pthread_key_create:function(e,t){return 0==e?ze.EINVAL:(V[e>>2]=ft,ut[ft]=0,ft++,0)},_pthread_mutex_destroy:function(){},_pthread_once:function e(n,i){e.seen||(e.seen={}),n in e.seen||(t.dynCall_v(i),e.seen[n]=1)},_pthread_setspecific:function(e,t){return e in ut?(ut[e]=t,0):ze.EINVAL},_signal:function(e,t){return 14==e&&(Ke=t),0},_strftime:_t,_strftime_l:function(e,t,n,i){return _t(e,t,n,i)},_system:function(e){return Ne(ze.EAGAIN),-1},_time:function(e){var t=Date.now()/1e3|0;return e&&(V[e>>2]=t),t},_tzset:ct,DYNAMICTOP_PTR:K,tempDoublePtr:Ce,STACKTOP:G,STACK_MAX:X};var xt=t.asm(t.asmGlobalArg,t.asmLibraryArg,R);t.asm=xt;var Et,kt=t.__GLOBAL__I_000101=function(){return t.asm.__GLOBAL__I_000101.apply(null,arguments)},St=t.__GLOBAL__sub_I_clasp_app_cpp=function(){return t.asm.__GLOBAL__sub_I_clasp_app_cpp.apply(null,arguments)},Tt=t.__GLOBAL__sub_I_clasp_options_cpp=function(){return t.asm.__GLOBAL__sub_I_clasp_options_cpp.apply(null,arguments)},Dt=t.__GLOBAL__sub_I_control_cc=function(){return t.asm.__GLOBAL__sub_I_control_cc.apply(null,arguments)},At=t.__GLOBAL__sub_I_iostream_cpp=function(){return t.asm.__GLOBAL__sub_I_iostream_cpp.apply(null,arguments)},Pt=t.__GLOBAL__sub_I_logic_program_cpp=function(){return t.asm.__GLOBAL__sub_I_logic_program_cpp.apply(null,arguments)},Ot=t.__GLOBAL__sub_I_shared_context_cpp=function(){return t.asm.__GLOBAL__sub_I_shared_context_cpp.apply(null,arguments)},$t=t.__GLOBAL__sub_I_statistics_cpp=function(){return t.asm.__GLOBAL__sub_I_statistics_cpp.apply(null,arguments)},Ct=t.__GLOBAL__sub_I_string_convert_cpp=function(){return t.asm.__GLOBAL__sub_I_string_convert_cpp.apply(null,arguments)},Ft=t.__ZSt18uncaught_exceptionv=function(){return t.asm.__ZSt18uncaught_exceptionv.apply(null,arguments)},jt=(t.___cxa_can_catch=function(){return t.asm.___cxa_can_catch.apply(null,arguments)},t.___cxa_is_pointer_type=function(){return t.asm.___cxa_is_pointer_type.apply(null,arguments)},t.___cxx_global_var_init=function(){return t.asm.___cxx_global_var_init.apply(null,arguments)}),It=t.___cxx_global_var_init_10=function(){return t.asm.___cxx_global_var_init_10.apply(null,arguments)},Mt=t.___cxx_global_var_init_11=function(){return t.asm.___cxx_global_var_init_11.apply(null,arguments)},zt=t.___cxx_global_var_init_12=function(){return t.asm.___cxx_global_var_init_12.apply(null,arguments)},Nt=t.___cxx_global_var_init_13=function(){return t.asm.___cxx_global_var_init_13.apply(null,arguments)},Ut=t.___cxx_global_var_init_2=function(){return t.asm.___cxx_global_var_init_2.apply(null,arguments)},Rt=t.___cxx_global_var_init_2409=function(){return t.asm.___cxx_global_var_init_2409.apply(null,arguments)},Lt=t.___cxx_global_var_init_265=function(){return t.asm.___cxx_global_var_init_265.apply(null,arguments)},qt=t.___cxx_global_var_init_3=function(){return t.asm.___cxx_global_var_init_3.apply(null,arguments)},Bt=t.___cxx_global_var_init_4=function(){return t.asm.___cxx_global_var_init_4.apply(null,arguments)},Vt=t.___cxx_global_var_init_5=function(){return t.asm.___cxx_global_var_init_5.apply(null,arguments)},Wt=t.___cxx_global_var_init_6=function(){return t.asm.___cxx_global_var_init_6.apply(null,arguments)},Yt=t.___cxx_global_var_init_9=function(){return t.asm.___cxx_global_var_init_9.apply(null,arguments)},Ht=t.___emscripten_environ_constructor=function(){return t.asm.___emscripten_environ_constructor.apply(null,arguments)},Jt=(t.___errno_location=function(){return t.asm.___errno_location.apply(null,arguments)},t.__get_daylight=function(){return t.asm.__get_daylight.apply(null,arguments)}),Gt=(t.__get_environ=function(){return t.asm.__get_environ.apply(null,arguments)},t.__get_timezone=function(){return t.asm.__get_timezone.apply(null,arguments)}),Xt=t.__get_tzname=function(){return t.asm.__get_tzname.apply(null,arguments)},Qt=t._emscripten_replace_memory=function(){return t.asm._emscripten_replace_memory.apply(null,arguments)},Kt=t._free=function(){return t.asm._free.apply(null,arguments)},Zt=(t._llvm_bswap_i32=function(){return t.asm._llvm_bswap_i32.apply(null,arguments)},t._malloc=function(){return t.asm._malloc.apply(null,arguments)}),en=(t._memcpy=function(){return t.asm._memcpy.apply(null,arguments)},t._memmove=function(){return t.asm._memmove.apply(null,arguments)},t._memset=function(){return t.asm._memset.apply(null,arguments)}),tn=(t._pthread_cond_broadcast=function(){return t.asm._pthread_cond_broadcast.apply(null,arguments)},t._pthread_mutex_lock=function(){return t.asm._pthread_mutex_lock.apply(null,arguments)},t._pthread_mutex_unlock=function(){return t.asm._pthread_mutex_unlock.apply(null,arguments)},t._realloc=function(){return t.asm._realloc.apply(null,arguments)},t._run=function(){return t.asm._run.apply(null,arguments)},t._saveSetjmp=function(){return t.asm._saveSetjmp.apply(null,arguments)},t._sbrk=function(){return t.asm._sbrk.apply(null,arguments)},t._testSetjmp=function(){return t.asm._testSetjmp.apply(null,arguments)},t.establishStackSpace=function(){return t.asm.establishStackSpace.apply(null,arguments)},t.getTempRet0=function(){return t.asm.getTempRet0.apply(null,arguments)},t.runPostSets=function(){return t.asm.runPostSets.apply(null,arguments)},t.setTempRet0=function(){return t.asm.setTempRet0.apply(null,arguments)}),nn=(t.setThrew=function(){return t.asm.setThrew.apply(null,arguments)},t.stackAlloc=function(){return t.asm.stackAlloc.apply(null,arguments)}),rn=t.stackRestore=function(){return t.asm.stackRestore.apply(null,arguments)},on=t.stackSave=function(){return t.asm.stackSave.apply(null,arguments)};t.dynCall_di=function(){return t.asm.dynCall_di.apply(null,arguments)},t.dynCall_didi=function(){return t.asm.dynCall_didi.apply(null,arguments)},t.dynCall_diii=function(){return t.asm.dynCall_diii.apply(null,arguments)},t.dynCall_dij=function(){return t.asm.dynCall_dij.apply(null,arguments)},t.dynCall_ii=function(){return t.asm.dynCall_ii.apply(null,arguments)},t.dynCall_iid=function(){return t.asm.dynCall_iid.apply(null,arguments)},t.dynCall_iii=function(){return t.asm.dynCall_iii.apply(null,arguments)},t.dynCall_iiii=function(){return t.asm.dynCall_iiii.apply(null,arguments)},t.dynCall_iiiid=function(){return t.asm.dynCall_iiiid.apply(null,arguments)},t.dynCall_iiiii=function(){return t.asm.dynCall_iiiii.apply(null,arguments)},t.dynCall_iiiiid=function(){return t.asm.dynCall_iiiiid.apply(null,arguments)},t.dynCall_iiiiii=function(){return t.asm.dynCall_iiiiii.apply(null,arguments)},t.dynCall_iiiiiid=function(){return t.asm.dynCall_iiiiiid.apply(null,arguments)},t.dynCall_iiiiiii=function(){return t.asm.dynCall_iiiiiii.apply(null,arguments)},t.dynCall_iiiiiiii=function(){return t.asm.dynCall_iiiiiiii.apply(null,arguments)},t.dynCall_iiiiiiiii=function(){return t.asm.dynCall_iiiiiiiii.apply(null,arguments)},t.dynCall_iiiiij=function(){return t.asm.dynCall_iiiiij.apply(null,arguments)},t.dynCall_iij=function(){return t.asm.dynCall_iij.apply(null,arguments)},t.dynCall_iiji=function(){return t.asm.dynCall_iiji.apply(null,arguments)},t.dynCall_iijii=function(){return t.asm.dynCall_iijii.apply(null,arguments)},t.dynCall_iijj=function(){return t.asm.dynCall_iijj.apply(null,arguments)},t.dynCall_ijii=function(){return t.asm.dynCall_ijii.apply(null,arguments)},t.dynCall_ijiii=function(){return t.asm.dynCall_ijiii.apply(null,arguments)},t.dynCall_ijiiii=function(){return t.asm.dynCall_ijiiii.apply(null,arguments)},t.dynCall_ji=function(){return t.asm.dynCall_ji.apply(null,arguments)},t.dynCall_jii=function(){return t.asm.dynCall_jii.apply(null,arguments)},t.dynCall_jiii=function(){return t.asm.dynCall_jiii.apply(null,arguments)},t.dynCall_jij=function(){return t.asm.dynCall_jij.apply(null,arguments)},t.dynCall_jiji=function(){return t.asm.dynCall_jiji.apply(null,arguments)},t.dynCall_jijii=function(){return t.asm.dynCall_jijii.apply(null,arguments)},t.dynCall_v=function(){return t.asm.dynCall_v.apply(null,arguments)},t.dynCall_vi=function(){return t.asm.dynCall_vi.apply(null,arguments)},t.dynCall_vii=function(){return t.asm.dynCall_vii.apply(null,arguments)},t.dynCall_viii=function(){return t.asm.dynCall_viii.apply(null,arguments)},t.dynCall_viiii=function(){return t.asm.dynCall_viiii.apply(null,arguments)},t.dynCall_viiiii=function(){return t.asm.dynCall_viiiii.apply(null,arguments)},t.dynCall_viiiiii=function(){return t.asm.dynCall_viiiiii.apply(null,arguments)},t.dynCall_viiiiiii=function(){return t.asm.dynCall_viiiiiii.apply(null,arguments)},t.dynCall_viijii=function(){return t.asm.dynCall_viijii.apply(null,arguments)},t.dynCall_vijd=function(){return t.asm.dynCall_vijd.apply(null,arguments)};function an(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function sn(e){function n(){t.calledRun||(t.calledRun=!0,E||(pe||(pe=!0,le(de)),le(ue),t.onRuntimeInitialized&&t.onRuntimeInitialized(),function(){if(t.postRun)for("function"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;)ge(t.postRun.shift());le(he)}()))}e=e||t.arguments,Ee>0||(!function(){if(t.preRun)for("function"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)me(t.preRun.shift());le(ce)}(),Ee>0||t.calledRun||(t.setStatus?(t.setStatus("Running..."),setTimeout(function(){setTimeout(function(){t.setStatus("")},1),n()},1)):n()))}function ln(e){throw t.onAbort&&t.onAbort(e),void 0!==e?(m(e),g(e),e=JSON.stringify(e)):e="",E=!0,"abort("+e+"). Build with -s ASSERTIONS=1 for more info."}if(t.asm=xt,t.ccall=function(e,n,i,r,o){var a=function(e){var n=t["_"+e];return k(n,"Cannot call unknown function "+e+", make sure it is exported"),n}(e),s=[],l=0;if(r)for(var c=0;c<r.length;c++){var d=T[i[c]];d?(0===l&&(l=on()),s[c]=d(r[c])):s[c]=r[c]}var u=a.apply(null,s);return u=function(e){return"string"===n?F(e):"boolean"===n?Boolean(e):e}(u),0!==l&&rn(l),u},t.then=function(e){if(t.calledRun)e(t);else{var n=t.onRuntimeInitialized;t.onRuntimeInitialized=function(){n&&n(),e(t)}}return t},an.prototype=new Error,an.prototype.constructor=an,Se=function e(){t.calledRun||sn(),t.calledRun||(Se=e)},t.run=sn,t.abort=ln,t.preInit)for("function"==typeof t.preInit&&(t.preInit=[t.preInit]);t.preInit.length>0;)t.preInit.pop()();return t.noExitRuntime=!0,sn(),t}}();e.exports=o});const Ce=/(soft\(\w+).*?\)/,Fe=/(hard\(\w+).*?\)/;function je(e,t){return(e.Call||[]).reduce((e,n)=>(n.Witnesses.forEach(n=>{const i=n.Value,r=n.Costs,o=i.filter(e=>e.startsWith("soft(")||e.startsWith("hard(")).map(e=>{let n=Ce.exec(e);if(n||(n=Fe.exec(e)),!n)throw Error(`invalid violation: ${e}`);const i=n[1],r=t.find(e=>e.asp.startsWith(i));if(!r)throw Error(`${i} not found!`);return Object.assign({},r,{witness:e})});e.push({costs:r,facts:i,violations:o})}),e),[])}function Ie(e){return e.map(e=>a(e.facts))}t.default=class{constructor(e="https://unpkg.com/wasm-clingo@0.2.2",t=console.log){this.initialized=!1,this.stdout="","/"!==e.substr(e.length-1)&&(e+="/");const n=this,i={locateFile:t=>`${e}${t}`,setStatus:t,print(e){n.stdout+=e},totalDependencies:0,monitorRunDependencies(e){i.totalDependencies=Math.max(i.totalDependencies,e),i.setStatus(e?"Preparing... ("+(i.totalDependencies-e)+"/"+i.totalDependencies+")":"All downloads complete.")},printErr(e){e&&(i.setStatus("Received output on stderr."),console.warn(e))}};this.Module=i,this.schema=null,this.hard=u(s),this.soft=u(l,c),this.constraints=d}init(){return new Promise((e,t)=>{this.Module.setStatus("Downloading..."),this.Module.onRuntimeInitialized=(()=>{this.initialized=!0,e(this)}),$e(this.Module)})}solve(e,t={}){if(!this.initialized)throw Error("Draco is not initialized. Call `init() first.`");this.Module.setStatus("Running Draco Query..."),e+=this.getDataDeclaration();const n=t.constraints||Object.keys(this.constraints).filter(e=>!("SOFT"===e||"HARD"===e||"WEIGHTS"===e));t.relaxHard&&-1!==n.indexOf("HARD_INTEGRITY")&&n.splice(n.indexOf("HARD_INTEGRITY"),1),e+=n.map(e=>this.constraints[e]).join("\n\n");const i=se(this.soft);e+=se(this.hard).definitions+"\n\n",e+=i.definitions+"\n\n"+i.weights+"\n\n"+i.assigns;const r=["--outf=2","--opt-mode=OptN","--quiet=1","--project",void 0===t.models?1:t.models].concat((t.weights||[]).map(e=>`-c ${e.name}=${e.value}`)).join(" ");this.stdout="",this.Module.ccall("run","number",["string","string"],[e,r]);const o=JSON.parse(this.stdout);if("UNSATISFIABLE"===o.Result)return console.debug("UNSATISFIABLE"),console.debug(o),null;const a=je(o,this.soft.concat(this.hard));if(a.length>(t.models||1))throw new Error("Too many models.");const s=Ie(a);return this.Module.setStatus(""),{models:a,programs:n,specs:s,result:o}}getSchema(){return this.schema}prepareData(e){this.schema=ae(e)}updateAsp(e){this.constraints=Object.assign({},this.constraints,e),e.SOFT&&(this.soft=u(e.SOFT,e.WEIGHTS)),e.HARD&&(this.hard=u(e.HARD))}getConstraintSet(){return{soft:this.soft,hard:this.hard}}setConstraintSet(e){this.hard=e.hard,this.soft=e.soft}getDataDeclaration(){return this.schema?ue(this.schema).join("\n"):""}},t.getModels=je,t.models2vl=Ie,t.vl2asp=function(e){const t=[`mark(${e.mark}).`];"data"in e&&"url"in e.data&&t.push(`data("${e.data.url}").`);const n=e.encoding||{};let i=0;for(const e of Object.keys(n)){const r=`e${i++}`;t.push(`encoding(${r}).`),t.push(`channel(${r},${e}).`);let o=null,a=null,s=null;for(const i of Object.keys(n[e])){const l=n[e][i];"type"===i&&(o=l),"bin"===i&&(s=l),"scale"===i?("zero"in l&&(a=l.zero,l.zero?t.push(`zero(${r}).`):t.push(`:- zero(${r}).`)),"log"in l&&(l.log?t.push(`log(${r}).`):t.push(`:-log(${r}).`))):"bin"===i?l.maxbins?t.push(`${i}(${r},${l.maxbins}).`):t.push(`${i}(${r},10).`):"field"===i?t.push(`${i}(${r},"${l}").`):"bin"!==i&&t.push(`${i}(${r},${l}).`)}"quantitative"===o&&null===a&&null===s&&t.push(`zero(${r}).`)}return t},t.asp2vl=a,t.cql2asp=function(e){const t=[];x(e.mark)&&t.push(`mark(${e.mark}).`),"data"in e&&"url"in e.data&&t.push(`data("${e.data.url}").`);for(let n=0;n<e.encodings.length;n++){const i=e.encodings[n],r=`e${n}`;t.push(`encoding(${r}).`);let o=null,a=null,s=null;for(const e of Object.keys(i)){const n=x(i[e]);n&&E(n)&&("type"===e&&(o=n),"bin"===e&&(s=n),"scale"===e?("zero"in n&&(a=n.zero,n.zero?t.push(`zero(${r}).`):t.push(`:- zero(${r}).`)),"log"in n&&(n.log?t.push(`log(${r}).`):t.push(`:-log(${r}).`))):"bin"===e?n.maxbins?t.push(`${e}(${r},${n.maxbins}).`):n?t.push(`:- not bin(${r},_).`):t.push(`:- bin(${r},_).`):"field"===e?t.push(`${e}(${r},"${n}").`):"bin"!==e&&t.push(`${e}(${r},${n}).`))}"quantitative"===o&&null===a&&null===s&&t.push(`zero(${r}).`)}return t},t.data2schema=ae,t.schema2asp=ue,t.constraints=d,t.constraints2json=u,t.json2constraints=se,t.lockasp=function(e){const t=[...e],n={};for(const t of e){const e=t.replace(/\"/g,""),[i,r,o,a,s]=le.exec(e);t.trim().startsWith(":-"),ce.includes(r)?(n.hasOwnProperty(r)||(n[r]={count:0,qualifiers:1}),n[r].count+=1):de.includes(r)&&(n.hasOwnProperty(r)||(n[r]={count:0,qualifiers:2}),n[r].count+=1)}for(const e of ce)n.hasOwnProperty(e)||(n[e]={count:0,qualifiers:1});for(const e of de)n.hasOwnProperty(e)||(n[e]={count:0,qualifiers:2});for(const e of Object.keys(n)){const{count:i,qualifiers:r}=n[e];let o=`:- not { ${e}(_`;for(let e=0;e<r-1;e++)o+=",_";o+=`) } = ${i}.`,t.push(o)}return t},Object.defineProperty(t,"__esModule",{value:!0})})}).call(this,n(7),n(12).Buffer,n(31),"/")},function(e,t,n){"use strict";const i=/(\w+)\(([\w\.\/]+)(,([\w\.]+))?\)/;function r(e){let t="",n="data/cars.json";const r={};for(const o of e){const e=o.replace(/\"/g,""),a=o.trim().startsWith(":-"),[s,l,c,d,u]=i.exec(e);"mark"===l?t=c:"data"===l?n=c:"soft"!==l&&(r[c]||(r[c]={}),r[c][l]=u||!a)}const o={};for(const e of Object.keys(r)){const t=r[e];"quantitative"===t.type&&void 0===t.zero&&void 0===t.bin&&(t.zero=!1);const n={...t.log?{type:"log"}:{},...void 0===t.zero?{}:t.zero?{zero:!0}:{zero:!1}};o[t.channel]={type:t.type,...t.aggregate?{aggregate:t.aggregate}:{},...t.field?{field:t.field}:{},...t.stack?{stack:t.stack}:{},...void 0!==t.bin?10==+t.bin?{bin:!0}:{bin:{maxbins:+t.bin}}:{},...Object.keys(n).length?{scale:n}:{}}}return{$schema:"https://vega.github.io/schema/vega-lite/v3.json",data:{url:`${n}`},mark:t,encoding:o}}function o(e,t){const n=e.match(a);if(!n)throw Error("invalid constraints");const i=n.map(e=>{const t=function(e){const t=e.match(s);if(t){const e=t[0],n=l.exec(e);if(n)return{description:n[1]}}return null}(e),n=function(e){const t=e.match(c);if(t){const e=t.join("\n"),n=d.exec(e);if(!n)throw Error(`invalid asp: ${e}`);const i=n[1],r=u.exec(e);if(!r)throw Error(`invalid asp: ${e}`);const o=r[1];return{type:i,name:o,asp:e}}return null}(e);return{...t,...n}});if(t){const e=t.match(f),n=function(e){const t={};for(const n of e){const e=h.exec(n);if(!e)throw Error(`invalid weight: ${n}`);const i=e[1],r=p.exec(n);if(!r)throw Error(`invalid weight: ${n}`);const o=+r[1];t[i]=o}return t}(e);if(!e)throw Error("invalid weights");for(const e of i){const t=e.name;e.weight=n[t]}}return i}const a=/%\s*@constraint(?:(.+)\n)+/g,s=/(%.*\n)+/g,l=/@constraint\s+(.*)/,c=/^[^%].*/gm,d=/(\w+)\(/,u=/\((\w+),?.*?\)/,f=/#const.*/g,h=/#const\s+(\w+?)_weight/,p=/=\s*(\d+)/;n(24),n(25);function m(e){const t=e[0].type;e.forEach(e=>{if(e.type!==t)throw new Error(`constraints not all of type ${t}`)});let n,i,r="";"soft"===t&&(n="",i="");for(const o of e){if(r+=`% @constraint ${o.description}\n${o.asp}`,r+="\n\n","soft"===t){n+=`#const ${o.name}_weight = ${o.weight}.`,n+="\n",i+=`soft_weight(${o.name}, ${o.name}_weight).`,i+="\n"}}return"hard"===t?{definitions:r}:{definitions:r,weights:n,assigns:i}}const g=/(\w+)\(([\w\.\/]+)(,([\w\.]+))?\)/,y=["encoding","zero","log","mark","stack"],_=["channel","type","field","aggregate","bin"];function v(e){const t=[...e],n={};for(const t of e){const e=t.replace(/\"/g,""),[i,r,o,a,s]=g.exec(e);t.trim().startsWith(":-");y.includes(r)?(n.hasOwnProperty(r)||(n[r]={count:0,qualifiers:1}),n[r].count+=1):_.includes(r)&&(n.hasOwnProperty(r)||(n[r]={count:0,qualifiers:2}),n[r].count+=1)}for(const e of y)n.hasOwnProperty(e)||(n[e]={count:0,qualifiers:1});for(const e of _)n.hasOwnProperty(e)||(n[e]={count:0,qualifiers:2});for(const e of Object.keys(n)){const{count:i,qualifiers:r}=n[e];let o=`:- not { ${e}(_`;for(let e=0;e<r-1;e++)o+=",_";o+=`) } = ${i}.`,t.push(o)}return t}function b(e){const t=[`mark(${e.mark}).`];"data"in e&&"url"in e.data&&t.push(`data("${e.data.url}").`);const n=e.encoding||{};let i=0;for(const e of Object.keys(n)){const r=`e${i++}`;t.push(`encoding(${r}).`),t.push(`channel(${r},${e}).`);let o=null,a=null,s=null;for(const i of Object.keys(n[e])){const l=n[e][i];"type"===i&&(o=l),"bin"===i&&(s=l),"scale"===i?("zero"in l&&(a=l.zero,l.zero?t.push(`zero(${r}).`):t.push(`:- zero(${r}).`)),"log"in l&&(l.log?t.push(`log(${r}).`):t.push(`:-log(${r}).`))):"bin"===i?l.maxbins?t.push(`${i}(${r},${l.maxbins}).`):t.push(`${i}(${r},10).`):"field"===i?t.push(`${i}(${r},"${l}").`):"bin"!==i&&t.push(`${i}(${r},${l}).`)}"quantitative"===o&&null===a&&null===s&&t.push(`zero(${r}).`)}return t}n.d(t,"e",function(){return b}),n.d(t,"a",function(){return r}),n.d(t,"b",function(){return o}),n.d(t,"c",function(){return m}),n.d(t,"d",function(){return v})},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var i=n(3);e.exports=function(e,t){var n=i.isObject(e)&&!i.isBuffer(e)?e:JSON.parse(e);return t&&t.property&&(n=i.accessor(t.property)(n)),n}},function(e,t,n){"use strict";var i=n(43),r=n(10),o=n(4),a=n(16),s=n(45);function l(e,t,n){var i=this._refs[n];if("string"==typeof i){if(!this._refs[i])return l.call(this,e,t,i);i=this._refs[i]}if((i=i||this._schemas[n])instanceof a)return h(i.schema,this._opts.inlineRefs)?i.schema:i.validate||this._compile(i);var r,o,s,d=c.call(this,t,n);return d&&(r=d.schema,t=d.root,s=d.baseId),r instanceof a?o=r.validate||e.call(this,r.schema,t,void 0,s):void 0!==r&&(o=h(r,this._opts.inlineRefs)?r:e.call(this,r,t,void 0,s)),o}function c(e,t){var n=i.parse(t),r=m(n),o=p(this._getId(e.schema));if(0===Object.keys(e.schema).length||r!==o){var s=y(r),l=this._refs[s];if("string"==typeof l)return function(e,t,n){var i=c.call(this,e,t);if(i){var r=i.schema,o=i.baseId;e=i.root;var a=this._getId(r);return a&&(o=_(o,a)),u.call(this,n,o,r,e)}}.call(this,e,l,n);if(l instanceof a)l.validate||this._compile(l),e=l;else{if(!((l=this._schemas[s])instanceof a))return;if(l.validate||this._compile(l),s==y(t))return{schema:l,root:e,baseId:o};e=l}if(!e.schema)return;o=p(this._getId(e.schema))}return u.call(this,n,o,e.schema,e)}e.exports=l,l.normalizeId=y,l.fullPath=p,l.url=_,l.ids=function(e){var t=y(this._getId(e)),n={"":t},a={"":p(t,!1)},l={},c=this;return s(e,{allKeys:!0},function(e,t,s,d,u,f,h){if(""!==t){var p=c._getId(e),m=n[d],g=a[d]+"/"+u;if(void 0!==h&&(g+="/"+("number"==typeof h?h:o.escapeFragment(h))),"string"==typeof p){p=m=y(m?i.resolve(m,p):p);var _=c._refs[p];if("string"==typeof _&&(_=c._refs[_]),_&&_.schema){if(!r(e,_.schema))throw new Error('id "'+p+'" resolves to more than one schema')}else if(p!=y(g))if("#"==p[0]){if(l[p]&&!r(e,l[p]))throw new Error('id "'+p+'" resolves to more than one schema');l[p]=e}else c._refs[p]=g}n[t]=m,a[t]=g}}),l},l.inlineRef=h,l.schema=c;var d=o.toHash(["properties","patternProperties","enum","dependencies","definitions"]);function u(e,t,n,i){if(e.fragment=e.fragment||"","/"==e.fragment.slice(0,1)){for(var r=e.fragment.split("/"),a=1;a<r.length;a++){var s=r[a];if(s){if(void 0===(n=n[s=o.unescapeFragment(s)]))break;var l;if(!d[s]&&((l=this._getId(n))&&(t=_(t,l)),n.$ref)){var u=_(t,n.$ref),f=c.call(this,i,u);f&&(n=f.schema,i=f.root,t=f.baseId)}}}return void 0!==n&&n!==i.schema?{schema:n,root:i,baseId:t}:void 0}}var f=o.toHash(["type","format","pattern","maxLength","minLength","maxProperties","minProperties","maxItems","minItems","maximum","minimum","uniqueItems","multipleOf","required","enum"]);function h(e,t){return!1!==t&&(void 0===t||!0===t?function e(t){var n;if(Array.isArray(t)){for(var i=0;i<t.length;i++)if("object"==typeof(n=t[i])&&!e(n))return!1}else for(var r in t){if("$ref"==r)return!1;if("object"==typeof(n=t[r])&&!e(n))return!1}return!0}(e):t?function e(t){var n,i=0;if(Array.isArray(t)){for(var r=0;r<t.length;r++)if("object"==typeof(n=t[r])&&(i+=e(n)),i==1/0)return 1/0}else for(var o in t){if("$ref"==o)return 1/0;if(f[o])i++;else if("object"==typeof(n=t[o])&&(i+=e(n)+1),i==1/0)return 1/0}return i}(e)<=t:void 0)}function p(e,t){return!1!==t&&(e=y(e)),m(i.parse(e))}function m(e){return i.serialize(e).split("#")[0]+"#"}var g=/#\/?$/;function y(e){return e?e.replace(g,""):""}function _(e,t){return t=y(t),i.resolve(e,t)}},function(e,t,n){"use strict";var i=Array.isArray,r=Object.keys,o=Object.prototype.hasOwnProperty;e.exports=function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){var a,s,l,c=i(t),d=i(n);if(c&&d){if((s=t.length)!=n.length)return!1;for(a=s;0!=a--;)if(!e(t[a],n[a]))return!1;return!0}if(c!=d)return!1;var u=t instanceof Date,f=n instanceof Date;if(u!=f)return!1;if(u&&f)return t.getTime()==n.getTime();var h=t instanceof RegExp,p=n instanceof RegExp;if(h!=p)return!1;if(h&&p)return t.toString()==n.toString();var m=r(t);if((s=m.length)!==r(n).length)return!1;for(a=s;0!=a--;)if(!o.call(n,m[a]))return!1;for(a=s;0!=a--;)if(!e(t[l=m[a]],n[l]))return!1;return!0}return t!=t&&n!=n}},function(e,t,n){"use strict";var i=n(9);function r(e,t,n){this.message=n||r.message(e,t),this.missingRef=i.url(e,t),this.missingSchema=i.normalizeId(i.fullPath(this.missingRef))}function o(e){return e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e}e.exports={Validation:o(function(e){this.message="validation failed",this.errors=e,this.ajv=this.validation=!0}),MissingRef:o(r)},r.message=function(e,t){return"can't resolve reference "+t+" from id "+e}},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var i=n(28),r=n(29),o=n(30);function a(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(a()<t)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=l.prototype:(null===e&&(e=new l(t)),e.length=t),e}function l(e,t,n){if(!(l.TYPED_ARRAY_SUPPORT||this instanceof l))return new l(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return u(this,e)}return c(this,e,t,n)}function c(e,t,n,i){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,i){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(i||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===i?new Uint8Array(t):void 0===i?new Uint8Array(t,n):new Uint8Array(t,n,i);l.TYPED_ARRAY_SUPPORT?(e=t).__proto__=l.prototype:e=f(e,t);return e}(e,t,n,i):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!l.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var i=0|p(t,n),r=(e=s(e,i)).write(t,n);r!==i&&(e=e.slice(0,r));return e}(e,t,n):function(e,t){if(l.isBuffer(t)){var n=0|h(t.length);return 0===(e=s(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||function(e){return e!=e}(t.length)?s(e,0):f(e,t);if("Buffer"===t.type&&o(t.data))return f(e,t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function d(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function u(e,t){if(d(t),e=s(e,t<0?0:0|h(t)),!l.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function f(e,t){var n=t.length<0?0:0|h(t.length);e=s(e,n);for(var i=0;i<n;i+=1)e[i]=255&t[i];return e}function h(e){if(e>=a())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a().toString(16)+" bytes");return 0|e}function p(e,t){if(l.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return R(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return L(e).length;default:if(i)return R(e).length;t=(""+t).toLowerCase(),i=!0}}function m(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}function g(e,t,n,i,r){if(0===e.length)return-1;if("string"==typeof n?(i=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=r?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(r)return-1;n=e.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof t&&(t=l.from(t,i)),l.isBuffer(t))return 0===t.length?-1:y(e,t,n,i,r);if("number"==typeof t)return t&=255,l.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):y(e,[t],n,i,r);throw new TypeError("val must be string, number or Buffer")}function y(e,t,n,i,r){var o,a=1,s=e.length,l=t.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;a=2,s/=2,l/=2,n/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(r){var d=-1;for(o=n;o<s;o++)if(c(e,o)===c(t,-1===d?0:o-d)){if(-1===d&&(d=o),o-d+1===l)return d*a}else-1!==d&&(o-=o-d),d=-1}else for(n+l>s&&(n=s-l),o=n;o>=0;o--){for(var u=!0,f=0;f<l;f++)if(c(e,o+f)!==c(t,f)){u=!1;break}if(u)return o}return-1}function _(e,t,n,i){n=Number(n)||0;var r=e.length-n;i?(i=Number(i))>r&&(i=r):i=r;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");i>o/2&&(i=o/2);for(var a=0;a<i;++a){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[n+a]=s}return a}function v(e,t,n,i){return q(R(t,e.length-n),e,n,i)}function b(e,t,n,i){return q(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,i)}function w(e,t,n,i){return b(e,t,n,i)}function x(e,t,n,i){return q(L(t),e,n,i)}function E(e,t,n,i){return q(function(e,t){for(var n,i,r,o=[],a=0;a<e.length&&!((t-=2)<0);++a)n=e.charCodeAt(a),i=n>>8,r=n%256,o.push(r),o.push(i);return o}(t,e.length-n),e,n,i)}function k(e,t,n){return 0===t&&n===e.length?i.fromByteArray(e):i.fromByteArray(e.slice(t,n))}function S(e,t,n){n=Math.min(e.length,n);for(var i=[],r=t;r<n;){var o,a,s,l,c=e[r],d=null,u=c>239?4:c>223?3:c>191?2:1;if(r+u<=n)switch(u){case 1:c<128&&(d=c);break;case 2:128==(192&(o=e[r+1]))&&(l=(31&c)<<6|63&o)>127&&(d=l);break;case 3:o=e[r+1],a=e[r+2],128==(192&o)&&128==(192&a)&&(l=(15&c)<<12|(63&o)<<6|63&a)>2047&&(l<55296||l>57343)&&(d=l);break;case 4:o=e[r+1],a=e[r+2],s=e[r+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(l=(15&c)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&l<1114112&&(d=l)}null===d?(d=65533,u=1):d>65535&&(d-=65536,i.push(d>>>10&1023|55296),d=56320|1023&d),i.push(d),r+=u}return function(e){var t=e.length;if(t<=T)return String.fromCharCode.apply(String,e);var n="",i=0;for(;i<t;)n+=String.fromCharCode.apply(String,e.slice(i,i+=T));return n}(i)}t.Buffer=l,t.SlowBuffer=function(e){+e!=e&&(e=0);return l.alloc(+e)},t.INSPECT_MAX_BYTES=50,l.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=a(),l.poolSize=8192,l._augment=function(e){return e.__proto__=l.prototype,e},l.from=function(e,t,n){return c(null,e,t,n)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(e,t,n){return function(e,t,n,i){return d(t),t<=0?s(e,t):void 0!==n?"string"==typeof i?s(e,t).fill(n,i):s(e,t).fill(n):s(e,t)}(null,e,t,n)},l.allocUnsafe=function(e){return u(null,e)},l.allocUnsafeSlow=function(e){return u(null,e)},l.isBuffer=function(e){return!(null==e||!e._isBuffer)},l.compare=function(e,t){if(!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,i=t.length,r=0,o=Math.min(n,i);r<o;++r)if(e[r]!==t[r]){n=e[r],i=t[r];break}return n<i?-1:i<n?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!o(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var i=l.allocUnsafe(t),r=0;for(n=0;n<e.length;++n){var a=e[n];if(!l.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(i,r),r+=a.length}return i},l.byteLength=p,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)m(this,t,t+1);return this},l.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},l.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},l.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?S(this,0,e):function(e,t,n){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return P(this,t,n);case"utf8":case"utf-8":return S(this,t,n);case"ascii":return D(this,t,n);case"latin1":case"binary":return A(this,t,n);case"base64":return k(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return O(this,t,n);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}.apply(this,arguments)},l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},l.prototype.compare=function(e,t,n,i,r){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===i&&(i=0),void 0===r&&(r=this.length),t<0||n>e.length||i<0||r>this.length)throw new RangeError("out of range index");if(i>=r&&t>=n)return 0;if(i>=r)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,i>>>=0,r>>>=0,this===e)return 0;for(var o=r-i,a=n-t,s=Math.min(o,a),c=this.slice(i,r),d=e.slice(t,n),u=0;u<s;++u)if(c[u]!==d[u]){o=c[u],a=d[u];break}return o<a?-1:a<o?1:0},l.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},l.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},l.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},l.prototype.write=function(e,t,n,i){if(void 0===t)i="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)i=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===i&&(i="utf8")):(i=n,n=void 0)}var r=this.length-t;if((void 0===n||n>r)&&(n=r),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var o=!1;;)switch(i){case"hex":return _(this,e,t,n);case"utf8":case"utf-8":return v(this,e,t,n);case"ascii":return b(this,e,t,n);case"latin1":case"binary":return w(this,e,t,n);case"base64":return x(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),o=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var T=4096;function D(e,t,n){var i="";n=Math.min(e.length,n);for(var r=t;r<n;++r)i+=String.fromCharCode(127&e[r]);return i}function A(e,t,n){var i="";n=Math.min(e.length,n);for(var r=t;r<n;++r)i+=String.fromCharCode(e[r]);return i}function P(e,t,n){var i=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>i)&&(n=i);for(var r="",o=t;o<n;++o)r+=U(e[o]);return r}function O(e,t,n){for(var i=e.slice(t,n),r="",o=0;o<i.length;o+=2)r+=String.fromCharCode(i[o]+256*i[o+1]);return r}function $(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function C(e,t,n,i,r,o){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<o)throw new RangeError('"value" argument is out of bounds');if(n+i>e.length)throw new RangeError("Index out of range")}function F(e,t,n,i){t<0&&(t=65535+t+1);for(var r=0,o=Math.min(e.length-n,2);r<o;++r)e[n+r]=(t&255<<8*(i?r:1-r))>>>8*(i?r:1-r)}function j(e,t,n,i){t<0&&(t=4294967295+t+1);for(var r=0,o=Math.min(e.length-n,4);r<o;++r)e[n+r]=t>>>8*(i?r:3-r)&255}function I(e,t,n,i,r,o){if(n+i>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(e,t,n,i,o){return o||I(e,0,n,4),r.write(e,t,n,i,23,4),n+4}function z(e,t,n,i,o){return o||I(e,0,n,8),r.write(e,t,n,i,52,8),n+8}l.prototype.slice=function(e,t){var n,i=this.length;if(e=~~e,t=void 0===t?i:~~t,e<0?(e+=i)<0&&(e=0):e>i&&(e=i),t<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e),l.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=l.prototype;else{var r=t-e;n=new l(r,void 0);for(var o=0;o<r;++o)n[o]=this[o+e]}return n},l.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||$(e,t,this.length);for(var i=this[e],r=1,o=0;++o<t&&(r*=256);)i+=this[e+o]*r;return i},l.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||$(e,t,this.length);for(var i=this[e+--t],r=1;t>0&&(r*=256);)i+=this[e+--t]*r;return i},l.prototype.readUInt8=function(e,t){return t||$(e,1,this.length),this[e]},l.prototype.readUInt16LE=function(e,t){return t||$(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUInt16BE=function(e,t){return t||$(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUInt32LE=function(e,t){return t||$(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUInt32BE=function(e,t){return t||$(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||$(e,t,this.length);for(var i=this[e],r=1,o=0;++o<t&&(r*=256);)i+=this[e+o]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*t)),i},l.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||$(e,t,this.length);for(var i=t,r=1,o=this[e+--i];i>0&&(r*=256);)o+=this[e+--i]*r;return o>=(r*=128)&&(o-=Math.pow(2,8*t)),o},l.prototype.readInt8=function(e,t){return t||$(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){t||$(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt16BE=function(e,t){t||$(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},l.prototype.readInt32LE=function(e,t){return t||$(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return t||$(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readFloatLE=function(e,t){return t||$(e,4,this.length),r.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return t||$(e,4,this.length),r.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return t||$(e,8,this.length),r.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return t||$(e,8,this.length),r.read(this,e,!1,52,8)},l.prototype.writeUIntLE=function(e,t,n,i){(e=+e,t|=0,n|=0,i)||C(this,e,t,n,Math.pow(2,8*n)-1,0);var r=1,o=0;for(this[t]=255&e;++o<n&&(r*=256);)this[t+o]=e/r&255;return t+n},l.prototype.writeUIntBE=function(e,t,n,i){(e=+e,t|=0,n|=0,i)||C(this,e,t,n,Math.pow(2,8*n)-1,0);var r=n-1,o=1;for(this[t+r]=255&e;--r>=0&&(o*=256);)this[t+r]=e/o&255;return t+n},l.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,1,255,0),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},l.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},l.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},l.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):j(this,e,t,!0),t+4},l.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):j(this,e,t,!1),t+4},l.prototype.writeIntLE=function(e,t,n,i){if(e=+e,t|=0,!i){var r=Math.pow(2,8*n-1);C(this,e,t,n,r-1,-r)}var o=0,a=1,s=0;for(this[t]=255&e;++o<n&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},l.prototype.writeIntBE=function(e,t,n,i){if(e=+e,t|=0,!i){var r=Math.pow(2,8*n-1);C(this,e,t,n,r-1,-r)}var o=n-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+n},l.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,1,127,-128),l.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},l.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},l.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):j(this,e,t,!0),t+4},l.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||C(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),l.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):j(this,e,t,!1),t+4},l.prototype.writeFloatLE=function(e,t,n){return M(this,e,t,!0,n)},l.prototype.writeFloatBE=function(e,t,n){return M(this,e,t,!1,n)},l.prototype.writeDoubleLE=function(e,t,n){return z(this,e,t,!0,n)},l.prototype.writeDoubleBE=function(e,t,n){return z(this,e,t,!1,n)},l.prototype.copy=function(e,t,n,i){if(n||(n=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);var r,o=i-n;if(this===e&&n<t&&t<i)for(r=o-1;r>=0;--r)e[r+t]=this[r+n];else if(o<1e3||!l.TYPED_ARRAY_SUPPORT)for(r=0;r<o;++r)e[r+t]=this[r+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},l.prototype.fill=function(e,t,n,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),1===e.length){var r=e.charCodeAt(0);r<256&&(e=r)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!l.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var a=l.isBuffer(e)?e:R(new l(e,i).toString()),s=a.length;for(o=0;o<n-t;++o)this[o+t]=a[o%s]}return this};var N=/[^+\/0-9A-Za-z-_]/g;function U(e){return e<16?"0"+e.toString(16):e.toString(16)}function R(e,t){var n;t=t||1/0;for(var i=e.length,r=null,o=[],a=0;a<i;++a){if((n=e.charCodeAt(a))>55295&&n<57344){if(!r){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===i){(t-=3)>-1&&o.push(239,191,189);continue}r=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(t-=3)>-1&&o.push(239,191,189);if(r=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function L(e){return i.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(N,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function q(e,t,n,i){for(var r=0;r<i&&!(r+n>=t.length||r>=e.length);++r)t[r+n]=e[r];return r}}).call(this,n(7))},function(e,t,n){"use strict";n(6)},function(e,t,n){var i=n(3),r="__types__",o={boolean:i.boolean,integer:i.number,number:i.number,date:i.date,string:function(e){return null==e||""===e?null:e+""}},a={boolean:function(e){return"true"===e||"false"===e||i.isBoolean(e)},integer:function(e){return a.number(e)&&(e=+e)==~~e},number:function(e){return!isNaN(+e)&&!i.isDate(e)},date:function(e){return!isNaN(Date.parse(e))}};function s(e){return i.keys(e)}function l(e){return"["+e+"]"}function c(e,t){var n,o,a;if(e=i.array(e),t=i.$(t),e[r]&&(n=t(e[r]),i.isString(n)))return n;for(o=0,a=e.length;!i.isValid(n)&&o<a;++o)n=t?t(e[o]):e[o];return i.isDate(n)?"date":i.isNumber(n)?"number":i.isBoolean(n)?"boolean":i.isString(n)?"string":null}function d(e,t,n){var r,o,s;e=i.array(e),t=i.$(t);var l=["boolean","integer","number","date"];for(r=0;r<e.length;++r){for(s=t?t(e[r]):e[r],o=0;o<l.length;++o)n&&n.test(s)||!i.isValid(s)||a[l[o]](s)||(l.splice(o,1),o-=1);if(0===l.length)return"string"}return l[0]}c.annotation=function(e,t){if(!t)return e&&e[r]||null;e[r]=t},c.all=function(e,t){if(e.length){var n=t?i.identity:(t=s(e[0]),l);return t.reduce(function(t,i){return t[i]=c(e,n(i)),t},{})}},c.infer=d,c.inferAll=function(e,t,n){var r=t?i.identity:(t=s(e[0]),l);return t.reduce(function(t,i){return t[i]=d(e,r(i),n),t},{})},c.parsers=o,e.exports=c},function(e,t,n){!function(e){"use strict";var t=new Date,n=new Date;function i(e,r,o,a){function s(t){return e(t=new Date(+t)),t}return s.floor=s,s.round=function(t){var n=new Date(+t),i=new Date(t-1);return e(n),e(i),r(i,1),t-n<i-t?n:i},s.ceil=function(t){return e(t=new Date(t-1)),r(t,1),t},s.offset=function(e,t){return r(e=new Date(+e),null==t?1:Math.floor(t)),e},s.range=function(t,n,i){var o=[];if(t=new Date(t-1),n=new Date(+n),i=null==i?1:Math.floor(i),!(t<n&&i>0))return o;for(r(t,1),e(t),t<n&&o.push(new Date(+t));r(t,i),e(t),t<n;)o.push(new Date(+t));return o},s.filter=function(t){return i(function(n){for(;e(n),!t(n);)n.setTime(n-1)},function(e,n){for(;--n>=0;)for(;r(e,1),!t(e););})},o&&(s.count=function(i,r){return t.setTime(+i),n.setTime(+r),e(t),e(n),Math.floor(o(t,n))},s.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?s.filter(a?function(t){return a(t)%e==0}:function(t){return s.count(0,t)%e==0}):s:null}),s}var r=i(function(){},function(e,t){e.setTime(+e+t)},function(e,t){return t-e});r.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?i(function(t){t.setTime(Math.floor(t/e)*e)},function(t,n){t.setTime(+t+n*e)},function(t,n){return(n-t)/e}):r:null};var o=i(function(e){e.setMilliseconds(0)},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getSeconds()}),a=i(function(e){e.setSeconds(0,0)},function(e,t){e.setTime(+e+6e4*t)},function(e,t){return(t-e)/6e4},function(e){return e.getMinutes()}),s=i(function(e){e.setMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getHours()}),l=i(function(e){e.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+t)},function(e,t){return(t-e-6e4*(t.getTimezoneOffset()-e.getTimezoneOffset()))/864e5},function(e){return e.getDate()-1});function c(e){return i(function(t){t.setHours(0,0,0,0),t.setDate(t.getDate()-(t.getDay()+7-e)%7)},function(e,t){e.setDate(e.getDate()+7*t)},function(e,t){return(t-e-6e4*(t.getTimezoneOffset()-e.getTimezoneOffset()))/6048e5})}var d=c(0),u=c(1),f=c(2),h=c(3),p=c(4),m=c(5),g=c(6),y=i(function(e){e.setHours(0,0,0,0),e.setDate(1)},function(e,t){e.setMonth(e.getMonth()+t)},function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())},function(e){return e.getMonth()}),_=i(function(e){e.setHours(0,0,0,0),e.setMonth(0,1)},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e,t){return t.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}),v=i(function(e){e.setUTCMilliseconds(0)},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getUTCSeconds()}),b=i(function(e){e.setUTCSeconds(0,0)},function(e,t){e.setTime(+e+6e4*t)},function(e,t){return(t-e)/6e4},function(e){return e.getUTCMinutes()}),w=i(function(e){e.setUTCMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getUTCHours()}),x=i(function(e){e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+t)},function(e,t){return(t-e)/864e5},function(e){return e.getUTCDate()-1});function E(e){return i(function(t){t.setUTCHours(0,0,0,0),t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7)},function(e,t){e.setUTCDate(e.getUTCDate()+7*t)},function(e,t){return(t-e)/6048e5})}var k=E(0),S=E(1),T=E(2),D=E(3),A=E(4),P=E(5),O=E(6),$=i(function(e){e.setUTCHours(0,0,0,0),e.setUTCDate(1)},function(e,t){e.setUTCMonth(e.getUTCMonth()+t)},function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()}),C=i(function(e){e.setUTCHours(0,0,0,0),e.setUTCMonth(0,1)},function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)},function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}),F=r.range,j=o.range,I=a.range,M=s.range,z=l.range,N=d.range,U=u.range,R=f.range,L=h.range,q=p.range,B=m.range,V=g.range,W=d.range,Y=y.range,H=_.range,J=r,G=F,X=v.range,Q=b.range,K=w.range,Z=x.range,ee=k.range,te=S.range,ne=T.range,ie=D.range,re=A.range,oe=P.range,ae=O.range,se=k.range,le=$.range,ce=C.range;e.version="0.1.1",e.milliseconds=F,e.seconds=j,e.minutes=I,e.hours=M,e.days=z,e.sundays=N,e.mondays=U,e.tuesdays=R,e.wednesdays=L,e.thursdays=q,e.fridays=B,e.saturdays=V,e.weeks=W,e.months=Y,e.years=H,e.utcMillisecond=J,e.utcMilliseconds=G,e.utcSeconds=X,e.utcMinutes=Q,e.utcHours=K,e.utcDays=Z,e.utcSundays=ee,e.utcMondays=te,e.utcTuesdays=ne,e.utcWednesdays=ie,e.utcThursdays=re,e.utcFridays=oe,e.utcSaturdays=ae,e.utcWeeks=se,e.utcMonths=le,e.utcYears=ce,e.millisecond=r,e.second=o,e.minute=a,e.hour=s,e.day=l,e.sunday=d,e.monday=u,e.tuesday=f,e.wednesday=h,e.thursday=p,e.friday=m,e.saturday=g,e.week=d,e.month=y,e.year=_,e.utcSecond=v,e.utcMinute=b,e.utcHour=w,e.utcDay=x,e.utcSunday=k,e.utcMonday=S,e.utcTuesday=T,e.utcWednesday=D,e.utcThursday=A,e.utcFriday=P,e.utcSaturday=O,e.utcWeek=k,e.utcMonth=$,e.utcYear=C,e.interval=i}(t)},function(e,t,n){"use strict";var i=n(4);e.exports=function(e){i.copy(e,this)}},function(e,t,n){"use strict";e.exports=function(e,t){t||(t={}),"function"==typeof t&&(t={cmp:t});var n="boolean"==typeof t.cycles&&t.cycles,i=t.cmp&&function(e){return function(t){return function(n,i){var r={key:n,value:t[n]},o={key:i,value:t[i]};return e(r,o)}}}(t.cmp),r=[];return function e(t){if(t&&t.toJSON&&"function"==typeof t.toJSON&&(t=t.toJSON()),void 0!==t){if("number"==typeof t)return isFinite(t)?""+t:"null";if("object"!=typeof t)return JSON.stringify(t);var o,a;if(Array.isArray(t)){for(a="[",o=0;o<t.length;o++)o&&(a+=","),a+=e(t[o])||"null";return a+"]"}if(null===t)return"null";if(-1!==r.indexOf(t)){if(n)return JSON.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}var s=r.push(t)-1,l=Object.keys(t).sort(i&&i(t));for(a="",o=0;o<l.length;o++){var c=l[o],d=e(t[c]);d&&(a&&(a+=","),a+=JSON.stringify(c)+":"+d)}return r.splice(s,1),"{"+a+"}"}}(e)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i="",r=!0===e.schema.$async,o=e.util.schemaHasRulesExcept(e.schema,e.RULES.all,"$ref"),a=e.self._getId(e.schema);if(e.opts.strictKeywords){var s=e.util.schemaUnknownRules(e.schema,e.RULES.keywords);if(s){var l="unknown keyword: "+s;if("log"!==e.opts.strictKeywords)throw new Error(l);e.logger.warn(l)}}if(e.isTop&&(i+=" var validate = ",r&&(e.async=!0,i+="async "),i+="function(data, dataPath, parentData, parentDataProperty, rootData) { 'use strict'; ",a&&(e.opts.sourceCode||e.opts.processCode)&&(i+=" /*# sourceURL="+a+" */ ")),"boolean"==typeof e.schema||!o&&!e.schema.$ref){var c=e.level,d=e.dataLevel,u=e.schema["false schema"],f=e.schemaPath+e.util.getProperty("false schema"),h=e.errSchemaPath+"/false schema",p=!e.opts.allErrors,m="data"+(d||""),g="valid"+c;if(!1===e.schema){e.isTop?p=!0:i+=" var "+g+" = false; ",(Z=Z||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(b||"false schema")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: {} ",!1!==e.opts.messages&&(i+=" , message: 'boolean schema is false' "),e.opts.verbose&&(i+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),i+=" } "):i+=" {} ";var y=i;i=Z.pop(),!e.compositeRule&&p?e.async?i+=" throw new ValidationError(["+y+"]); ":i+=" validate.errors = ["+y+"]; return false; ":i+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}else e.isTop?i+=r?" return data; ":" validate.errors = null; return true; ":i+=" var "+g+" = true; ";return e.isTop&&(i+=" }; return validate; "),i}if(e.isTop){var _=e.isTop;c=e.level=0,d=e.dataLevel=0,m="data";if(e.rootId=e.resolve.fullPath(e.self._getId(e.root.schema)),e.baseId=e.baseId||e.rootId,delete e.isTop,e.dataPathArr=[void 0],void 0!==e.schema.default&&e.opts.useDefaults&&e.opts.strictDefaults){var v="default is ignored in the schema root";if("log"!==e.opts.strictDefaults)throw new Error(v);e.logger.warn(v)}i+=" var vErrors = null; ",i+=" var errors = 0;     ",i+=" if (rootData === undefined) rootData = data; "}else{c=e.level,m="data"+((d=e.dataLevel)||"");if(a&&(e.baseId=e.resolve.url(e.baseId,a)),r&&!e.async)throw new Error("async schema in sync schema");i+=" var errs_"+c+" = errors;"}g="valid"+c,p=!e.opts.allErrors;var b,w="",x="",E=e.schema.type,k=Array.isArray(E);if(E&&e.opts.nullable&&!0===e.schema.nullable&&(k?-1==E.indexOf("null")&&(E=E.concat("null")):"null"!=E&&(E=[E,"null"],k=!0)),k&&1==E.length&&(E=E[0],k=!1),e.schema.$ref&&o){if("fail"==e.opts.extendRefs)throw new Error('$ref: validation keywords used in schema at path "'+e.errSchemaPath+'" (see option extendRefs)');!0!==e.opts.extendRefs&&(o=!1,e.logger.warn('$ref: keywords ignored in schema at path "'+e.errSchemaPath+'"'))}if(e.schema.$comment&&e.opts.$comment&&(i+=" "+e.RULES.all.$comment.code(e,"$comment")),E){if(e.opts.coerceTypes)var S=e.util.coerceToTypes(e.opts.coerceTypes,E);var T=e.RULES.types[E];if(S||k||!0===T||T&&!ee(T)){f=e.schemaPath+".type",h=e.errSchemaPath+"/type",f=e.schemaPath+".type",h=e.errSchemaPath+"/type";var D=k?"checkDataTypes":"checkDataType";if(i+=" if ("+e.util[D](E,m,!0)+") { ",S){var A="dataType"+c,P="coerced"+c;i+=" var "+A+" = typeof "+m+"; ","array"==e.opts.coerceTypes&&(i+=" if ("+A+" == 'object' && Array.isArray("+m+")) "+A+" = 'array'; "),i+=" var "+P+" = undefined; ";var O="",$=S;if($)for(var C,F=-1,j=$.length-1;F<j;)C=$[F+=1],F&&(i+=" if ("+P+" === undefined) { ",O+="}"),"array"==e.opts.coerceTypes&&"array"!=C&&(i+=" if ("+A+" == 'array' && "+m+".length == 1) { "+P+" = "+m+" = "+m+"[0]; "+A+" = typeof "+m+";  } "),"string"==C?i+=" if ("+A+" == 'number' || "+A+" == 'boolean') "+P+" = '' + "+m+"; else if ("+m+" === null) "+P+" = ''; ":"number"==C||"integer"==C?(i+=" if ("+A+" == 'boolean' || "+m+" === null || ("+A+" == 'string' && "+m+" && "+m+" == +"+m+" ","integer"==C&&(i+=" && !("+m+" % 1)"),i+=")) "+P+" = +"+m+"; "):"boolean"==C?i+=" if ("+m+" === 'false' || "+m+" === 0 || "+m+" === null) "+P+" = false; else if ("+m+" === 'true' || "+m+" === 1) "+P+" = true; ":"null"==C?i+=" if ("+m+" === '' || "+m+" === 0 || "+m+" === false) "+P+" = null; ":"array"==e.opts.coerceTypes&&"array"==C&&(i+=" if ("+A+" == 'string' || "+A+" == 'number' || "+A+" == 'boolean' || "+m+" == null) "+P+" = ["+m+"]; ");i+=" "+O+" if ("+P+" === undefined) {   ",(Z=Z||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(b||"type")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: { type: '",i+=k?""+E.join(","):""+E,i+="' } ",!1!==e.opts.messages&&(i+=" , message: 'should be ",i+=k?""+E.join(","):""+E,i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),i+=" } "):i+=" {} ";y=i;i=Z.pop(),!e.compositeRule&&p?e.async?i+=" throw new ValidationError(["+y+"]); ":i+=" validate.errors = ["+y+"]; return false; ":i+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } else {  ";var I=d?"data"+(d-1||""):"parentData",M=d?e.dataPathArr[d]:"parentDataProperty";i+=" "+m+" = "+P+"; ",d||(i+="if ("+I+" !== undefined)"),i+=" "+I+"["+M+"] = "+P+"; } "}else{(Z=Z||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(b||"type")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: { type: '",i+=k?""+E.join(","):""+E,i+="' } ",!1!==e.opts.messages&&(i+=" , message: 'should be ",i+=k?""+E.join(","):""+E,i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),i+=" } "):i+=" {} ";y=i;i=Z.pop(),!e.compositeRule&&p?e.async?i+=" throw new ValidationError(["+y+"]); ":i+=" validate.errors = ["+y+"]; return false; ":i+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}i+=" } "}}if(e.schema.$ref&&!o)i+=" "+e.RULES.all.$ref.code(e,"$ref")+" ",p&&(i+=" } if (errors === ",i+=_?"0":"errs_"+c,i+=") { ",x+="}");else{var z=e.RULES;if(z)for(var N=-1,U=z.length-1;N<U;)if(ee(T=z[N+=1])){if(T.type&&(i+=" if ("+e.util.checkDataType(T.type,m)+") { "),e.opts.useDefaults)if("object"==T.type&&e.schema.properties){u=e.schema.properties;var R=Object.keys(u);if(R)for(var L,q=-1,B=R.length-1;q<B;){if(void 0!==(Y=u[L=R[q+=1]]).default){var V=m+e.util.getProperty(L);if(e.compositeRule){if(e.opts.strictDefaults){v="default is ignored for: "+V;if("log"!==e.opts.strictDefaults)throw new Error(v);e.logger.warn(v)}}else i+=" if ("+V+" === undefined ","empty"==e.opts.useDefaults&&(i+=" || "+V+" === null || "+V+" === '' "),i+=" ) "+V+" = ","shared"==e.opts.useDefaults?i+=" "+e.useDefault(Y.default)+" ":i+=" "+JSON.stringify(Y.default)+" ",i+="; "}}}else if("array"==T.type&&Array.isArray(e.schema.items)){var W=e.schema.items;if(W){F=-1;for(var Y,H=W.length-1;F<H;)if(void 0!==(Y=W[F+=1]).default){V=m+"["+F+"]";if(e.compositeRule){if(e.opts.strictDefaults){v="default is ignored for: "+V;if("log"!==e.opts.strictDefaults)throw new Error(v);e.logger.warn(v)}}else i+=" if ("+V+" === undefined ","empty"==e.opts.useDefaults&&(i+=" || "+V+" === null || "+V+" === '' "),i+=" ) "+V+" = ","shared"==e.opts.useDefaults?i+=" "+e.useDefault(Y.default)+" ":i+=" "+JSON.stringify(Y.default)+" ",i+="; "}}}var J=T.rules;if(J)for(var G,X=-1,Q=J.length-1;X<Q;)if(te(G=J[X+=1])){var K=G.code(e,G.keyword,T.type);K&&(i+=" "+K+" ",p&&(w+="}"))}if(p&&(i+=" "+w+" ",w=""),T.type&&(i+=" } ",E&&E===T.type&&!S)){i+=" else { ";var Z;f=e.schemaPath+".type",h=e.errSchemaPath+"/type";(Z=Z||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: '"+(b||"type")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(h)+" , params: { type: '",i+=k?""+E.join(","):""+E,i+="' } ",!1!==e.opts.messages&&(i+=" , message: 'should be ",i+=k?""+E.join(","):""+E,i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+f+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+m+" "),i+=" } "):i+=" {} ";y=i;i=Z.pop(),!e.compositeRule&&p?e.async?i+=" throw new ValidationError(["+y+"]); ":i+=" validate.errors = ["+y+"]; return false; ":i+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } "}p&&(i+=" if (errors === ",i+=_?"0":"errs_"+c,i+=") { ",x+="}")}}function ee(e){for(var t=e.rules,n=0;n<t.length;n++)if(te(t[n]))return!0}function te(t){return void 0!==e.schema[t.keyword]||t.implements&&function(t){for(var n=t.implements,i=0;i<n.length;i++)if(void 0!==e.schema[n[i]])return!0}(t)}return p&&(i+=" "+x+" "),_?(r?(i+=" if (errors === 0) return data;           ",i+=" else throw new ValidationError(vErrors); "):(i+=" validate.errors = vErrors; ",i+=" return errors === 0;       "),i+=" }; return validate;"):i+=" var "+g+" = errors === errs_"+c+";",i=e.util.cleanUpCode(i),_&&(i=e.util.finalCleanUpCode(i,r)),i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r=" ",o=e.level,a=e.dataLevel,s=e.schema[t],l=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(a||""),f=e.opts.$data&&s&&s.$data;f?(r+=" var schema"+o+" = "+e.util.getData(s.$data,a,e.dataPathArr)+"; ",i="schema"+o):i=s;var h="maximum"==t,p=h?"exclusiveMaximum":"exclusiveMinimum",m=e.schema[p],g=e.opts.$data&&m&&m.$data,y=h?"<":">",_=h?">":"<",v=void 0;if(g){var b=e.util.getData(m.$data,a,e.dataPathArr),w="exclusive"+o,x="exclType"+o,E="exclIsNumber"+o,k="' + "+(D="op"+o)+" + '";r+=" var schemaExcl"+o+" = "+b+"; ",r+=" var "+w+"; var "+x+" = typeof "+(b="schemaExcl"+o)+"; if ("+x+" != 'boolean' && "+x+" != 'undefined' && "+x+" != 'number') { ";var S;v=p;(S=S||[]).push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(v||"_exclusiveLimit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: {} ",!1!==e.opts.messages&&(r+=" , message: '"+p+" should be boolean' "),e.opts.verbose&&(r+=" , schema: validate.schema"+l+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";var T=r;r=S.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+T+"]); ":r+=" validate.errors = ["+T+"]; return false; ":r+=" var err = "+T+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } else if ( ",f&&(r+=" ("+i+" !== undefined && typeof "+i+" != 'number') || "),r+=" "+x+" == 'number' ? ( ("+w+" = "+i+" === undefined || "+b+" "+y+"= "+i+") ? "+u+" "+_+"= "+b+" : "+u+" "+_+" "+i+" ) : ( ("+w+" = "+b+" === true) ? "+u+" "+_+"= "+i+" : "+u+" "+_+" "+i+" ) || "+u+" !== "+u+") { var op"+o+" = "+w+" ? '"+y+"' : '"+y+"='; ",void 0===s&&(v=p,c=e.errSchemaPath+"/"+p,i=b,f=g)}else{k=y;if((E="number"==typeof m)&&f){var D="'"+k+"'";r+=" if ( ",f&&(r+=" ("+i+" !== undefined && typeof "+i+" != 'number') || "),r+=" ( "+i+" === undefined || "+m+" "+y+"= "+i+" ? "+u+" "+_+"= "+m+" : "+u+" "+_+" "+i+" ) || "+u+" !== "+u+") { "}else{E&&void 0===s?(w=!0,v=p,c=e.errSchemaPath+"/"+p,i=m,_+="="):(E&&(i=Math[h?"min":"max"](m,s)),m===(!E||i)?(w=!0,v=p,c=e.errSchemaPath+"/"+p,_+="="):(w=!1,k+="="));D="'"+k+"'";r+=" if ( ",f&&(r+=" ("+i+" !== undefined && typeof "+i+" != 'number') || "),r+=" "+u+" "+_+" "+i+" || "+u+" !== "+u+") { "}}v=v||t,(S=S||[]).push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(v||"_limit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { comparison: "+D+", limit: "+i+", exclusive: "+w+" } ",!1!==e.opts.messages&&(r+=" , message: 'should be "+k+" ",r+=f?"' + "+i:i+"'"),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+l:""+s,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";T=r;return r=S.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+T+"]); ":r+=" validate.errors = ["+T+"]; return false; ":r+=" var err = "+T+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } ",d&&(r+=" else { "),r}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r=" ",o=e.level,a=e.dataLevel,s=e.schema[t],l=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(a||""),f=e.opts.$data&&s&&s.$data;f?(r+=" var schema"+o+" = "+e.util.getData(s.$data,a,e.dataPathArr)+"; ",i="schema"+o):i=s,r+="if ( ",f&&(r+=" ("+i+" !== undefined && typeof "+i+" != 'number') || "),r+=" "+u+".length "+("maxItems"==t?">":"<")+" "+i+") { ";var h=t,p=p||[];p.push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(h||"_limitItems")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { limit: "+i+" } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT have ",r+="maxItems"==t?"more":"fewer",r+=" than ",r+=f?"' + "+i+" + '":""+s,r+=" items' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+l:""+s,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";var m=r;return r=p.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+m+"]); ":r+=" validate.errors = ["+m+"]; return false; ":r+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",d&&(r+=" else { "),r}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r=" ",o=e.level,a=e.dataLevel,s=e.schema[t],l=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(a||""),f=e.opts.$data&&s&&s.$data;f?(r+=" var schema"+o+" = "+e.util.getData(s.$data,a,e.dataPathArr)+"; ",i="schema"+o):i=s;var h="maxLength"==t?">":"<";r+="if ( ",f&&(r+=" ("+i+" !== undefined && typeof "+i+" != 'number') || "),!1===e.opts.unicode?r+=" "+u+".length ":r+=" ucs2length("+u+") ",r+=" "+h+" "+i+") { ";var p=t,m=m||[];m.push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(p||"_limitLength")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { limit: "+i+" } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT be ",r+="maxLength"==t?"longer":"shorter",r+=" than ",r+=f?"' + "+i+" + '":""+s,r+=" characters' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+l:""+s,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";var g=r;return r=m.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+g+"]); ":r+=" validate.errors = ["+g+"]; return false; ":r+=" var err = "+g+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",d&&(r+=" else { "),r}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r=" ",o=e.level,a=e.dataLevel,s=e.schema[t],l=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(a||""),f=e.opts.$data&&s&&s.$data;f?(r+=" var schema"+o+" = "+e.util.getData(s.$data,a,e.dataPathArr)+"; ",i="schema"+o):i=s,r+="if ( ",f&&(r+=" ("+i+" !== undefined && typeof "+i+" != 'number') || "),r+=" Object.keys("+u+").length "+("maxProperties"==t?">":"<")+" "+i+") { ";var h=t,p=p||[];p.push(r),r="",!1!==e.createErrors?(r+=" { keyword: '"+(h||"_limitProperties")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { limit: "+i+" } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT have ",r+="maxProperties"==t?"more":"fewer",r+=" than ",r+=f?"' + "+i+" + '":""+s,r+=" properties' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+l:""+s,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";var m=r;return r=p.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+m+"]); ":r+=" validate.errors = ["+m+"]; return false; ":r+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",d&&(r+=" else { "),r}},function(e){e.exports={$schema:"http://json-schema.org/draft-07/schema#",$id:"http://json-schema.org/draft-07/schema#",title:"Core schema meta-schema",definitions:{schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},nonNegativeInteger:{type:"integer",minimum:0},nonNegativeIntegerDefault0:{allOf:[{$ref:"#/definitions/nonNegativeInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},uniqueItems:!0,default:[]}},type:["object","boolean"],properties:{$id:{type:"string",format:"uri-reference"},$schema:{type:"string",format:"uri"},$ref:{type:"string",format:"uri-reference"},$comment:{type:"string"},title:{type:"string"},description:{type:"string"},default:!0,readOnly:{type:"boolean",default:!1},examples:{type:"array",items:!0},multipleOf:{type:"number",exclusiveMinimum:0},maximum:{type:"number"},exclusiveMaximum:{type:"number"},minimum:{type:"number"},exclusiveMinimum:{type:"number"},maxLength:{$ref:"#/definitions/nonNegativeInteger"},minLength:{$ref:"#/definitions/nonNegativeIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{$ref:"#"},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:!0},maxItems:{$ref:"#/definitions/nonNegativeInteger"},minItems:{$ref:"#/definitions/nonNegativeIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},contains:{$ref:"#"},maxProperties:{$ref:"#/definitions/nonNegativeInteger"},minProperties:{$ref:"#/definitions/nonNegativeIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{$ref:"#"},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},propertyNames:{format:"regex"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},propertyNames:{$ref:"#"},const:!0,enum:{type:"array",items:!0,minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},contentMediaType:{type:"string"},contentEncoding:{type:"string"},if:{$ref:"#"},then:{$ref:"#"},else:{$ref:"#"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},default:!0}},function(e,t,n){var i=n(3),r=n(14),o=n(32),a=n(37).time;function s(e,t){var n=t&&t.type||"json";return e=o[n](e,t),t&&t.parse&&l(e,t.parse),e}function l(e,t){var n,o,s,l,c,d,u=e.length;for(t="auto"===t?r.inferAll(e):i.duplicate(t),o=(n=i.keys(t)).map(function(e){var n=t[e];if(n&&0===n.indexOf("date:")){var i=n.split(/:(.+)?/,2)[1];if(!("'"===i[0]&&"'"===i[i.length-1]||'"'===i[0]&&'"'===i[i.length-1]))throw Error("Format pattern must be quoted: "+i);return i=i.slice(1,-1),i=a(i),function(e){return i.parse(e)}}if(!r.parsers[n])throw Error("Illegal format pattern: "+e+":"+n);return r.parsers[n]}),l=0,d=n.length;l<u;++l)for(s=e[l],c=0;c<d;++c)s[n[c]]=o[c](s[n[c]]);r.annotation(e,t)}s.formats=o,e.exports=s},function(e,t,n){var i=n(3),r=n(14),o=n(40),a=e.exports;function s(e,t,n){var i=e&&e.nullh||0,r=o.random.normal(0,1),s=a.mean(t,n),l=a.stdev(t,n)/Math.sqrt(a.count.valid(t,n));if(0===l)return s-i==0?1:0;var c=(s-i)/l;return 2*r.cdf(-Math.abs(c))}function l(e,t,n,r){var o,s=r?t.map(i.$(n)):t,l=r?t.map(i.$(r)):n,c=a.count(s),d=a.count(l),u=Array();if(c!==d)throw Error("Array lengths must match.");for(o=0;o<c;++o)i.isValid(s[o])&&i.isValid(l[o])&&u.push(s[o]-l[o]);return a.z.test(u,e&&e.nullh||0)}function c(e,t,n,r){var s=r?t.map(i.$(n)):t,l=r?t.map(i.$(r)):n,c=a.count.valid(s),d=a.count.valid(l),u=o.random.normal(0,1),f=a.mean(s)-a.mean(l)-(e&&e.nullh||0),h=Math.sqrt(a.variance(s)/c+a.variance(l)/d);if(0===h)return 0===f?1:0;var p=f/h;return 2*u.cdf(-Math.abs(p))}a.unique=function(e,t,n){t=i.$(t),n=n||[];var r,o,a,s={};for(o=0,a=e.length;o<a;++o)(r=t?t(e[o]):e[o])in s||(s[r]=1,n.push(r));return n},a.count=function(e){return e&&e.length||0},a.count.valid=function(e,t){t=i.$(t);var n,r,o,a=0;for(r=0,o=e.length;r<o;++r)n=t?t(e[r]):e[r],i.isValid(n)&&(a+=1);return a},a.count.missing=function(e,t){t=i.$(t);var n,r,o=0;for(n=0,r=e.length;n<r;++n)null==(t?t(e[n]):e[n])&&(o+=1);return o},a.count.distinct=function(e,t){t=i.$(t);var n,r,o,a={},s=0;for(r=0,o=e.length;r<o;++r)(n=t?t(e[r]):e[r])in a||(a[n]=1,s+=1);return s},a.count.map=function(e,t){t=i.$(t);var n,r,o,a={};for(r=0,o=e.length;r<o;++r)a[n=t?t(e[r]):e[r]]=n in a?a[n]+1:1;return a},a.median=function(e,t){return t&&(e=e.map(i.$(t))),e=e.filter(i.isValid).sort(i.cmp),a.quantile(e,.5)},a.quartile=function(e,t){t&&(e=e.map(i.$(t))),e=e.filter(i.isValid).sort(i.cmp);var n=a.quantile;return[n(e,.25),n(e,.5),n(e,.75)]},a.quantile=function(e,t,n){void 0===n&&(n=t,t=i.identity),t=i.$(t);var r=(e.length-1)*n+1,o=Math.floor(r),a=+t(e[o-1]),s=r-o;return s?a+s*(t(e[o])-a):a},a.sum=function(e,t){t=i.$(t);for(var n,r=0,o=0,a=e.length;o<a;++o)n=t?t(e[o]):e[o],i.isValid(n)&&(r+=n);return r},a.mean=function(e,t){t=i.$(t);var n,r,o,a,s=0;for(n=0,o=0,r=e.length;n<r;++n)a=t?t(e[n]):e[n],i.isValid(a)&&(s+=(a-s)/++o);return s},a.mean.geometric=function(e,t){t=i.$(t);var n,r,o,a,s=1;for(a=0,n=0,r=e.length;a<r;++a)if(o=t?t(e[a]):e[a],i.isValid(o)){if(o<=0)throw Error("Geometric mean only defined for positive values.");s*=o,++n}return s=n>0?Math.pow(s,1/n):0},a.mean.harmonic=function(e,t){t=i.$(t);var n,r,o,a,s=0;for(a=0,n=0,r=e.length;a<r;++a)o=t?t(e[a]):e[a],i.isValid(o)&&(s+=1/o,++n);return n/s},a.variance=function(e,t){if(t=i.$(t),!i.isArray(e)||e.length<2)return 0;var n,r,o,a,s=0,l=0;for(r=0,o=0;r<e.length;++r)a=t?t(e[r]):e[r],i.isValid(a)&&(l+=(n=a-s)*(a-(s+=n/++o)));return l/=o-1},a.stdev=function(e,t){return Math.sqrt(a.variance(e,t))},a.modeskew=function(e,t){var n=a.mean(e,t),i=a.median(e,t),r=a.stdev(e,t);return 0===r?0:(n-i)/r},a.min=function(e,t){return a.extent(e,t)[0]},a.max=function(e,t){return a.extent(e,t)[1]},a.extent=function(e,t){t=i.$(t);var n,r,o,a,s=e.length;for(a=0;a<s;++a)if(o=t?t(e[a]):e[a],i.isValid(o)){n=r=o;break}for(;a<s;++a)o=t?t(e[a]):e[a],i.isValid(o)&&(o<n&&(n=o),o>r&&(r=o));return[n,r]},a.extent.index=function(e,t){t=i.$(t);var n,r,o,a,s=-1,l=-1,c=e.length;for(a=0;a<c;++a)if(o=t?t(e[a]):e[a],i.isValid(o)){n=r=o,s=l=a;break}for(;a<c;++a)o=t?t(e[a]):e[a],i.isValid(o)&&(o<n&&(n=o,s=a),o>r&&(r=o,l=a));return[s,l]},a.dot=function(e,t,n){var r,o,a=0;if(n)for(t=i.$(t),n=i.$(n),r=0;r<e.length;++r)(o=t(e[r])*n(e[r]))==o&&(a+=o);else{if(e.length!==t.length)throw Error("Array lengths must match.");for(r=0;r<e.length;++r)(o=e[r]*t[r])==o&&(a+=o)}return a},a.dist=function(e,t,n,r){var o,a,s=i.isFunction(n)||i.isString(n),l=e,c=s?e:t,d=s?r:n,u=2===d||null==d,f=e.length,h=0;for(s&&(t=i.$(t),n=i.$(n)),a=0;a<f;++a)o=s?t(l[a])-n(c[a]):l[a]-c[a],h+=u?o*o:Math.pow(Math.abs(o),d);return u?Math.sqrt(h):Math.pow(h,1/d)},a.cohensd=function(e,t,n){var r=n?e.map(i.$(t)):e,o=n?e.map(i.$(n)):t,s=a.mean(r),l=a.mean(o),c=a.count.valid(r),d=a.count.valid(o);if(c+d-2<=0)return 0;var u=a.variance(r),f=a.variance(o),h=Math.sqrt(((c-1)*u+(d-1)*f)/(c+d-2));return 0===h?0:(s-l)/h},a.covariance=function(e,t,n){var r,o,s,l,c,d=n?e.map(i.$(t)):e,u=n?e.map(i.$(n)):t,f=d.length,h=a.mean(d),p=a.mean(u),m=0,g=0;if(f!==u.length)throw Error("Input lengths must match.");for(r=0;r<f;++r)if(o=d[r],l=i.isValid(o),s=u[r],c=i.isValid(s),l&&c)m+=(o-h)*(s-p),++g;else if(l||c)throw Error("Valid values must align.");return m/(g-1)},a.rank=function(e,t){t=i.$(t)||i.identity;var n,r,o,a=e.map(function(e,n){return{idx:n,val:t(e)}}).sort(i.comparator("val")),s=e.length,l=Array(s),c=-1,d={};for(n=0;n<s;++n){if(r=a[n].val,c<0&&d===r)c=n-1;else if(c>-1&&d!==r){for(o=1+(n-1+c)/2;c<n;++c)l[a[c].idx]=o;c=-1}l[a[n].idx]=n+1,d=r}if(c>-1)for(o=1+(s-1+c)/2;c<s;++c)l[a[c].idx]=o;return l},a.cor=function(e,t,n){var r=n;n=r?e.map(i.$(n)):t,t=r?e.map(i.$(t)):e;var o=a.dot(t,n),s=a.mean(t),l=a.mean(n),c=a.stdev(t),d=a.stdev(n),u=e.length;return(o-u*s*l)/((u-1)*c*d)},a.cor.rank=function(e,t,n){var i,r,o,s=n?a.rank(e,t):a.rank(e),l=n?a.rank(e,n):a.rank(t),c=e.length;for(i=0,r=0;i<c;++i)r+=(o=s[i]-l[i])*o;return 1-6*r/(c*(c*c-1))},a.cor.dist=function(e,t,n){var r,o,s,l,c=n?e.map(i.$(t)):e,d=n?e.map(i.$(n)):t,u=a.dist.mat(c),f=a.dist.mat(d),h=u.length;for(r=0,o=0,s=0,l=0;r<h;++r)o+=u[r]*u[r],s+=f[r]*f[r],l+=u[r]*f[r];return Math.sqrt(l/Math.sqrt(o*s))},a.linearRegression=function(e,t,n){var r,o,s=n?e.map(i.$(t)):e,l=n?e.map(i.$(n)):t,c=s.length,d=a.covariance(s,l),u=a.stdev(s),f=a.stdev(l),h=d/(u*u),p=a.mean(l)-h*a.mean(s),m={slope:h,intercept:p,R:d/(u*f),rss:0};for(o=0;o<c;++o)i.isValid(s[o])&&i.isValid(l[o])&&(r=h*s[o]+p-l[o],m.rss+=r*r);return m},a.bootstrap={},a.bootstrap.ci=function(e,t,n,r,s){var l,c,d,u,f,h,p;for(i.isFunction(t)||i.isString(t)?(l=e.map(i.$(t)),c=n,d=r,u=s):(l=e,c=t,d=n,u=r),c=c?+c:1e3,d=d||.05,f=o.random.bootstrap(l,u),p=0,h=Array(c);p<c;++p)h[p]=a.mean(f.samples(l.length));return h.sort(i.numcmp),[a.quantile(h,d/2),a.quantile(h,1-d/2)]},a.z={},a.z.ci=function(e,t,n){var r=e,s=t;(i.isFunction(t)||i.isString(t))&&(r=e.map(i.$(t)),s=n);var l=.05===(s=s||.05)?1.96:o.random.normal(0,1).icdf(1-s/2),c=a.mean(r),d=a.stdev(r)/Math.sqrt(a.count.valid(r));return[c-l*d,c+l*d]},a.z.test=function(e,t,n,r){return i.isFunction(n)||i.isString(n)?(r&&r.paired?l:c)(r,e,t,n):i.isArray(t)?(n&&n.paired?l:c)(n,e,t):i.isFunction(t)||i.isString(t)?s(n,e,t):s(t,e)},a.dist.mat=function(e){var t,n,i,r=e.length,a=r*r,s=Array(a),l=o.zeros(r),c=0;for(n=0;n<r;++n)for(s[n*r+n]=0,i=n+1;i<r;++i)s[n*r+i]=t=Math.abs(e[n]-e[i]),s[i*r+n]=t,l[n]+=t,l[i]+=t;for(n=0;n<r;++n)c+=l[n],l[n]/=r;for(c/=a,n=0;n<r;++n)for(i=n;i<r;++i)s[n*r+i]+=c-l[n]-l[i],s[i*r+n]=s[n*r+i];return s},a.entropy=function(e,t){t=i.$(t);var n,r,o=0,a=0,s=e.length;for(n=0;n<s;++n)o+=t?t(e[n]):e[n];if(0===o)return 0;for(n=0;n<s;++n)(r=(t?t(e[n]):e[n])/o)&&(a+=r*Math.log(r));return-a/Math.LN2},a.mutual=function(e,t,n,r){var o,a,s,l=r?e.map(i.$(t)):e,c=r?e.map(i.$(n)):t,d=r?e.map(i.$(r)):n,u={},f={},h=d.length,p=0,m=0,g=0;for(s=0;s<h;++s)u[l[s]]=0,f[c[s]]=0;for(s=0;s<h;++s)u[l[s]]+=d[s],f[c[s]]+=d[s],p+=d[s];for(a=1/(p*Math.LN2),s=0;s<h;++s)0!==d[s]&&(o=p*d[s]/(u[l[s]]*f[c[s]]),m+=d[s]*a*Math.log(o),g+=d[s]*a*Math.log(d[s]/p));return[m,1+m/g]},a.mutual.info=function(e,t,n,i){return a.mutual(e,t,n,i)[0]},a.mutual.dist=function(e,t,n,i){return a.mutual(e,t,n,i)[1]},a.profile=function(e,t){var n,o,s,l,c,d=0,u=0,f=0,h=0,p=null,m=null,g=0,y=[],_={};for(s=0;s<e.length;++s)_[l=t?t(e[s]):e[s]]=l in _?_[l]+1:(h+=1,1),null==l?++f:i.isValid(l)&&(c="string"==typeof l?l.length:l,(null===p||c<p)&&(p=c),(null===m||c>m)&&(m=c),g+=(n=c-d)*(c-(d+=n/++u)),y.push(c));return g/=u-1,o=Math.sqrt(g),y.sort(i.cmp),{type:r(e,t),unique:_,count:e.length,valid:u,missing:f,distinct:h,min:p,max:m,mean:d,stdev:o,median:l=a.quantile(y,.5),q1:a.quantile(y,.25),q3:a.quantile(y,.75),modeskew:0===o?0:(d-l)/o}},a.summary=function(e,t){var n=(t=t||i.keys(e[0])).map(function(t){var n=a.profile(e,i.$(t));return n.field=t,n});return n.__summary__=!0,n}},function(e,t,n){"use strict";var i=n(42),r=n(9),o=n(46),a=n(16),s=n(17),l=n(47),c=n(48),d=n(69),u=n(4);e.exports=y,y.prototype.validate=function(e,t){var n;if("string"==typeof e){if(!(n=this.getSchema(e)))throw new Error('no schema with key or ref "'+e+'"')}else{var i=this._addSchema(e);n=i.validate||this._compile(i)}var r=n(t);!0!==n.$async&&(this.errors=n.errors);return r},y.prototype.compile=function(e,t){var n=this._addSchema(e,void 0,t);return n.validate||this._compile(n)},y.prototype.addSchema=function(e,t,n,i){if(Array.isArray(e)){for(var o=0;o<e.length;o++)this.addSchema(e[o],void 0,n,i);return this}var a=this._getId(e);if(void 0!==a&&"string"!=typeof a)throw new Error("schema id must be string");return E(this,t=r.normalizeId(t||a)),this._schemas[t]=this._addSchema(e,n,i,!0),this},y.prototype.addMetaSchema=function(e,t,n){return this.addSchema(e,t,n,!0),this},y.prototype.validateSchema=function(e,t){var n=e.$schema;if(void 0!==n&&"string"!=typeof n)throw new Error("$schema must be a string");if(!(n=n||this._opts.defaultMeta||function(e){var t=e._opts.meta;return e._opts.defaultMeta="object"==typeof t?e._getId(t)||t:e.getSchema(p)?p:void 0,e._opts.defaultMeta}(this)))return this.logger.warn("meta-schema not available"),this.errors=null,!0;var i=this.validate(n,e);if(!i&&t){var r="schema is invalid: "+this.errorsText();if("log"!=this._opts.validateSchema)throw new Error(r);this.logger.error(r)}return i},y.prototype.getSchema=function(e){var t=_(this,e);switch(typeof t){case"object":return t.validate||this._compile(t);case"string":return this.getSchema(t);case"undefined":return function(e,t){var n=r.schema.call(e,{schema:{}},t);if(n){var o=n.schema,s=n.root,l=n.baseId,c=i.call(e,o,s,void 0,l);return e._fragments[t]=new a({ref:t,fragment:!0,schema:o,root:s,baseId:l,validate:c}),c}}(this,e)}},y.prototype.removeSchema=function(e){if(e instanceof RegExp)return v(this,this._schemas,e),v(this,this._refs,e),this;switch(typeof e){case"undefined":return v(this,this._schemas),v(this,this._refs),this._cache.clear(),this;case"string":var t=_(this,e);return t&&this._cache.del(t.cacheKey),delete this._schemas[e],delete this._refs[e],this;case"object":var n=this._opts.serialize,i=n?n(e):e;this._cache.del(i);var o=this._getId(e);o&&(o=r.normalizeId(o),delete this._schemas[o],delete this._refs[o])}return this},y.prototype.addFormat=function(e,t){"string"==typeof t&&(t=new RegExp(t));return this._formats[e]=t,this},y.prototype.errorsText=function(e,t){if(!(e=e||this.errors))return"No errors";for(var n=void 0===(t=t||{}).separator?", ":t.separator,i=void 0===t.dataVar?"data":t.dataVar,r="",o=0;o<e.length;o++){var a=e[o];a&&(r+=i+a.dataPath+" "+a.message+n)}return r.slice(0,-n.length)},y.prototype._addSchema=function(e,t,n,i){if("object"!=typeof e&&"boolean"!=typeof e)throw new Error("schema should be object or boolean");var o=this._opts.serialize,s=o?o(e):e,l=this._cache.get(s);if(l)return l;i=i||!1!==this._opts.addUsedSchema;var c=r.normalizeId(this._getId(e));c&&i&&E(this,c);var d,u=!1!==this._opts.validateSchema&&!t;u&&!(d=c&&c==r.normalizeId(e.$schema))&&this.validateSchema(e,!0);var f=r.ids.call(this,e),h=new a({id:c,schema:e,localRefs:f,cacheKey:s,meta:n});"#"!=c[0]&&i&&(this._refs[c]=h);this._cache.put(s,h),u&&d&&this.validateSchema(e,!0);return h},y.prototype._compile=function(e,t){if(e.compiling)return e.validate=o,o.schema=e.schema,o.errors=null,o.root=t||o,!0===e.schema.$async&&(o.$async=!0),o;var n,r;e.compiling=!0,e.meta&&(n=this._opts,this._opts=this._metaOpts);try{r=i.call(this,e.schema,t,e.localRefs)}catch(t){throw delete e.validate,t}finally{e.compiling=!1,e.meta&&(this._opts=n)}return e.validate=r,e.refs=r.refs,e.refVal=r.refVal,e.root=r.root,r;function o(){var t=e.validate,n=t.apply(this,arguments);return o.errors=t.errors,n}},y.prototype.compileAsync=n(70);var f=n(71);y.prototype.addKeyword=f.add,y.prototype.getKeyword=f.get,y.prototype.removeKeyword=f.remove,y.prototype.validateKeyword=f.validate;var h=n(11);y.ValidationError=h.Validation,y.MissingRefError=h.MissingRef,y.$dataMetaSchema=d;var p="http://json-schema.org/draft-07/schema",m=["removeAdditional","useDefaults","coerceTypes","strictDefaults"],g=["/properties"];function y(e){if(!(this instanceof y))return new y(e);e=this._opts=u.copy(e)||{},function(e){var t=e._opts.logger;if(!1===t)e.logger={log:k,warn:k,error:k};else{if(void 0===t&&(t=console),!("object"==typeof t&&t.log&&t.warn&&t.error))throw new Error("logger must implement log, warn and error methods");e.logger=t}}(this),this._schemas={},this._refs={},this._fragments={},this._formats=l(e.format),this._cache=e.cache||new o,this._loadingSchemas={},this._compilations=[],this.RULES=c(),this._getId=function(e){switch(e.schemaId){case"auto":return x;case"id":return b;default:return w}}(e),e.loopRequired=e.loopRequired||1/0,"property"==e.errorDataPath&&(e._errorDataPathProperty=!0),void 0===e.serialize&&(e.serialize=s),this._metaOpts=function(e){for(var t=u.copy(e._opts),n=0;n<m.length;n++)delete t[m[n]];return t}(this),e.formats&&function(e){for(var t in e._opts.formats){var n=e._opts.formats[t];e.addFormat(t,n)}}(this),function(e){var t;e._opts.$data&&(t=n(73),e.addMetaSchema(t,t.$id,!0));if(!1===e._opts.meta)return;var i=n(23);e._opts.$data&&(i=d(i,g));e.addMetaSchema(i,p,!0),e._refs["http://json-schema.org/schema"]=p}(this),"object"==typeof e.meta&&this.addMetaSchema(e.meta),e.nullable&&this.addKeyword("nullable",{metaSchema:{type:"boolean"}}),function(e){var t=e._opts.schemas;if(!t)return;if(Array.isArray(t))e.addSchema(t);else for(var n in t)e.addSchema(t[n],n)}(this)}function _(e,t){return t=r.normalizeId(t),e._schemas[t]||e._refs[t]||e._fragments[t]}function v(e,t,n){for(var i in t){var r=t[i];r.meta||n&&!n.test(i)||(e._cache.del(r.cacheKey),delete t[i])}}function b(e){return e.$id&&this.logger.warn("schema $id ignored",e.$id),e.id}function w(e){return e.id&&this.logger.warn("schema id ignored",e.id),e.$id}function x(e){if(e.$id&&e.id&&e.$id!=e.id)throw new Error("schema $id is different from id");return e.$id||e.id}function E(e,t){if(e._schemas[t]||e._refs[t])throw new Error('schema with key or id "'+t+'" already exists')}function k(){}},function(e){e.exports={$ref:"#/definitions/TopLevelSpec",$schema:"http://json-schema.org/draft-06/schema#",definitions:{Aggregate:{anyOf:[{$ref:"#/definitions/AggregateOp"},{$ref:"#/definitions/ArgmaxDef"},{$ref:"#/definitions/ArgminDef"}]},AggregateOp:{enum:["argmax","argmin","average","count","distinct","max","mean","median","min","missing","q1","q3","ci0","ci1","stderr","stdev","stdevp","sum","valid","values","variance","variancep"],type:"string"},AggregateTransform:{additionalProperties:!1,properties:{aggregate:{description:"Array of objects that define fields to aggregate.",items:{$ref:"#/definitions/AggregatedFieldDef"},type:"array"},groupby:{description:"The data fields to group by. If not specified, a single group containing all data objects will be used.",items:{type:"string"},type:"array"}},required:["aggregate"],type:"object"},AggregatedFieldDef:{additionalProperties:!1,properties:{as:{description:"The output field names to use for each aggregated field.",type:"string"},field:{description:'The data field for which to compute aggregate function. This is required for all aggregation operations except `"count"`.',type:"string"},op:{$ref:"#/definitions/AggregateOp",description:"The aggregation operation to apply to the fields (e.g., sum, average or count).\nSee the [full list of supported aggregation operations](https://vega.github.io/vega-lite/docs/aggregate.html#ops)\nfor more information."}},required:["op","as"],type:"object"},Align:{enum:["left","center","right"],type:"string"},AnyMark:{anyOf:[{$ref:"#/definitions/CompositeMark"},{$ref:"#/definitions/CompositeMarkDef"},{$ref:"#/definitions/Mark"},{$ref:"#/definitions/MarkDef"}]},AreaConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},line:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"}],description:"A flag for overlaying line on top of area marks, or an object defining the properties of the overlayed lines.\n\n- If this value is an empty object (`{}`) or `true`, lines with default properties will be used.\n\n- If this value is `false`, no lines would be automatically added to area marks.\n\n__Default value:__ `false`."},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},point:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"},{enum:["transparent"],type:"string"}],description:'A flag for overlaying points on top of line or area marks, or an object defining the properties of the overlayed points.\n\n- If this property is `"transparent"`, transparent points will be used (for enhancing tooltips and selections).\n\n- If this property is an empty object (`{}`) or `true`, filled points with default properties will be used.\n\n- If this property is `false`, no points would be automatically added to line or area marks.\n\n__Default value:__ `false`.'},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"}},type:"object"},ArgmaxDef:{additionalProperties:!1,properties:{argmax:{type:"string"}},required:["argmax"],type:"object"},ArgminDef:{additionalProperties:!1,properties:{argmin:{type:"string"}},required:["argmin"],type:"object"},AutoSizeParams:{additionalProperties:!1,properties:{contains:{description:'Determines how size calculation should be performed, one of `"content"` or `"padding"`. The default setting (`"content"`) interprets the width and height settings as the data rectangle (plotting) dimensions, to which padding is then added. In contrast, the `"padding"` setting includes the padding within the view size calculations, such that the width and height settings indicate the **total** intended size of the view.\n\n__Default value__: `"content"`',enum:["content","padding"],type:"string"},resize:{description:"A boolean flag indicating if autosize layout should be re-calculated on every view update.\n\n__Default value__: `false`",type:"boolean"},type:{$ref:"#/definitions/AutosizeType",description:'The sizing format type. One of `"pad"`, `"fit"` or `"none"`. See the [autosize type](https://vega.github.io/vega-lite/docs/size.html#autosize) documentation for descriptions of each.\n\n__Default value__: `"pad"`'}},type:"object"},AutosizeType:{enum:["pad","fit","none"],type:"string"},Axis:{additionalProperties:!1,properties:{bandPosition:{description:"An interpolation fraction indicating where, for `band` scales, axis ticks should be positioned. A value of `0` places ticks at the left edge of their bands. A value of `0.5` places ticks in the middle of their bands.\n\n  __Default value:__ `0.5`",type:"number"},domain:{description:"A boolean flag indicating if the domain (the axis baseline) should be included as part of the axis.\n\n__Default value:__ `true`",type:"boolean"},domainColor:{$ref:"#/definitions/Color",description:'Color of axis domain line.\n\n__Default value:__ `"gray"`.'},domainDash:{description:"An array of alternating [stroke, space] lengths for dashed domain lines.",items:{type:"number"},type:"array"},domainDashOffset:{description:"The pixel offset at which to start drawing with the domain dash array.",type:"number"},domainOpacity:{description:"Opacity of the axis domain line.",type:"number"},domainWidth:{description:"Stroke width of axis domain line\n\n__Default value:__ `1`",type:"number"},format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},grid:{description:"A boolean flag indicating if grid lines should be included as part of the axis\n\n__Default value:__ `true` for [continuous scales](https://vega.github.io/vega-lite/docs/scale.html#continuous) that are not binned; otherwise, `false`.",type:"boolean"},gridColor:{$ref:"#/definitions/Color",description:'Color of gridlines.\n\n__Default value:__ `"lightGray"`.'},gridDash:{description:"An array of alternating [stroke, space] lengths for dashed grid lines.",items:{type:"number"},type:"array"},gridDashOffset:{description:"The pixel offset at which to start drawing with the grid dash array.",type:"number"},gridOpacity:{description:"The stroke opacity of grid (value between [0,1])\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},gridWidth:{description:"The grid width, in pixels.\n\n__Default value:__ `1`",minimum:0,type:"number"},labelAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis tick labels, overriding the default setting for the current axis orientation."},labelAngle:{description:"The rotation angle of the axis labels.\n\n__Default value:__ `-90` for nominal and ordinal fields; `0` otherwise.",maximum:360,minimum:-360,type:"number"},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline of axis tick labels, overriding the default setting for the current axis orientation. Can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},labelBound:{description:"Indicates if labels should be hidden if they exceed the axis range. If `false` (the default) no bounds overlap analysis is performed. If `true`, labels will be hidden if they exceed the axis range by more than 1 pixel. If this property is a number, it specifies the pixel tolerance: the maximum amount by which a label bounding box may exceed the axis range.\n\n__Default value:__ `false`.",type:["number","boolean"]},labelColor:{$ref:"#/definitions/Color",description:"The color of the tick label, can be in hex color code or regular color name."},labelFlush:{description:"Indicates if the first and last axis labels should be aligned flush with the scale range. Flush alignment for a horizontal axis will left-align the first label and right-align the last label. For vertical axes, bottom and top text baselines are applied instead. If this property is a number, it also indicates the number of pixels by which to offset the first and last labels; for example, a value of 2 will flush-align the first and last labels and also push them 2 pixels outward from the center of the axis. The additional adjustment can sometimes help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `true` for axis of a continuous x-scale. Otherwise, `false`.",type:["boolean","number"]},labelFlushOffset:{description:"Indicates the number of pixels by which to offset flush-adjusted labels. For example, a value of `2` will push flush-adjusted labels 2 pixels outward from the center of the axis. Offsets can help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `0`.",type:"number"},labelFont:{description:"The font of the tick label.",type:"string"},labelFontSize:{description:"The font size of the label, in pixels.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"Font weight of axis tick labels."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `180`",type:"number"},labelOpacity:{description:"The opacity of the labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of axis labels. If `false` (the default), no overlap reduction is attempted. If set to `true` or `"parity"`, a strategy of removing every other label is used (this works well for standard linear axes). If set to `"greedy"`, a linear scan of the labels is performed, removing any labels that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `true` for non-nominal fields with non-log scales; `"greedy"` for log scales; otherwise `false`.'},labelPadding:{description:"The padding, in pixels, between axis and text labels.\n\n__Default value:__ `2`",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},labels:{description:"A boolean flag indicating if labels should be included as part of the axis.\n\n__Default value:__ `true`.",type:"boolean"},maxExtent:{description:"The maximum extent in pixels that axis ticks and labels should use. This determines a maximum offset value for axis titles.\n\n__Default value:__ `undefined`.",type:"number"},minExtent:{description:"The minimum extent in pixels that axis ticks and labels should use. This determines a minimum offset value for axis titles.\n\n__Default value:__ `30` for y-axis; `undefined` for x-axis.",type:"number"},offset:{description:"The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle.\n\n__Default value:__ derived from the [axis config](https://vega.github.io/vega-lite/docs/config.html#facet-scale-config)'s `offset` (`0` by default)",type:"number"},orient:{$ref:"#/definitions/AxisOrient",description:'The orientation of the axis. One of `"top"`, `"bottom"`, `"left"` or `"right"`. The orientation can be used to further specialize the axis type (e.g., a y-axis oriented towards the right edge of the chart).\n\n__Default value:__ `"bottom"` for x-axes and `"left"` for y-axes.'},position:{description:"The anchor position of the axis in pixels. For x-axes with top or bottom orientation, this sets the axis group x coordinate. For y-axes with left or right orientation, this sets the axis group y coordinate.\n\n__Default value__: `0`",type:"number"},tickColor:{$ref:"#/definitions/Color",description:'The color of the axis\'s tick.\n\n__Default value:__ `"gray"`'},tickCount:{description:'A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are "nice" (multiples of 2, 5, 10) and lie within the underlying scale\'s range.',type:"number"},tickDash:{description:"An array of alternating [stroke, space] lengths for dashed tick mark lines.",items:{type:"number"},type:"array"},tickDashOffset:{description:"The pixel offset at which to start drawing with the tick mark dash array.",type:"number"},tickExtra:{description:'Boolean flag indicating if an extra axis tick should be added for the initial position of the axis. This flag is useful for styling axes for `band` scales such that ticks are placed on band boundaries rather in the middle of a band. Use in conjunction with `"bandPosition": 1` and an axis `"padding"` value of `0`.',type:"boolean"},tickMinStep:{description:"The minimum desired step between axis ticks, in terms of scale domain values. For example, a value of `1` indicates that ticks should not be less than 1 unit apart. If `tickMinStep` is specified, the `tickCount` value will be adjusted, if necessary, to enforce the minimum step value.\n\n__Default value__: `undefined`",type:"number"},tickOffset:{description:"Position offset in pixels to apply to ticks, labels, and gridlines.",type:"number"},tickOpacity:{description:"Opacity of the ticks.",type:"number"},tickRound:{description:"Boolean flag indicating if pixel position values should be rounded to the nearest integer.\n\n__Default value:__ `true`",type:"boolean"},tickSize:{description:"The size in pixels of axis ticks.\n\n__Default value:__ `5`",minimum:0,type:"number"},tickWidth:{description:"The width, in pixels, of ticks.\n\n__Default value:__ `1`",minimum:0,type:"number"},ticks:{description:"Boolean value that determines whether the axis should include ticks.\n\n__Default value:__ `true`",type:"boolean"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},titleAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis titles."},titleAnchor:{$ref:"#/definitions/TitleAnchor",description:"Text anchor position for placing axis titles."},titleAngle:{description:"Angle in degrees of axis titles.",type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:"Vertical text baseline for axis titles."},titleColor:{$ref:"#/definitions/Color",description:"Color of the title, can be in hex color code or regular color name."},titleFont:{description:'Font of the title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the title.",minimum:0,type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the axis title.",type:"number"},titlePadding:{description:"The padding, in pixels, between title and axis.",type:"number"},titleX:{description:"X-coordinate of the axis title relative to the axis group.",type:"number"},titleY:{description:"Y-coordinate of the axis title relative to the axis group.",type:"number"},values:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}],description:"Explicitly set the visible axis tick values."},zindex:{description:'A non-positive integer indicating z-index of the axis.\nIf zindex is 0, axes should be drawn behind all chart elements.\nTo put them in front, use `"zindex = 1"`.\n\n__Default value:__ `1` (in front of the marks) for actual axis and `0` (behind the marks) for grids.',minimum:0,type:"number"}},type:"object"},AxisConfig:{additionalProperties:!1,properties:{bandPosition:{description:"An interpolation fraction indicating where, for `band` scales, axis ticks should be positioned. A value of `0` places ticks at the left edge of their bands. A value of `0.5` places ticks in the middle of their bands.\n\n  __Default value:__ `0.5`",type:"number"},domain:{description:"A boolean flag indicating if the domain (the axis baseline) should be included as part of the axis.\n\n__Default value:__ `true`",type:"boolean"},domainColor:{$ref:"#/definitions/Color",description:'Color of axis domain line.\n\n__Default value:__ `"gray"`.'},domainDash:{description:"An array of alternating [stroke, space] lengths for dashed domain lines.",items:{type:"number"},type:"array"},domainDashOffset:{description:"The pixel offset at which to start drawing with the domain dash array.",type:"number"},domainOpacity:{description:"Opacity of the axis domain line.",type:"number"},domainWidth:{description:"Stroke width of axis domain line\n\n__Default value:__ `1`",type:"number"},grid:{description:"A boolean flag indicating if grid lines should be included as part of the axis\n\n__Default value:__ `true` for [continuous scales](https://vega.github.io/vega-lite/docs/scale.html#continuous) that are not binned; otherwise, `false`.",type:"boolean"},gridColor:{$ref:"#/definitions/Color",description:'Color of gridlines.\n\n__Default value:__ `"lightGray"`.'},gridDash:{description:"An array of alternating [stroke, space] lengths for dashed grid lines.",items:{type:"number"},type:"array"},gridDashOffset:{description:"The pixel offset at which to start drawing with the grid dash array.",type:"number"},gridOpacity:{description:"The stroke opacity of grid (value between [0,1])\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},gridWidth:{description:"The grid width, in pixels.\n\n__Default value:__ `1`",minimum:0,type:"number"},labelAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis tick labels, overriding the default setting for the current axis orientation."},labelAngle:{description:"The rotation angle of the axis labels.\n\n__Default value:__ `-90` for nominal and ordinal fields; `0` otherwise.",maximum:360,minimum:-360,type:"number"},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline of axis tick labels, overriding the default setting for the current axis orientation. Can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},labelBound:{description:"Indicates if labels should be hidden if they exceed the axis range. If `false` (the default) no bounds overlap analysis is performed. If `true`, labels will be hidden if they exceed the axis range by more than 1 pixel. If this property is a number, it specifies the pixel tolerance: the maximum amount by which a label bounding box may exceed the axis range.\n\n__Default value:__ `false`.",type:["number","boolean"]},labelColor:{$ref:"#/definitions/Color",description:"The color of the tick label, can be in hex color code or regular color name."},labelFlush:{description:"Indicates if the first and last axis labels should be aligned flush with the scale range. Flush alignment for a horizontal axis will left-align the first label and right-align the last label. For vertical axes, bottom and top text baselines are applied instead. If this property is a number, it also indicates the number of pixels by which to offset the first and last labels; for example, a value of 2 will flush-align the first and last labels and also push them 2 pixels outward from the center of the axis. The additional adjustment can sometimes help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `true` for axis of a continuous x-scale. Otherwise, `false`.",type:["boolean","number"]},labelFlushOffset:{description:"Indicates the number of pixels by which to offset flush-adjusted labels. For example, a value of `2` will push flush-adjusted labels 2 pixels outward from the center of the axis. Offsets can help the labels better visually group with corresponding axis ticks.\n\n__Default value:__ `0`.",type:"number"},labelFont:{description:"The font of the tick label.",type:"string"},labelFontSize:{description:"The font size of the label, in pixels.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"Font weight of axis tick labels."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `180`",type:"number"},labelOpacity:{description:"The opacity of the labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of axis labels. If `false` (the default), no overlap reduction is attempted. If set to `true` or `"parity"`, a strategy of removing every other label is used (this works well for standard linear axes). If set to `"greedy"`, a linear scan of the labels is performed, removing any labels that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `true` for non-nominal fields with non-log scales; `"greedy"` for log scales; otherwise `false`.'},labelPadding:{description:"The padding, in pixels, between axis and text labels.\n\n__Default value:__ `2`",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},labels:{description:"A boolean flag indicating if labels should be included as part of the axis.\n\n__Default value:__ `true`.",type:"boolean"},maxExtent:{description:"The maximum extent in pixels that axis ticks and labels should use. This determines a maximum offset value for axis titles.\n\n__Default value:__ `undefined`.",type:"number"},minExtent:{description:"The minimum extent in pixels that axis ticks and labels should use. This determines a minimum offset value for axis titles.\n\n__Default value:__ `30` for y-axis; `undefined` for x-axis.",type:"number"},orient:{$ref:"#/definitions/AxisOrient",description:'The orientation of the axis. One of `"top"`, `"bottom"`, `"left"` or `"right"`. The orientation can be used to further specialize the axis type (e.g., a y-axis oriented towards the right edge of the chart).\n\n__Default value:__ `"bottom"` for x-axes and `"left"` for y-axes.'},shortTimeLabels:{description:"Whether month names and weekday names should be abbreviated.\n\n__Default value:__  `false`",type:"boolean"},tickColor:{$ref:"#/definitions/Color",description:'The color of the axis\'s tick.\n\n__Default value:__ `"gray"`'},tickDash:{description:"An array of alternating [stroke, space] lengths for dashed tick mark lines.",items:{type:"number"},type:"array"},tickDashOffset:{description:"The pixel offset at which to start drawing with the tick mark dash array.",type:"number"},tickExtra:{description:'Boolean flag indicating if an extra axis tick should be added for the initial position of the axis. This flag is useful for styling axes for `band` scales such that ticks are placed on band boundaries rather in the middle of a band. Use in conjunction with `"bandPosition": 1` and an axis `"padding"` value of `0`.',type:"boolean"},tickOffset:{description:"Position offset in pixels to apply to ticks, labels, and gridlines.",type:"number"},tickOpacity:{description:"Opacity of the ticks.",type:"number"},tickRound:{description:"Boolean flag indicating if pixel position values should be rounded to the nearest integer.\n\n__Default value:__ `true`",type:"boolean"},tickSize:{description:"The size in pixels of axis ticks.\n\n__Default value:__ `5`",minimum:0,type:"number"},tickWidth:{description:"The width, in pixels, of ticks.\n\n__Default value:__ `1`",minimum:0,type:"number"},ticks:{description:"Boolean value that determines whether the axis should include ticks.\n\n__Default value:__ `true`",type:"boolean"},title:{description:"Set to null to disable title for the axis, legend, or header.",type:"null"},titleAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of axis titles."},titleAnchor:{$ref:"#/definitions/TitleAnchor",description:"Text anchor position for placing axis titles."},titleAngle:{description:"Angle in degrees of axis titles.",type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:"Vertical text baseline for axis titles."},titleColor:{$ref:"#/definitions/Color",description:"Color of the title, can be in hex color code or regular color name."},titleFont:{description:'Font of the title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the title.",minimum:0,type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"Font style of the title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the axis title.",type:"number"},titlePadding:{description:"The padding, in pixels, between title and axis.",type:"number"},titleX:{description:"X-coordinate of the axis title relative to the axis group.",type:"number"},titleY:{description:"Y-coordinate of the axis title relative to the axis group.",type:"number"}},type:"object"},AxisOrient:{enum:["top","bottom","left","right"],type:"string"},AxisResolveMap:{additionalProperties:!1,properties:{x:{$ref:"#/definitions/ResolveMode"},y:{$ref:"#/definitions/ResolveMode"}},type:"object"},BarConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},binSpacing:{description:"Offset between bars for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).\n\n__Default value:__ `1`",minimum:0,type:"number"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},continuousBandSize:{description:"The default size of the bars on continuous scales.\n\n__Default value:__ `5`",minimum:0,type:"number"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},discreteBandSize:{description:"The default size of the bars with discrete dimensions.  If unspecified, the default size is  `bandSize-1`,\nwhich provides 1 pixel offset between bars.",minimum:0,type:"number"},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"}},type:"object"},BaseBinding:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},name:{type:"string"},type:{type:"string"}},type:"object"},BaseLegendLayout:{additionalProperties:!1,properties:{anchor:{$ref:"#/definitions/TitleAnchor",description:"The anchor point for legend orient group layout."},bounds:{$ref:"#/definitions/LayoutBounds",description:"The bounds calculation to use for legend orient group layout."},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/SignalRef"}],description:"A flag to center legends within a shared orient group."},direction:{anyOf:[{$ref:"#/definitions/Orientation"},{$ref:"#/definitions/SignalRef"}],description:"The layout direction for legend orient group layout."},margin:{anyOf:[{type:"number"},{$ref:"#/definitions/SignalRef"}],description:"The pixel margin between legends within a orient group."},offset:{anyOf:[{type:"number"},{$ref:"#/definitions/SignalRef"}],description:"The pixel offset from the chart body for a legend orient group."}},type:"object"},BaseMarkConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"The pixel area each the point/circle/square.\nFor example: in the case of circles, the radius is determined in part by the square root of the size value.\n\n__Default value:__ `30`",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{description:"The tooltip text to show upon mouse hover."},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"}},type:"object"},BaseTitleConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align"},anchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.'},angle:{description:"Angle in degrees of title text.",type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for title text. One of `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},color:{$ref:"#/definitions/Color",description:"Text color for title text."},dx:{description:"Delta offset for title text x-coordinate.",type:"number"},dy:{description:"Delta offset for title text y-coordinate.",type:"number"},font:{description:"Font name for title text.",type:"string"},fontSize:{description:"Font size in pixels for title text.\n\n__Default value:__ `10`.",minimum:0,type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:"Font style for title text."},fontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight for title text.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},frame:{$ref:"#/definitions/TitleFrame",description:'The reference frame for the anchor position, one of `"bounds"` (to anchor relative to the full bounding box) or `"group"` (to anchor relative to the group width or height).'},limit:{description:"The maximum allowed length in pixels of legend labels.",minimum:0,type:"number"},offset:{description:"The orthogonal offset in pixels by which to displace the title from its position along the edge of the chart.",type:"number"},orient:{$ref:"#/definitions/TitleOrient",description:'Default title orientation (`"top"`, `"bottom"`, `"left"`, or `"right"`)'}},type:"object"},Baseline:{enum:["top","middle","bottom"],type:"string"},BinParams:{additionalProperties:!1,description:"Binning properties or boolean flag for determining whether to bin data or not.",properties:{anchor:{description:"A value in the binned domain at which to anchor the bins, shifting the bin boundaries if necessary to ensure that a boundary aligns with the anchor value.\n\n__Default Value:__ the minimum bin extent value",type:"number"},base:{description:"The number base to use for automatic bin determination (default is base 10).\n\n__Default value:__ `10`",type:"number"},binned:{description:"When set to true, Vega-Lite treats the input data as already binned.",type:"boolean"},divide:{description:"Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.\n\n__Default value:__ `[5, 2]`",items:{type:"number"},minItems:1,type:"array"},extent:{description:"A two-element (`[min, max]`) array indicating the range of desired bin values.",items:{type:"number"},maxItems:2,minItems:2,type:"array"},maxbins:{description:"Maximum number of bins.\n\n__Default value:__ `6` for `row`, `column` and `shape` channels; `10` for other channels",minimum:2,type:"number"},minstep:{description:"A minimum allowable step size (particularly useful for integer values).",type:"number"},nice:{description:"If true (the default), attempts to make the bin boundaries use human-friendly boundaries, such as multiples of ten.",type:"boolean"},step:{description:"An exact step size to use between bins.\n\n__Note:__ If provided, options such as maxbins will be ignored.",type:"number"},steps:{description:"An array of allowable step sizes to choose from.",items:{type:"number"},minItems:1,type:"array"}},type:"object"},BinTransform:{additionalProperties:!1,properties:{as:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:"The output fields at which to write the start and end bin values."},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"}],description:"An object indicating bin properties, or simply `true` for using default bin parameters."},field:{description:"The data field to bin.",type:"string"}},required:["bin","field","as"],type:"object"},BindCheckbox:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},input:{enum:["checkbox"],type:"string"},name:{type:"string"},type:{type:"string"}},required:["input"],type:"object"},BindRadioSelect:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},input:{enum:["radio","select"],type:"string"},name:{type:"string"},options:{items:{},type:"array"},type:{type:"string"}},required:["input","options"],type:"object"},BindRange:{additionalProperties:!1,properties:{debounce:{type:"number"},element:{$ref:"#/definitions/Element"},input:{enum:["range"],type:"string"},max:{type:"number"},min:{type:"number"},name:{type:"string"},step:{type:"number"},type:{type:"string"}},required:["input"],type:"object"},Binding:{anyOf:[{$ref:"#/definitions/BaseBinding"},{$ref:"#/definitions/BindCheckbox"},{$ref:"#/definitions/BindRadioSelect"},{$ref:"#/definitions/BindRange"}]},BoxPlot:{enum:["boxplot"],type:"string"},BoxPlotConfig:{additionalProperties:!1,properties:{box:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},extent:{anyOf:[{enum:["min-max"],type:"string"},{type:"number"}],description:'The extent of the whiskers. Available options include:\n- `"min-max"`: min and max are the lower and upper whiskers respectively.\n- A number representing multiple of the interquartile range.  This number will be multiplied by the IQR to determine whisker boundary, which spans from the smallest data to the largest data within the range _[Q1 - k * IQR, Q3 + k * IQR]_ where _Q1_ and _Q3_ are the first and third quartiles while _IQR_ is the interquartile range (_Q3-Q1_).\n\n__Default value:__ `1.5`.'},median:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},outliers:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},size:{description:"Size of the box and median tick of a box plot",type:"number"},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},BoxPlotDef:{additionalProperties:!1,properties:{box:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},clip:{description:"Whether a composite mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},extent:{anyOf:[{enum:["min-max"],type:"string"},{type:"number"}],description:'The extent of the whiskers. Available options include:\n- `"min-max"`: min and max are the lower and upper whiskers respectively.\n- A number representing multiple of the interquartile range.  This number will be multiplied by the IQR to determine whisker boundary, which spans from the smallest data to the largest data within the range _[Q1 - k * IQR, Q3 + k * IQR]_ where _Q1_ and _Q3_ are the first and third quartiles while _IQR_ is the interquartile range (_Q3-Q1_).\n\n__Default value:__ `1.5`.'},median:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},opacity:{description:"The opacity (value between [0,1]) of the mark.",type:"number"},orient:{$ref:"#/definitions/Orientation",description:'Orientation of the box plot.  This is normally automatically determined based on types of fields on x and y channels. However, an explicit `orient` be specified when the orientation is ambiguous.\n\n__Default value:__ `"vertical"`.'},outliers:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},size:{description:"Size of the box and median tick of a box plot",type:"number"},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},type:{$ref:"#/definitions/BoxPlot",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'}},required:["type"],type:"object"},BrushConfig:{additionalProperties:!1,properties:{fill:{description:"The fill color of the interval mark.\n\n__Default value:__ `#333333`",type:"string"},fillOpacity:{description:"The fill opacity of the interval mark (a value between 0 and 1).\n\n__Default value:__ `0.125`",type:"number"},stroke:{description:"The stroke color of the interval mark.\n\n__Default value:__ `#ffffff`",type:"string"},strokeDash:{description:"An array of alternating stroke and space lengths,\nfor creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) with which to begin drawing the stroke dash array.",type:"number"},strokeOpacity:{description:"The stroke opacity of the interval mark (a value between 0 and 1).",type:"number"},strokeWidth:{description:"The stroke width of the interval mark.",type:"number"}},type:"object"},CalculateTransform:{additionalProperties:!1,properties:{as:{description:"The field for storing the computed formula value.",type:"string"},calculate:{description:"A [expression](https://vega.github.io/vega-lite/docs/types.html#expression) string. Use the variable `datum` to refer to the current data object.",type:"string"}},required:["calculate","as"],type:"object"},Color:{type:"string"},ColorFieldDefWithCondition:{$ref:"#/definitions/FieldDefWithCondition<MarkPropFieldDef,(string|null)>"},ColorValueDefWithCondition:{$ref:"#/definitions/ValueDefWithCondition<MarkPropFieldDef,(string|null)>"},Encoding:{additionalProperties:!1,properties:{color:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:'Color of the marks – either fill or stroke color based on  the `filled` property of mark definition.\nBy default, `color` represents fill color for `"area"`, `"bar"`, `"tick"`,\n`"text"`, `"trail"`, `"circle"`, and `"square"` / stroke color for `"line"` and `"point"`.\n\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)\'s `color` property.\n\n_Note:_\n1) For fine-grained control over both fill and stroke colors of the marks, please use the `fill` and `stroke` channels.  If either `fill` or `stroke` channel is specified, `color` channel will be ignored.\n2) See the scale documentation for more information about customizing [color scheme](https://vega.github.io/vega-lite/docs/scale.html#scheme).'},detail:{anyOf:[{$ref:"#/definitions/FieldDef"},{items:{$ref:"#/definitions/FieldDef"},type:"array"}],description:"Additional levels of detail for grouping data in aggregate views and\nin line, trail, and area marks without mapping data to a specific visual channel."},fill:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Fill color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `fill` channel, `color ` channel will be ignored. To customize both fill and stroke, please use `fill` and `stroke` channels (not `fill` and `color`)."},fillOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Fill opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `fillOpacity` property."},href:{anyOf:[{$ref:"#/definitions/StringFieldDefWithCondition"},{$ref:"#/definitions/StringValueDefWithCondition"}],description:"A URL to load upon mouse click."},key:{$ref:"#/definitions/FieldDef",description:"A data field to use as a unique key for data binding. When a visualization’s data is updated, the key value will be used to match data elements to existing mark instances. Use a key channel to enable object constancy for transitions over dynamic data."},latitude:{$ref:"#/definitions/LatLongFieldDef",description:"Latitude position of geographically projected marks."},latitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Latitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},longitude:{$ref:"#/definitions/LatLongFieldDef",description:"Longitude position of geographically projected marks."},longitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Longitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},opacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `opacity` property."},order:{anyOf:[{$ref:"#/definitions/OrderFieldDef"},{items:{$ref:"#/definitions/OrderFieldDef"},type:"array"},{$ref:"#/definitions/NumberValueDef"}],description:'Order of the marks.\n- For stacked marks, this `order` channel encodes [stack order](https://vega.github.io/vega-lite/docs/stack.html#order).\n- For line and trail marks, this `order` channel encodes order of data points in the lines. This can be useful for creating [a connected scatterplot](https://vega.github.io/vega-lite/examples/connected_scatterplot.html).  Setting `order` to `{"value": null}` makes the line marks use the original order in the data sources.\n- Otherwise, this `order` channel encodes layer order of the marks.\n\n__Note__: In aggregate plots, `order` field should be `aggregate`d to avoid creating additional aggregation grouping.'},shape:{anyOf:[{$ref:"#/definitions/ShapeFieldDefWithCondition"},{$ref:"#/definitions/ShapeValueDefWithCondition"}],description:'Shape of the mark.\n\n1. For `point` marks the supported values include:\n   - plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n   - the line symbol `"stroke"`\n   - centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n   - a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n2. For `geoshape` marks it should be a field definition of the geojson data\n\n__Default value:__ If undefined, the default shape depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#point-config)\'s `shape` property. (`"circle"` if unset.)'},size:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:'Size of the mark.\n- For `"point"`, `"square"` and `"circle"`, – the symbol size, or pixel area of the mark.\n- For `"bar"` and `"tick"` – the bar and tick\'s size.\n- For `"text"` – the text\'s font size.\n- Size is unsupported for `"line"`, `"area"`, and `"rect"`. (Use `"trail"` instead of line with varying size)'},stroke:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Stroke color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `stroke` channel, `color ` channel will be ignored. To customize both stroke and fill, please use `stroke` and `fill` channels (not `stroke` and `color`)."},strokeOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeOpacity` property."},strokeWidth:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke width of the marks.\n\n__Default value:__ If undefined, the default stroke width depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeWidth` property."},text:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"}],description:"Text of the `text` mark."},tooltip:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"},{items:{$ref:"#/definitions/TextFieldDef"},type:"array"},{type:"null"}],description:"The tooltip text to show upon mouse hover."},x:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},x2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},xError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},xError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},y:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`\n\nThe `value` of this channel can be a number or a string `"height"`.'},y2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"height"`.'},yError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'},yError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'}},type:"object"},CompositeMark:{anyOf:[{$ref:"#/definitions/BoxPlot"},{$ref:"#/definitions/ErrorBar"},{$ref:"#/definitions/ErrorBand"}]},CompositeMarkDef:{anyOf:[{$ref:"#/definitions/BoxPlotDef"},{$ref:"#/definitions/ErrorBarDef"},{$ref:"#/definitions/ErrorBandDef"}]},CompositionConfig:{additionalProperties:!1,properties:{columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},spacing:{description:"The default spacing in pixels between composed sub-views.\n\n__Default value__: `20`",type:"number"}},type:"object"},'ConditionOnlyDef<MarkPropFieldDef<"nominal">>':{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:'#/definitions/ConditionalMarkPropFieldDef<"nominal">'},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},"ConditionOnlyDef<MarkPropFieldDef>":{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef"},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},"ConditionOnlyDef<MarkPropFieldDef<TypeForShape>>":{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef<TypeForShape>"},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},"ConditionOnlyDef<TextFieldDef>":{additionalProperties:!1,description:"A Condition<ValueDef | FieldDef> only definition.\n{\n   condition: {field: ...} | {value: ...}\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalTextFieldDef"},{$ref:"#/definitions/ConditionalValueDef"},{items:{$ref:"#/definitions/ConditionalValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."}},required:["condition"],type:"object"},'ConditionalMarkPropFieldDef<"nominal">':{anyOf:[{$ref:'#/definitions/ConditionalPredicate<MarkPropFieldDef<"nominal">>'},{$ref:'#/definitions/ConditionalSelection<MarkPropFieldDef<"nominal">>'}]},ConditionalMarkPropFieldDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<MarkPropFieldDef>"},{$ref:"#/definitions/ConditionalSelection<MarkPropFieldDef>"}]},"ConditionalMarkPropFieldDef<TypeForShape>":{anyOf:[{$ref:"#/definitions/ConditionalPredicate<MarkPropFieldDef<TypeForShape>>"},{$ref:"#/definitions/ConditionalSelection<MarkPropFieldDef<TypeForShape>>"}]},ConditionalTextFieldDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<TextFieldDef>"},{$ref:"#/definitions/ConditionalSelection<TextFieldDef>"}]},ConditionalValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<ValueDef>"},{$ref:"#/definitions/ConditionalSelection<ValueDef>"}]},ConditionalColorValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<ColorValueDef>"},{$ref:"#/definitions/ConditionalSelection<ColorValueDef>"}]},ConditionalTextValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<TextValueDef>"},{$ref:"#/definitions/ConditionalSelection<TextValueDef>"}]},ConditionalNumberValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<NumberValueDef>"},{$ref:"#/definitions/ConditionalSelection<NumberValueDef>"}]},ConditionalStringValueDef:{anyOf:[{$ref:"#/definitions/ConditionalPredicate<StringValueDef>"},{$ref:"#/definitions/ConditionalSelection<StringValueDef>"}]},'ConditionalPredicate<MarkPropFieldDef<"nominal">>':{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).',enum:["nominal"],type:"string"}},required:["test","type"],type:"object"},"ConditionalPredicate<MarkPropFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["test","type"],type:"object"},"ConditionalPredicate<MarkPropFieldDef<TypeForShape>>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/TypeForShape",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["test","type"],type:"object"},"ConditionalPredicate<TextFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["test","type"],type:"object"},"ConditionalPredicate<ValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["number","string","boolean","null"]}},required:["test","value"],type:"object"},"ConditionalPredicate<ColorValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","null"]}},required:["test","value"],type:"object"},"ConditionalPredicate<TextValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","number","boolean"]}},required:["test","value"],type:"object"},"ConditionalPredicate<NumberValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["test","value"],type:"object"},"ConditionalPredicate<StringValueDef>":{additionalProperties:!1,properties:{test:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"Predicate for triggering the condition"},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["test","value"],type:"object"},'ConditionalSelection<MarkPropFieldDef<"nominal">>':{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).',enum:["nominal"],type:"string"}},required:["selection","type"],type:"object"},"ConditionalSelection<MarkPropFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["selection","type"],type:"object"},"ConditionalSelection<MarkPropFieldDef<TypeForShape>>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/TypeForShape",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["selection","type"],type:"object"},"ConditionalSelection<TextFieldDef>":{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["selection","type"],type:"object"},"ConditionalSelection<ValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["number","string","boolean","null"]}},required:["selection","value"],type:"object"},"ConditionalSelection<ColorValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","null"]}},required:["selection","value"],type:"object"},"ConditionalSelection<TextValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","number","boolean"]}},required:["selection","value"],type:"object"},"ConditionalSelection<NumberValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["selection","value"],type:"object"},"ConditionalSelection<StringValueDef>":{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose)."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["selection","value"],type:"object"},Config:{additionalProperties:!1,properties:{area:{$ref:"#/definitions/AreaConfig",description:"Area-Specific Config"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},axis:{$ref:"#/definitions/AxisConfig",description:"Axis configuration, which determines default properties for all `x` and `y` [axes](https://vega.github.io/vega-lite/docs/axis.html). For a full list of axis configuration options, please see the [corresponding section of the axis documentation](https://vega.github.io/vega-lite/docs/axis.html#config)."},axisBand:{$ref:"#/definitions/AxisConfig",description:'Specific axis config for axes with "band" scales.'},axisBottom:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for x-axis along the bottom edge of the chart."},axisLeft:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for y-axis along the left edge of the chart."},axisRight:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for y-axis along the right edge of the chart."},axisTop:{$ref:"#/definitions/AxisConfig",description:"Specific axis config for x-axis along the top edge of the chart."},axisX:{$ref:"#/definitions/AxisConfig",description:"X-axis specific config."},axisY:{$ref:"#/definitions/AxisConfig",description:"Y-axis specific config."},background:{description:"CSS color property to use as the background of the whole Vega-Lite view\n\n__Default value:__ none (transparent)",type:"string"},bar:{$ref:"#/definitions/BarConfig",description:"Bar-Specific Config"},boxplot:{$ref:"#/definitions/BoxPlotConfig",description:"Box Config"},circle:{$ref:"#/definitions/MarkConfig",description:"Circle-Specific Config"},concat:{$ref:"#/definitions/CompositionConfig",description:"Default configuration for all concatenation view composition operators (`concat`, `hconcat`, and `vconcat`)"},countTitle:{description:"Default axis and legend title for count fields.\n\n__Default value:__ `'Count of Records`.",type:"string"},errorband:{$ref:"#/definitions/ErrorBandConfig",description:"ErrorBand Config"},errorbar:{$ref:"#/definitions/ErrorBarConfig",description:"ErrorBar Config"},facet:{$ref:"#/definitions/CompositionConfig",description:"Default configuration for the `facet` view composition operator"},fieldTitle:{description:'Defines how Vega-Lite generates title for fields.  There are three possible styles:\n- `"verbal"` (Default) - displays function in a verbal style (e.g., "Sum of field", "Year-month of date", "field (binned)").\n- `"function"` - displays function using parentheses and capitalized texts (e.g., "SUM(field)", "YEARMONTH(date)", "BIN(field)").\n- `"plain"` - displays only the field name without functions (e.g., "field", "date", "field").',enum:["verbal","functional","plain"],type:"string"},geoshape:{$ref:"#/definitions/MarkConfig",description:"Geoshape-Specific Config"},header:{$ref:"#/definitions/HeaderConfig",description:"Header configuration, which determines default properties for all [headers](https://vega.github.io/vega-lite/docs/header.html).\n\nFor a full list of header configuration options, please see the [corresponding section of in the header documentation](https://vega.github.io/vega-lite/docs/header.html#config)."},headerColumn:{$ref:"#/definitions/HeaderConfig",description:"Header configuration, which determines default properties for column [headers](https://vega.github.io/vega-lite/docs/header.html).\n\nFor a full list of header configuration options, please see the [corresponding section of in the header documentation](https://vega.github.io/vega-lite/docs/header.html#config)."},headerFacet:{$ref:"#/definitions/HeaderConfig",description:"Header configuration, which determines default properties for non-row/column facet [headers](https://vega.github.io/vega-lite/docs/header.html).\n\nFor a full list of header configuration options, please see the [corresponding section of in the header documentation](https://vega.github.io/vega-lite/docs/header.html#config)."},headerRow:{$ref:"#/definitions/HeaderConfig",description:"Header configuration, which determines default properties for row [headers](https://vega.github.io/vega-lite/docs/header.html).\n\nFor a full list of header configuration options, please see the [corresponding section of in the header documentation](https://vega.github.io/vega-lite/docs/header.html#config)."},invalidValues:{description:'Defines how Vega-Lite should handle invalid values (`null` and `NaN`).\n- If set to `"filter"` (default), all data items with null values will be skipped (for line, trail, and area marks) or filtered (for other marks).\n- If `null`, all data items are included. In this case, invalid values will be interpreted as zeroes.',enum:["filter",null],type:["string","null"]},legend:{$ref:"#/definitions/LegendConfig",description:"Legend configuration, which determines default properties for all [legends](https://vega.github.io/vega-lite/docs/legend.html). For a full list of legend configuration options, please see the [corresponding section of in the legend documentation](https://vega.github.io/vega-lite/docs/legend.html#config)."},line:{$ref:"#/definitions/LineConfig",description:"Line-Specific Config"},mark:{$ref:"#/definitions/MarkConfig",description:"Mark Config"},numberFormat:{description:'D3 Number format for guide labels and text marks. For example "s" for SI units. Use [D3\'s number format pattern](https://github.com/d3/d3-format#locale_format).',type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},point:{$ref:"#/definitions/MarkConfig",description:"Point-Specific Config"},projection:{$ref:"#/definitions/ProjectionConfig",description:"Projection configuration, which determines default properties for all [projections](https://vega.github.io/vega-lite/docs/projection.html). For a full list of projection configuration options, please see the [corresponding section of the projection documentation](https://vega.github.io/vega-lite/docs/projection.html#config)."},range:{$ref:"#/definitions/RangeConfig",description:"An object hash that defines default range arrays or schemes for using with scales.\nFor a full list of scale range configuration options, please see the [corresponding section of the scale documentation](https://vega.github.io/vega-lite/docs/scale.html#config)."},rect:{$ref:"#/definitions/MarkConfig",description:"Rect-Specific Config"},repeat:{$ref:"#/definitions/CompositionConfig",description:"Default configuration for the `repeat` view composition operator"},rule:{$ref:"#/definitions/MarkConfig",description:"Rule-Specific Config"},scale:{$ref:"#/definitions/ScaleConfig",description:"Scale configuration determines default properties for all [scales](https://vega.github.io/vega-lite/docs/scale.html). For a full list of scale configuration options, please see the [corresponding section of the scale documentation](https://vega.github.io/vega-lite/docs/scale.html#config)."},selection:{$ref:"#/definitions/SelectionConfig",description:"An object hash for defining default properties for each type of selections."},square:{$ref:"#/definitions/MarkConfig",description:"Square-Specific Config"},stack:{$ref:"#/definitions/StackOffset",description:"Default stack offset for stackable mark."},style:{$ref:"#/definitions/StyleConfigIndex",description:"An object hash that defines key-value mappings to determine default properties for marks with a given [style](https://vega.github.io/vega-lite/docs/mark.html#mark-def).  The keys represent styles names; the values have to be valid [mark configuration objects](https://vega.github.io/vega-lite/docs/mark.html#config)."},text:{$ref:"#/definitions/TextConfig",description:"Text-Specific Config"},tick:{$ref:"#/definitions/TickConfig",description:"Tick-Specific Config"},timeFormat:{description:'Default time format for raw time values (without time units) in text marks, legend labels and header labels.\n\n__Default value:__ `"%b %d, %Y"`\n__Note:__ Axes automatically determine format each label automatically so this config would not affect axes.',type:"string"},title:{$ref:"#/definitions/TitleConfig",description:"Title configuration, which determines default properties for all [titles](https://vega.github.io/vega-lite/docs/title.html). For a full list of title configuration options, please see the [corresponding section of the title documentation](https://vega.github.io/vega-lite/docs/title.html#config)."},trail:{$ref:"#/definitions/LineConfig",description:"Trail-Specific Config"},view:{$ref:"#/definitions/ViewConfig",description:"Default properties for [single view plots](https://vega.github.io/vega-lite/docs/spec.html#single)."}},type:"object"},CsvDataFormat:{additionalProperties:!1,properties:{parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: "date:\'%m%d%Y\'"}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: "utc:\'%m%d%Y\'"}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["csv","tsv"],type:"string"}},type:"object"},Cursor:{enum:["auto","default","none","context-menu","help","pointer","progress","wait","cell","crosshair","text","vertical-text","alias","copy","move","no-drop","not-allowed","e-resize","n-resize","ne-resize","nw-resize","s-resize","se-resize","sw-resize","w-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","col-resize","row-resize","all-scroll","zoom-in","zoom-out","grab","grabbing"],type:"string"},Data:{anyOf:[{$ref:"#/definitions/UrlData"},{$ref:"#/definitions/InlineData"},{$ref:"#/definitions/NamedData"}]},DataFormat:{anyOf:[{$ref:"#/definitions/CsvDataFormat"},{$ref:"#/definitions/DsvDataFormat"},{$ref:"#/definitions/JsonDataFormat"},{$ref:"#/definitions/TopoDataFormat"}]},Datasets:{$ref:"#/definitions/Dict<InlineDataset>"},DateTime:{additionalProperties:!1,description:"Object for defining datetime in Vega-Lite Filter.\nIf both month and quarter are provided, month has higher precedence.\n`day` cannot be combined with other date.\nWe accept string for month and day names.",properties:{date:{description:"Integer value representing the date from 1-31.",maximum:31,minimum:1,type:"number"},day:{anyOf:[{$ref:"#/definitions/Day"},{type:"string"}],description:'Value representing the day of a week.  This can be one of: (1) integer value -- `1` represents Monday; (2) case-insensitive day name (e.g., `"Monday"`);  (3) case-insensitive, 3-character short day name (e.g., `"Mon"`).   <br/> **Warning:** A DateTime definition object with `day`** should not be combined with `year`, `quarter`, `month`, or `date`.'},hours:{description:"Integer value representing the hour of a day from 0-23.",maximum:23,minimum:0,type:"number"},milliseconds:{description:"Integer value representing the millisecond segment of time.",maximum:999,minimum:0,type:"number"},minutes:{description:"Integer value representing the minute segment of time from 0-59.",maximum:59,minimum:0,type:"number"},month:{anyOf:[{$ref:"#/definitions/Month"},{type:"string"}],description:'One of: (1) integer value representing the month from `1`-`12`. `1` represents January;  (2) case-insensitive month name (e.g., `"January"`);  (3) case-insensitive, 3-character short month name (e.g., `"Jan"`).'},quarter:{description:"Integer value representing the quarter of the year (from 1-4).",maximum:4,minimum:1,type:"number"},seconds:{description:"Integer value representing the second segment (0-59) of a time value",maximum:59,minimum:0,type:"number"},utc:{description:"A boolean flag indicating if date time is in utc time. If false, the date time is in local time",type:"boolean"},year:{description:"Integer value representing the year.",type:"number"}},type:"object"},Day:{maximum:7,minimum:1,type:"number"},"Dict<InlineDataset>":{additionalProperties:{$ref:"#/definitions/InlineDataset"},type:"object"},Dir:{enum:["ltr","rtl"],type:"string"},DsvDataFormat:{additionalProperties:!1,properties:{delimiter:{description:"The delimiter between records. The delimiter must be a single character (i.e., a single 16-bit code unit); so, ASCII delimiters are fine, but emoji delimiters are not.",maxLength:1,minLength:1,type:"string"},parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: "date:\'%m%d%Y\'"}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: "utc:\'%m%d%Y\'"}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["dsv"],type:"string"}},required:["delimiter"],type:"object"},Element:{type:"string"},EncodingSortField:{additionalProperties:!1,description:"A sort definition for sorting a discrete scale in an encoding field definition.",properties:{field:{$ref:"#/definitions/Field",description:"The data [field](https://vega.github.io/vega-lite/docs/field.html) to sort by.\n\n__Default value:__ If unspecified, defaults to the field specified in the outer data reference."},op:{$ref:"#/definitions/AggregateOp",description:'An [aggregate operation](https://vega.github.io/vega-lite/docs/aggregate.html#ops) to perform on the field prior to sorting (e.g., `"count"`, `"mean"` and `"median"`).\nAn aggregation is required when there are multiple values of the sort field for each encoded data field.\nThe input data objects will be aggregated, grouped by the encoded data field.\n\nFor a full list of operations, please see the documentation for [aggregate](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\n\n__Default value:__ `"sum"` for stacked plots. Otherwise, `"mean"`.'},order:{anyOf:[{$ref:"#/definitions/SortOrder"},{type:"null"}],description:'The sort order. One of `"ascending"` (default), `"descending"`, or `null` (no not sort).'}},type:"object"},ErrorBand:{enum:["errorband"],type:"string"},ErrorBandConfig:{additionalProperties:!1,properties:{band:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},borders:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the band. Available options include:\n- `"ci"`: Extend the band to the confidence interval of the mean.\n- `"stderr"`: The size of band are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of band are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the band to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method for the error band. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: a piecewise constant function (a step function) consisting of alternating horizontal and vertical lines. The y-value changes at the midpoint of each pair of adjacent x-values.\n- `"step-before"`: a piecewise constant function (a step function) consisting of alternating horizontal and vertical lines. The y-value changes before the x-value.\n- `"step-after"`: a piecewise constant function (a step function) consisting of alternating horizontal and vertical lines. The y-value changes after the x-value.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},tension:{description:"The tension parameter for the interpolation type of the error band.",maximum:1,minimum:0,type:"number"}},type:"object"},ErrorBandDef:{additionalProperties:!1,properties:{band:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},borders:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},clip:{description:"Whether a composite mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the band. Available options include:\n- `"ci"`: Extend the band to the confidence interval of the mean.\n- `"stderr"`: The size of band are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of band are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the band to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method for the error band. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: a piecewise constant function (a step function) consisting of alternating horizontal and vertical lines. The y-value changes at the midpoint of each pair of adjacent x-values.\n- `"step-before"`: a piecewise constant function (a step function) consisting of alternating horizontal and vertical lines. The y-value changes before the x-value.\n- `"step-after"`: a piecewise constant function (a step function) consisting of alternating horizontal and vertical lines. The y-value changes after the x-value.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},opacity:{description:"The opacity (value between [0,1]) of the mark.",type:"number"},orient:{$ref:"#/definitions/Orientation",description:"Orientation of the error band. This is normally automatically determined, but can be specified when the orientation is ambiguous and cannot be automatically determined."},tension:{description:"The tension parameter for the interpolation type of the error band.",maximum:1,minimum:0,type:"number"},type:{$ref:"#/definitions/ErrorBand",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'}},required:["type"],type:"object"},ErrorBar:{enum:["errorbar"],type:"string"},ErrorBarConfig:{additionalProperties:!1,properties:{extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the rule. Available options include:\n- `"ci"`: Extend the rule to the confidence interval of the mean.\n- `"stderr"`: The size of rule are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of rule are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the rule to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},ErrorBarDef:{additionalProperties:!1,properties:{clip:{description:"Whether a composite mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},extent:{$ref:"#/definitions/ErrorBarExtent",description:'The extent of the rule. Available options include:\n- `"ci"`: Extend the rule to the confidence interval of the mean.\n- `"stderr"`: The size of rule are set to the value of standard error, extending from the mean.\n- `"stdev"`: The size of rule are set to the value of standard deviation, extending from the mean.\n- `"iqr"`: Extend the rule to the q1 and q3.\n\n__Default value:__ `"stderr"`.'},opacity:{description:"The opacity (value between [0,1]) of the mark.",type:"number"},orient:{$ref:"#/definitions/Orientation",description:"Orientation of the error bar.  This is normally automatically determined, but can be specified when the orientation is ambiguous and cannot be automatically determined."},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},type:{$ref:"#/definitions/ErrorBar",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'}},required:["type"],type:"object"},ErrorBarExtent:{enum:["ci","iqr","stderr","stdev"],type:"string"},EventStream:{},FacetFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},header:{$ref:"#/definitions/Header",description:"An object defining properties of a facet's header."},sort:{anyOf:[{$ref:"#/definitions/SortArray"},{$ref:"#/definitions/SortOrder"},{$ref:"#/definitions/EncodingSortField"},{type:"null"}],description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/Type",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},FacetMapping:{additionalProperties:!1,properties:{column:{$ref:"#/definitions/FacetFieldDef",description:"A field definition for the horizontal facet of trellis plots."},row:{$ref:"#/definitions/FacetFieldDef",description:"A field definition for the vertical facet of trellis plots."}},type:"object"},FacetedEncoding:{additionalProperties:!1,properties:{color:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:'Color of the marks – either fill or stroke color based on  the `filled` property of mark definition.\nBy default, `color` represents fill color for `"area"`, `"bar"`, `"tick"`,\n`"text"`, `"trail"`, `"circle"`, and `"square"` / stroke color for `"line"` and `"point"`.\n\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)\'s `color` property.\n\n_Note:_\n1) For fine-grained control over both fill and stroke colors of the marks, please use the `fill` and `stroke` channels.  If either `fill` or `stroke` channel is specified, `color` channel will be ignored.\n2) See the scale documentation for more information about customizing [color scheme](https://vega.github.io/vega-lite/docs/scale.html#scheme).'},column:{$ref:"#/definitions/FacetFieldDef",description:"A field definition for the horizontal facet of trellis plots."},detail:{anyOf:[{$ref:"#/definitions/FieldDef"},{items:{$ref:"#/definitions/FieldDef"},type:"array"}],description:"Additional levels of detail for grouping data in aggregate views and\nin line, trail, and area marks without mapping data to a specific visual channel."},facet:{$ref:"#/definitions/FacetFieldDef",description:"A field definition for the (flexible) facet of trellis plots.\n\nIf either `row` or `column` is specified, this channel will be ignored."},fill:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Fill color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `fill` channel, `color ` channel will be ignored. To customize both fill and stroke, please use `fill` and `stroke` channels (not `fill` and `color`)."},fillOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Fill opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `fillOpacity` property."},href:{anyOf:[{$ref:"#/definitions/StringFieldDefWithCondition"},{$ref:"#/definitions/StringValueDefWithCondition"}],description:"A URL to load upon mouse click."},key:{$ref:"#/definitions/FieldDef",description:"A data field to use as a unique key for data binding. When a visualization’s data is updated, the key value will be used to match data elements to existing mark instances. Use a key channel to enable object constancy for transitions over dynamic data."},latitude:{$ref:"#/definitions/LatLongFieldDef",description:"Latitude position of geographically projected marks."},latitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Latitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},longitude:{$ref:"#/definitions/LatLongFieldDef",description:"Longitude position of geographically projected marks."},longitude2:{$ref:"#/definitions/SecondaryFieldDef",description:'Longitude-2 position for geographically projected ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.'},opacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `opacity` property."},order:{anyOf:[{$ref:"#/definitions/OrderFieldDef"},{items:{$ref:"#/definitions/OrderFieldDef"},type:"array"},{$ref:"#/definitions/NumberValueDef"}],description:'Order of the marks.\n- For stacked marks, this `order` channel encodes [stack order](https://vega.github.io/vega-lite/docs/stack.html#order).\n- For line and trail marks, this `order` channel encodes order of data points in the lines. This can be useful for creating [a connected scatterplot](https://vega.github.io/vega-lite/examples/connected_scatterplot.html).  Setting `order` to `{"value": null}` makes the line marks use the original order in the data sources.\n- Otherwise, this `order` channel encodes layer order of the marks.\n\n__Note__: In aggregate plots, `order` field should be `aggregate`d to avoid creating additional aggregation grouping.'},row:{$ref:"#/definitions/FacetFieldDef",description:"A field definition for the vertical facet of trellis plots."},shape:{anyOf:[{$ref:"#/definitions/ShapeFieldDefWithCondition"},{$ref:"#/definitions/ShapeValueDefWithCondition"}],description:'Shape of the mark.\n\n1. For `point` marks the supported values include:\n   - plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n   - the line symbol `"stroke"`\n   - centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n   - a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n2. For `geoshape` marks it should be a field definition of the geojson data\n\n__Default value:__ If undefined, the default shape depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#point-config)\'s `shape` property. (`"circle"` if unset.)'},size:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:'Size of the mark.\n- For `"point"`, `"square"` and `"circle"`, – the symbol size, or pixel area of the mark.\n- For `"bar"` and `"tick"` – the bar and tick\'s size.\n- For `"text"` – the text\'s font size.\n- Size is unsupported for `"line"`, `"area"`, and `"rect"`. (Use `"trail"` instead of line with varying size)'},stroke:{anyOf:[{$ref:"#/definitions/ColorFieldDefWithCondition"},{$ref:"#/definitions/ColorValueDefWithCondition"}],description:"Stroke color of the marks.\n__Default value:__ If undefined, the default color depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `color` property.\n\n_Note:_ When using `stroke` channel, `color ` channel will be ignored. To customize both stroke and fill, please use `stroke` and `fill` channels (not `stroke` and `color`)."},strokeOpacity:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke opacity of the marks.\n\n__Default value:__ If undefined, the default opacity depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeOpacity` property."},strokeWidth:{anyOf:[{$ref:"#/definitions/NumericFieldDefWithCondition"},{$ref:"#/definitions/NumericValueDefWithCondition"}],description:"Stroke width of the marks.\n\n__Default value:__ If undefined, the default stroke width depends on [mark config](https://vega.github.io/vega-lite/docs/config.html#mark)'s `strokeWidth` property."},text:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"}],description:"Text of the `text` mark."},tooltip:{anyOf:[{$ref:"#/definitions/TextFieldDefWithCondition"},{$ref:"#/definitions/TextValueDefWithCondition"},{items:{$ref:"#/definitions/TextFieldDef"},type:"array"},{type:"null"}],description:"The tooltip text to show upon mouse hover."},x:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},x2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/XValueDef"}],description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"width"`.'},xError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},xError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of x coordinates for error specified `"errorbar"` and `"errorband"`.'},y:{anyOf:[{$ref:"#/definitions/PositionFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`\n\nThe `value` of this channel can be a number or a string `"height"`.'},y2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/YValueDef"}],description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.\n\nThe `value` of this channel can be a number or a string `"height"`.'},yError:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'},yError2:{anyOf:[{$ref:"#/definitions/SecondaryFieldDef"},{$ref:"#/definitions/NumberValueDef"}],description:'Secondary error value of y coordinates for error specified `"errorbar"` and `"errorband"`.'}},type:"object"},FacetedUnitSpec:{additionalProperties:!1,description:"Unit spec that can have a composite mark and row or column channels (shorthand for a facet spec).",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/FacetedEncoding",description:"A key-value mapping between encoding channels and definition of fields."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},mark:{$ref:"#/definitions/AnyMark",description:'A string describing the mark type (one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"rule"`, `"geoshape"`, and `"text"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).'},name:{description:"Name of the visualization for later reference.",type:"string"},projection:{$ref:"#/definitions/Projection",description:'An object defining properties of geographic projection, which will be applied to `shape` path for `"geoshape"` marks\nand to `latitude` and `"longitude"` channels for other marks.'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},selection:{additionalProperties:{$ref:"#/definitions/SelectionDef"},description:"A key-value mapping between selection names and definitions.",type:"object"},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["mark"],type:"object"},Field:{anyOf:[{type:"string"},{$ref:"#/definitions/RepeatRef"}]},'FieldDefWithCondition<MarkPropFieldDef<"nominal">,string>':{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"One or more value definition(s) with [a selection or a test predicate](https://vega.github.io/vega-lite/docs/condition.html).\n\n__Note:__ A field definition's `condition` property can only contain [conditional value definitions](https://vega.github.io/vega-lite/docs/condition.html#value)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).',enum:["nominal"],type:"string"}},required:["type"],type:"object"},"FieldDefWithCondition<MarkPropFieldDef,(string|null)>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalColorValueDef"},{items:{$ref:"#/definitions/ConditionalColorValueDef"},type:"array"}],description:"One or more value definition(s) with [a selection or a test predicate](https://vega.github.io/vega-lite/docs/condition.html).\n\n__Note:__ A field definition's `condition` property can only contain [conditional value definitions](https://vega.github.io/vega-lite/docs/condition.html#value)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},"FieldDefWithCondition<MarkPropFieldDef,number>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalNumberValueDef"},{items:{$ref:"#/definitions/ConditionalNumberValueDef"},type:"array"}],description:"One or more value definition(s) with [a selection or a test predicate](https://vega.github.io/vega-lite/docs/condition.html).\n\n__Note:__ A field definition's `condition` property can only contain [conditional value definitions](https://vega.github.io/vega-lite/docs/condition.html#value)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},"FieldDefWithCondition<MarkPropFieldDef<TypeForShape>,string>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"One or more value definition(s) with [a selection or a test predicate](https://vega.github.io/vega-lite/docs/condition.html).\n\n__Note:__ A field definition's `condition` property can only contain [conditional value definitions](https://vega.github.io/vega-lite/docs/condition.html#value)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},legend:{anyOf:[{$ref:"#/definitions/Legend"},{type:"null"}],description:"An object defining properties of the legend.\nIf `null`, the legend for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/TypeForShape",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},"FieldDefWithCondition<TextFieldDef,(string|number|boolean)>":{additionalProperties:!1,description:"A FieldDef with Condition<ValueDef>\n{\n   condition: {value: ...},\n   field: ...,\n   ...\n}",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},condition:{anyOf:[{$ref:"#/definitions/ConditionalTextValueDef"},{items:{$ref:"#/definitions/ConditionalTextValueDef"},type:"array"}],description:"One or more value definition(s) with [a selection or a test predicate](https://vega.github.io/vega-lite/docs/condition.html).\n\n__Note:__ A field definition's `condition` property can only contain [conditional value definitions](https://vega.github.io/vega-lite/docs/condition.html#value)\nsince Vega-Lite only allows at most one encoded field per encoding channel."},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},FieldDef:{additionalProperties:!1,description:'Field Def without scale (and without bin: "binned" support).',properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},FieldEqualPredicate:{additionalProperties:!1,properties:{equal:{anyOf:[{type:"string"},{type:"number"},{type:"boolean"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be equal to."},field:{description:"Field to be filtered.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["equal","field"],type:"object"},FieldGTEPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},gte:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be greater than or equals to."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","gte"],type:"object"},FieldGTPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},gt:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be greater than."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","gt"],type:"object"},FieldLTEPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},lte:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be less than or equals to."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","lte"],type:"object"},FieldLTPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},lt:{anyOf:[{type:"string"},{type:"number"},{$ref:"#/definitions/DateTime"}],description:"The value that the field should be less than."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","lt"],type:"object"},FieldOneOfPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},oneOf:{anyOf:[{items:{type:"string"},type:"array"},{items:{type:"number"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}],description:"A set of values that the `field`'s value should be a member of,\nfor a data item included in the filtered data."},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","oneOf"],type:"object"},FieldRangePredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},range:{description:"An array of inclusive minimum and maximum values\nfor a field value of a data item to be included in the filtered data.",items:{anyOf:[{type:"number"},{$ref:"#/definitions/DateTime"},{type:"null"}]},maxItems:2,minItems:2,type:"array"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."}},required:["field","range"],type:"object"},FieldValidPredicate:{additionalProperties:!1,properties:{field:{description:"Field to be filtered.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit for the field to be filtered."},valid:{description:"If set to true the field's value has to be valid, meaning both not `null` and not [`NaN`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN).",type:"boolean"}},required:["field","valid"],type:"object"},FilterTransform:{additionalProperties:!1,properties:{filter:{$ref:"#/definitions/LogicalOperand<Predicate>",description:"The `filter` property must be one of the predicate definitions:\n\n1) an [expression](https://vega.github.io/vega-lite/docs/types.html#expression) string,\nwhere `datum` can be used to refer to the current data object\n\n2) one of the field predicates: [`equal`](https://vega.github.io/vega-lite/docs/filter.html#equal-predicate),\n[`lt`](https://vega.github.io/vega-lite/docs/filter.html#lt-predicate),\n[`lte`](https://vega.github.io/vega-lite/docs/filter.html#lte-predicate),\n[`gt`](https://vega.github.io/vega-lite/docs/filter.html#gt-predicate),\n[`gte`](https://vega.github.io/vega-lite/docs/filter.html#gte-predicate),\n[`range`](https://vega.github.io/vega-lite/docs/filter.html#range-predicate),\n[`oneOf`](https://vega.github.io/vega-lite/docs/filter.html#one-of-predicate),\nor [`valid`](https://vega.github.io/vega-lite/docs/filter.html#valid-predicate),\n\n3) a [selection predicate](https://vega.github.io/vega-lite/docs/filter.html#selection-predicate)\n\n4) a logical operand that combines (1), (2), or (3)."}},required:["filter"],type:"object"},FlattenTransform:{additionalProperties:!1,properties:{as:{description:"The output field names for extracted array values.\n\n__Default value:__ The field name of the corresponding array field",items:{type:"string"},type:"array"},flatten:{description:"An array of one or more data fields containing arrays to flatten.\nIf multiple fields are specified, their array values should have a parallel structure, ideally with the same length.\nIf the lengths of parallel arrays do not match,\nthe longest array will be used with `null` values added for missing entries.",items:{type:"string"},type:"array"}},required:["flatten"],type:"object"},FoldTransform:{additionalProperties:!1,properties:{as:{description:'The output field names for the key and value properties produced by the fold transform.\n__Default value:__ `["key", "value"]`',items:[{type:"string"},{type:"string"}],maxItems:2,minItems:2,type:"array"},fold:{description:"An array of data fields indicating the properties to fold.",items:{type:"string"},type:"array"}},required:["fold"],type:"object"},FontStyle:{type:"string"},FontWeight:{enum:["normal","bold","lighter","bolder",100,200,300,400,500,600,700,800,900],type:["string","number"]},"GenericBinMixins<(boolean|BinParams)>":{additionalProperties:!1,properties:{bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'}},type:"object"},'GenericBinMixins<(boolean|BinParams|"binned"|null)>':{additionalProperties:!1,properties:{bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'}},type:"object"},ConcatSpec:{additionalProperties:!1,description:"Base interface for a generalized concatenation specification.",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},concat:{description:"A list of views to be concatenated.",items:{$ref:"#/definitions/Spec"},type:"array"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["concat"],type:"object"},FacetSpec:{additionalProperties:!1,description:"Base interface for a facet specification.",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},facet:{anyOf:[{$ref:"#/definitions/FacetFieldDef"},{$ref:"#/definitions/FacetMapping"}],description:"Definition for how to facet the data.  One of:\n1) [a field definition for faceting the plot by one field](https://vega.github.io/vega-lite/docs/facet.html#field-def)\n2) [An object that maps `row` and `column` channels to their field definitions](https://vega.github.io/vega-lite/docs/facet.html#mapping)"},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},spec:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/FacetedUnitSpec"}],description:"A specification of the view that gets faceted."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["facet","spec"],type:"object"},HConcatSpec:{additionalProperties:!1,description:"Base interface for a horizontal concatenation specification.",properties:{bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},hconcat:{description:"A list of views to be concatenated and put into a row.",items:{$ref:"#/definitions/Spec"},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["hconcat"],type:"object"},RepeatSpec:{additionalProperties:!1,description:"Base interface for a repeat specification.",properties:{align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},repeat:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/RepeatMapping"}],description:'Definition for fields to be repeated.  One of:\n1) An array of fields to be repeated.  If `"repeat"` is an array, the field can be referred using `{"repeat": "repeat"}`\n2) An object that mapped `"row"` and/or `"column"` to the listed of fields to be repeated along the particular orientations. The objects `{"repeat": "row"}` and `{"repeat": "column"}` can be used to refer to the repeated field respectively.'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},spec:{$ref:"#/definitions/Spec",description:"A specification of the view that gets repeated."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"}},required:["repeat","spec"],type:"object"},Spec:{anyOf:[{$ref:"#/definitions/FacetedUnitSpec"},{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/FacetSpec"},{$ref:"#/definitions/RepeatSpec"},{$ref:"#/definitions/ConcatSpec"},{$ref:"#/definitions/VConcatSpec"},{$ref:"#/definitions/HConcatSpec"}],description:"Any specification in Vega-Lite."},"GenericUnitSpec<Encoding,AnyMark>":{additionalProperties:!1,description:"Base interface for a unit (single-view) specification.",properties:{data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/Encoding",description:"A key-value mapping between encoding channels and definition of fields."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},mark:{$ref:"#/definitions/AnyMark",description:'A string describing the mark type (one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"rule"`, `"geoshape"`, and `"text"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).'},name:{description:"Name of the visualization for later reference.",type:"string"},projection:{$ref:"#/definitions/Projection",description:'An object defining properties of geographic projection, which will be applied to `shape` path for `"geoshape"` marks\nand to `latitude` and `"longitude"` channels for other marks.'},selection:{additionalProperties:{$ref:"#/definitions/SelectionDef"},description:"A key-value mapping between selection names and definitions.",type:"object"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["mark"],type:"object"},VConcatSpec:{additionalProperties:!1,description:"Base interface for a vertical concatenation specification.",properties:{bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},vconcat:{description:"A list of views to be concatenated and put into a column.",items:{$ref:"#/definitions/Spec"},type:"array"}},required:["vconcat"],type:"object"},Header:{additionalProperties:!1,description:"Headers of row / column channels for faceted plots.",properties:{format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},labelAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of header labels."},labelAnchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the labels. One of `"start"`, `"middle"`, or `"end"`. For example, with a label orientation of top these anchor positions map to a left-, center-, or right-aligned label.'},labelAngle:{description:"The rotation angle of the header labels.\n\n__Default value:__ `0` for column header, `-90` for row header.",maximum:360,minimum:-360,type:"number"},labelColor:{description:"The color of the header label, can be in hex color code or regular color name.",type:"string"},labelFont:{description:"The font of the header label.",type:"string"},labelFontSize:{description:"The font size of the header label, in pixels.",minimum:0,type:"number"},labelLimit:{description:"The maximum length of the header label in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},labelOrient:{$ref:"#/definitions/Orient",description:'The orientation of the header label. One of `"top"`, `"bottom"`, `"left"` or `"right"`.'},labelPadding:{description:"The padding, in pixel, between facet header's label and the plot.\n\n__Default value:__ `10`",type:"number"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},titleAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment (to the anchor) of header titles."},titleAnchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.'},titleAngle:{description:"The rotation angle of the header title.\n\n__Default value:__ `0`.",maximum:360,minimum:-360,type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for the header title. One of `"top"`, `"bottom"`, `"middle"`.\n\n__Default value:__ `"middle"`'},titleColor:{description:"Color of the header title, can be in hex color code or regular color name.",type:"string"},titleFont:{description:'Font of the header title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the header title.",minimum:0,type:"number"},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the header title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"The maximum length of the header title in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},titleOrient:{$ref:"#/definitions/Orient",description:'The orientation of the header title. One of `"top"`, `"bottom"`, `"left"` or `"right"`.'},titlePadding:{description:"The padding, in pixel, between facet header's title and the label.\n\n__Default value:__ `10`",type:"number"}},type:"object"},HeaderConfig:{additionalProperties:!1,properties:{format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},labelAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment of header labels."},labelAnchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the labels. One of `"start"`, `"middle"`, or `"end"`. For example, with a label orientation of top these anchor positions map to a left-, center-, or right-aligned label.'},labelAngle:{description:"The rotation angle of the header labels.\n\n__Default value:__ `0` for column header, `-90` for row header.",maximum:360,minimum:-360,type:"number"},labelColor:{description:"The color of the header label, can be in hex color code or regular color name.",type:"string"},labelFont:{description:"The font of the header label.",type:"string"},labelFontSize:{description:"The font size of the header label, in pixels.",minimum:0,type:"number"},labelLimit:{description:"The maximum length of the header label in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},labelOrient:{$ref:"#/definitions/Orient",description:'The orientation of the header label. One of `"top"`, `"bottom"`, `"left"` or `"right"`.'},labelPadding:{description:"The padding, in pixel, between facet header's label and the plot.\n\n__Default value:__ `10`",type:"number"},shortTimeLabels:{description:"Whether month names and weekday names should be abbreviated.\n\n__Default value:__  `false`",type:"boolean"},title:{description:"Set to null to disable title for the axis, legend, or header.",type:"null"},titleAlign:{$ref:"#/definitions/Align",description:"Horizontal text alignment (to the anchor) of header titles."},titleAnchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.'},titleAngle:{description:"The rotation angle of the header title.\n\n__Default value:__ `0`.",maximum:360,minimum:-360,type:"number"},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for the header title. One of `"top"`, `"bottom"`, `"middle"`.\n\n__Default value:__ `"middle"`'},titleColor:{description:"Color of the header title, can be in hex color code or regular color name.",type:"string"},titleFont:{description:'Font of the header title. (e.g., `"Helvetica Neue"`).',type:"string"},titleFontSize:{description:"Font size of the header title.",minimum:0,type:"number"},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight of the header title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"The maximum length of the header title in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},titleOrient:{$ref:"#/definitions/Orient",description:'The orientation of the header title. One of `"top"`, `"bottom"`, `"left"` or `"right"`.'},titlePadding:{description:"The padding, in pixel, between facet header's title and the label.\n\n__Default value:__ `10`",type:"number"}},type:"object"},ImputeMethod:{enum:["value","median","max","min","mean"],type:"string"},ImputeParams:{additionalProperties:!1,properties:{frame:{description:"A frame specification as a two-element array used to control the window over which the specified method is applied. The array entries should either be a number indicating the offset from the current data object, or null to indicate unbounded rows preceding or following the current data object.  For example, the value `[-5, 5]` indicates that the window should include five objects preceding and five objects following the current object.\n\n__Default value:__:  `[null, null]` indicating that the window includes all objects.",items:{type:["null","number"]},type:"array"},keyvals:{anyOf:[{items:{},type:"array"},{$ref:"#/definitions/ImputeSequence"}],description:"Defines the key values that should be considered for imputation.\nAn array of key values or an object defining a [number sequence](https://vega.github.io/vega-lite/docs/impute.html#sequence-def).\n\nIf provided, this will be used in addition to the key values observed within the input data.  If not provided, the values will be derived from all unique values of the `key` field. For `impute` in `encoding`, the key field is the x-field if the y-field is imputed, or vice versa.\n\nIf there is no impute grouping, this property _must_ be specified."},method:{$ref:"#/definitions/ImputeMethod",description:'The imputation method to use for the field value of imputed data objects.\nOne of `value`, `mean`, `median`, `max` or `min`.\n\n__Default value:__  `"value"`'},value:{description:'The field value to use when the imputation `method` is `"value"`.'}},type:"object"},ImputeSequence:{additionalProperties:!1,properties:{start:{description:"The starting value of the sequence.\n__Default value:__ `0`",type:"number"},step:{description:"The step value between sequence entries.\n__Default value:__ `1` or `-1` if `stop < start`",type:"number"},stop:{description:"The ending value(exclusive) of the sequence.",type:"number"}},required:["stop"],type:"object"},ImputeTransform:{additionalProperties:!1,properties:{frame:{description:"A frame specification as a two-element array used to control the window over which the specified method is applied. The array entries should either be a number indicating the offset from the current data object, or null to indicate unbounded rows preceding or following the current data object.  For example, the value `[-5, 5]` indicates that the window should include five objects preceding and five objects following the current object.\n\n__Default value:__:  `[null, null]` indicating that the window includes all objects.",items:{type:["null","number"]},type:"array"},groupby:{description:"An optional array of fields by which to group the values.\nImputation will then be performed on a per-group basis.",items:{type:"string"},type:"array"},impute:{description:"The data field for which the missing values should be imputed.",type:"string"},key:{description:"A key field that uniquely identifies data objects within a group.\nMissing key values (those occurring in the data but not in the current group) will be imputed.",type:"string"},keyvals:{anyOf:[{items:{},type:"array"},{$ref:"#/definitions/ImputeSequence"}],description:"Defines the key values that should be considered for imputation.\nAn array of key values or an object defining a [number sequence](https://vega.github.io/vega-lite/docs/impute.html#sequence-def).\n\nIf provided, this will be used in addition to the key values observed within the input data.  If not provided, the values will be derived from all unique values of the `key` field. For `impute` in `encoding`, the key field is the x-field if the y-field is imputed, or vice versa.\n\nIf there is no impute grouping, this property _must_ be specified."},method:{$ref:"#/definitions/ImputeMethod",description:'The imputation method to use for the field value of imputed data objects.\nOne of `value`, `mean`, `median`, `max` or `min`.\n\n__Default value:__  `"value"`'},value:{description:'The field value to use when the imputation `method` is `"value"`.'}},required:["impute","key"],type:"object"},InlineData:{additionalProperties:!1,properties:{format:{$ref:"#/definitions/DataFormat",description:"An object that specifies the format for parsing the data."},name:{description:"Provide a placeholder name and bind data at runtime.",type:"string"},values:{$ref:"#/definitions/InlineDataset",description:"The full data set, included inline. This can be an array of objects or primitive values, an object, or a string.\nArrays of primitive values are ingested as objects with a `data` property. Strings are parsed according to the specified format type."}},required:["values"],type:"object"},InlineDataset:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{type:"object"},type:"array"},{type:"string"},{type:"object"}]},Interpolate:{enum:["linear","linear-closed","step","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","bundle","monotone"],type:"string"},IntervalSelection:{additionalProperties:!1,properties:{bind:{description:"Establishes a two-way binding between the interval selection and the scales\nused within the same view. This allows a user to interactively pan and\nzoom the view.",enum:["scales"],type:"string"},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefUnitChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitArrayMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and arrays of\ninitial values."},mark:{$ref:"#/definitions/BrushConfig",description:"An interval selection also adds a rectangle mark to depict the\nextents of the interval. The `mark` property can be used to customize the\nappearance of the mark."},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},translate:{description:"When truthy, allows a user to interactively move an interval selection\nback-and-forth. Can be `true`, `false` (to disable panning), or a\n[Vega event stream definition](https://vega.github.io/vega/docs/event-streams/)\nwhich must include a start and end event to trigger continuous panning.\n\n__Default value:__ `true`, which corresponds to\n`[mousedown, window:mouseup] > window:mousemove!` which corresponds to\nclicks and dragging within an interval selection to reposition it.",type:["string","boolean"]},type:{enum:["interval"],type:"string"},zoom:{description:"When truthy, allows a user to interactively resize an interval selection.\nCan be `true`, `false` (to disable zooming), or a [Vega event stream\ndefinition](https://vega.github.io/vega/docs/event-streams/). Currently,\nonly `wheel` events are supported.\n\n\n__Default value:__ `true`, which corresponds to `wheel!`.",type:["string","boolean"]}},required:["type"],type:"object"},IntervalSelectionConfig:{additionalProperties:!1,properties:{bind:{description:"Establishes a two-way binding between the interval selection and the scales\nused within the same view. This allows a user to interactively pan and\nzoom the view.",enum:["scales"],type:"string"},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefUnitChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitArrayMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and arrays of\ninitial values."},mark:{$ref:"#/definitions/BrushConfig",description:"An interval selection also adds a rectangle mark to depict the\nextents of the interval. The `mark` property can be used to customize the\nappearance of the mark."},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},translate:{description:"When truthy, allows a user to interactively move an interval selection\nback-and-forth. Can be `true`, `false` (to disable panning), or a\n[Vega event stream definition](https://vega.github.io/vega/docs/event-streams/)\nwhich must include a start and end event to trigger continuous panning.\n\n__Default value:__ `true`, which corresponds to\n`[mousedown, window:mouseup] > window:mousemove!` which corresponds to\nclicks and dragging within an interval selection to reposition it.",type:["string","boolean"]},zoom:{description:"When truthy, allows a user to interactively resize an interval selection.\nCan be `true`, `false` (to disable zooming), or a [Vega event stream\ndefinition](https://vega.github.io/vega/docs/event-streams/). Currently,\nonly `wheel` events are supported.\n\n\n__Default value:__ `true`, which corresponds to `wheel!`.",type:["string","boolean"]}},type:"object"},JoinAggregateFieldDef:{additionalProperties:!1,properties:{as:{description:"The output name for the join aggregate operation.",type:"string"},field:{description:"The data field for which to compute the aggregate function. This can be omitted for functions that do not operate over a field such as `count`.",type:"string"},op:{$ref:"#/definitions/AggregateOp",description:"The aggregation operation to apply (e.g., sum, average or count). See the list of all supported operations [here](https://vega.github.io/vega-lite/docs/aggregate.html#ops)."}},required:["op","as"],type:"object"},JoinAggregateTransform:{additionalProperties:!1,properties:{groupby:{description:"The data fields for partitioning the data objects into separate groups. If unspecified, all data points will be in a single group.",items:{type:"string"},type:"array"},joinaggregate:{description:"The definition of the fields in the join aggregate, and what calculations to use.",items:{$ref:"#/definitions/JoinAggregateFieldDef"},type:"array"}},required:["joinaggregate"],type:"object"},JsonDataFormat:{additionalProperties:!1,properties:{parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: "date:\'%m%d%Y\'"}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: "utc:\'%m%d%Y\'"}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},property:{description:'The JSON property containing the desired data.\nThis parameter can be used when the loaded JSON file may have surrounding structure or meta-data.\nFor example `"property": "values.features"` is equivalent to retrieving `json.values.features`\nfrom the loaded JSON object.',type:"string"},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["json"],type:"string"}},type:"object"},LabelOverlap:{anyOf:[{type:"boolean"},{enum:["parity"],type:"string"},{enum:["greedy"],type:"string"}]},LatLongFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).',enum:["quantitative"],type:"string"}},type:"object"},LayerSpec:{additionalProperties:!1,description:"A full layered plot specification, which may contains `encoding` and `projection` properties that will be applied to underlying unit (single-view) specifications.",properties:{data:{$ref:"#/definitions/Data",description:"An object describing the data source"},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/Encoding",description:"A shared key-value mapping between encoding channels and definition of fields in the underlying layers."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},layer:{description:"Layer or single view specifications to be layered.\n\n__Note__: Specifications inside `layer` cannot use `row` and `column` channels as layering facet specifications is not allowed. Instead, use the [facet operator](https://vega.github.io/vega-lite/docs/facet.html) and place a layer inside a facet.",items:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/UnitSpec"}]},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},projection:{$ref:"#/definitions/Projection",description:"An object defining properties of the geographic projection shared by underlying layers."},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["layer"],type:"object"},LayoutAlign:{enum:["all","each","none"],type:"string"},LayoutBounds:{anyOf:[{enum:["full"],type:"string"},{enum:["flush"],type:"string"},{$ref:"#/definitions/SignalRef"}]},Legend:{additionalProperties:!1,description:"Properties of a legend or boolean flag for determining whether to show it.",properties:{clipHeight:{description:"The height in pixels to clip symbol legend entries and limit their size.",type:"number"},columnPadding:{description:"The horizontal padding in pixels between symbol legend entries.\n\n__Default value:__ `10`.",type:"number"},columns:{description:"The number of columns in which to arrange symbol legend entries. A value of `0` or lower indicates a single row with one column per entry.",type:"number"},cornerRadius:{description:"Corner radius for the full legend.",type:"number"},direction:{$ref:"#/definitions/Orientation",description:'The direction of the legend, one of `"vertical"` or `"horizontal"`.\n\n__Default value:__\n- For top-/bottom-`orient`ed legends, `"horizontal"`\n- For left-/right-`orient`ed legends, `"vertical"`\n- For top/bottom-left/right-`orient`ed legends, `"horizontal"` for gradient legends and `"vertical"` for symbol legends.'},fillColor:{$ref:"#/definitions/Color",description:"Background fill color for the full legend."},format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},gradientLength:{description:"The length in pixels of the primary axis of a color gradient. This value corresponds to the height of a vertical gradient or the width of a horizontal gradient.\n\n__Default value:__ `200`.",minimum:0,type:"number"},gradientOpacity:{description:"Opacity of the color gradient.",type:"number"},gradientStrokeColor:{$ref:"#/definitions/Color",description:'The color of the gradient stroke, can be in hex color code or regular color name.\n\n__Default value:__ `"lightGray"`.'},gradientStrokeWidth:{description:"The width of the gradient stroke, in pixels.\n\n__Default value:__ `0`.",minimum:0,type:"number"},gradientThickness:{description:"The thickness in pixels of the color gradient. This value corresponds to the width of a vertical gradient or the height of a horizontal gradient.\n\n__Default value:__ `16`.",minimum:0,type:"number"},gridAlign:{$ref:"#/definitions/LayoutAlign",description:'The alignment to apply to symbol legends rows and columns. The supported string values are `"all"`, `"each"` (the default), and `none`. For more information, see the [grid layout documentation](https://vega.github.io/vega/docs/layout).\n\n__Default value:__ `"each"`.'},labelAlign:{$ref:"#/definitions/Align",description:"The alignment of the legend label, can be left, center, or right."},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'The position of the baseline of legend label, can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.\n\n__Default value:__ `"middle"`.'},labelColor:{$ref:"#/definitions/Color",description:"The color of the legend label, can be in hex color code or regular color name."},labelFont:{description:"The font of the legend label.",type:"string"},labelFontSize:{description:"The font size of legend label.\n\n__Default value:__ `10`.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of legend label."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"The font weight of legend label."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `160`.",type:"number"},labelOffset:{description:"The offset of the legend label.",type:"number"},labelOpacity:{description:"Opacity of labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of labels in gradient legends. If `false`, no overlap reduction is attempted. If set to `true` (default) or `"parity"`, a strategy of removing every other label is used. If set to `"greedy"`, a linear scan of the labels is performed, removing any label that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `true`.'},labelPadding:{description:"Padding in pixels between the legend and legend labels.",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},offset:{description:"The offset in pixels by which to displace the legend from the data rectangle and axes.\n\n__Default value:__ `18`.",type:"number"},orient:{$ref:"#/definitions/LegendOrient",description:'The orientation of the legend, which determines how the legend is positioned within the scene. One of `"left"`, `"right"`, `"top-left"`, `"top-right"`, `"bottom-left"`, `"bottom-right"`, `"none"`.\n\n__Default value:__ `"right"`'},padding:{description:"The padding between the border and content of the legend group.\n\n__Default value:__ `0`.",type:"number"},rowPadding:{description:"The vertical padding in pixels between symbol legend entries.\n\n__Default value:__ `2`.",type:"number"},strokeColor:{$ref:"#/definitions/Color",description:"Border stroke color for the full legend."},symbolDash:{description:"An array of alternating [stroke, space] lengths for dashed symbol strokes.",items:{type:"number"},type:"array"},symbolDashOffset:{description:"The pixel offset at which to start drawing with the symbol stroke dash array.",type:"number"},symbolFillColor:{$ref:"#/definitions/Color",description:"The color of the legend symbol,"},symbolOffset:{description:"Horizontal pixel offset for legend symbols.\n\n__Default value:__ `0`.",type:"number"},symbolOpacity:{description:"Opacity of the legend symbols.",type:"number"},symbolSize:{description:"The size of the legend symbol, in pixels.\n\n__Default value:__ `100`.",minimum:0,type:"number"},symbolStrokeColor:{$ref:"#/definitions/Color",description:"Stroke color for legend symbols."},symbolStrokeWidth:{description:"The width of the symbol's stroke.\n\n__Default value:__ `1.5`.",minimum:0,type:"number"},symbolType:{$ref:"#/definitions/SymbolShape",description:'Default shape type (such as "circle") for legend symbols.\nCan be one of ``"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n   * In addition to a set of built-in shapes, custom shapes can be defined using [SVG path strings](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths).\n   *\n   * __Default value:__ `"circle"`.\n   *'},tickCount:{description:"The desired number of tick values for quantitative legends.",type:"number"},tickMinStep:{description:"The minimum desired step between legend ticks, in terms of scale domain values. For example, a value of `1` indicates that ticks should not be less than 1 unit apart. If `tickMinStep` is specified, the `tickCount` value will be adjusted, if necessary, to enforce the minimum step value.\n\n__Default value__: `undefined`",type:"number"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},titleAlign:{$ref:"#/definitions/Align",description:'Horizontal text alignment for legend titles.\n\n__Default value:__ `"left"`.'},titleAnchor:{$ref:"#/definitions/TitleAnchor",description:"Text anchor position for placing legend titles."},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for legend titles.\n\n__Default value:__ `"top"`.'},titleColor:{$ref:"#/definitions/Color",description:"The color of the legend title, can be in hex color code or regular color name."},titleFont:{description:"The font of the legend title.",type:"string"},titleFontSize:{description:"The font size of the legend title.",type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of the legend title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight of the legend title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.\n\n__Default value:__ `180`.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the legend title.",type:"number"},titleOrient:{$ref:"#/definitions/Orient",description:"Orientation of the legend title."},titlePadding:{description:"The padding, in pixels, between title and legend.\n\n__Default value:__ `5`.",type:"number"},type:{description:'The type of the legend. Use `"symbol"` to create a discrete legend and `"gradient"` for a continuous color gradient.\n\n__Default value:__ `"gradient"` for non-binned quantitative fields and temporal fields; `"symbol"` otherwise.',enum:["symbol","gradient"],type:"string"},values:{description:"Explicitly set the visible legend values.",items:{anyOf:[{type:"number"},{type:"string"},{type:"boolean"},{$ref:"#/definitions/DateTime"}]},type:"array"},zindex:{description:"A non-positive integer indicating z-index of the legend.\nIf zindex is 0, legend should be drawn behind all chart elements.\nTo put them in front, use zindex = 1.",minimum:0,type:"number"}},type:"object"},LegendConfig:{additionalProperties:!1,properties:{clipHeight:{description:"The height in pixels to clip symbol legend entries and limit their size.",type:"number"},columnPadding:{description:"The horizontal padding in pixels between symbol legend entries.\n\n__Default value:__ `10`.",type:"number"},columns:{description:"The number of columns in which to arrange symbol legend entries. A value of `0` or lower indicates a single row with one column per entry.",type:"number"},cornerRadius:{description:"Corner radius for the full legend.",type:"number"},fillColor:{$ref:"#/definitions/Color",description:"Background fill color for the full legend."},gradientDirection:{$ref:"#/definitions/Orientation",description:'The default direction (`"horizontal"` or `"vertical"`) for gradient legends.\n\n__Default value:__ `"vertical"`.'},gradientHorizontalMaxLength:{description:"Max legend length for a horizontal gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `200`",type:"number"},gradientHorizontalMinLength:{description:"Min legend length for a horizontal gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `100`",type:"number"},gradientLabelLimit:{description:"The maximum allowed length in pixels of color ramp gradient labels.",type:"number"},gradientLabelOffset:{description:"Vertical offset in pixels for color ramp gradient labels.\n\n__Default value:__ `2`.",type:"number"},gradientLength:{description:"The length in pixels of the primary axis of a color gradient. This value corresponds to the height of a vertical gradient or the width of a horizontal gradient.\n\n__Default value:__ `200`.",minimum:0,type:"number"},gradientOpacity:{description:"Opacity of the color gradient.",type:"number"},gradientStrokeColor:{$ref:"#/definitions/Color",description:'The color of the gradient stroke, can be in hex color code or regular color name.\n\n__Default value:__ `"lightGray"`.'},gradientStrokeWidth:{description:"The width of the gradient stroke, in pixels.\n\n__Default value:__ `0`.",minimum:0,type:"number"},gradientThickness:{description:"The thickness in pixels of the color gradient. This value corresponds to the width of a vertical gradient or the height of a horizontal gradient.\n\n__Default value:__ `16`.",minimum:0,type:"number"},gradientVerticalMaxLength:{description:"Max legend length for a vertical gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `200`",type:"number"},gradientVerticalMinLength:{description:"Min legend length for a vertical gradient when `config.legend.gradientLength` is undefined.\n\n__Default value:__ `100`",type:"number"},gridAlign:{$ref:"#/definitions/LayoutAlign",description:'The alignment to apply to symbol legends rows and columns. The supported string values are `"all"`, `"each"` (the default), and `none`. For more information, see the [grid layout documentation](https://vega.github.io/vega/docs/layout).\n\n__Default value:__ `"each"`.'},labelAlign:{$ref:"#/definitions/Align",description:"The alignment of the legend label, can be left, center, or right."},labelBaseline:{$ref:"#/definitions/TextBaseline",description:'The position of the baseline of legend label, can be `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.\n\n__Default value:__ `"middle"`.'},labelColor:{$ref:"#/definitions/Color",description:"The color of the legend label, can be in hex color code or regular color name."},labelFont:{description:"The font of the legend label.",type:"string"},labelFontSize:{description:"The font size of legend label.\n\n__Default value:__ `10`.",minimum:0,type:"number"},labelFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of legend label."},labelFontWeight:{$ref:"#/definitions/FontWeight",description:"The font weight of legend label."},labelLimit:{description:"Maximum allowed pixel width of axis tick labels.\n\n__Default value:__ `160`.",type:"number"},labelOffset:{description:"The offset of the legend label.",type:"number"},labelOpacity:{description:"Opacity of labels.",type:"number"},labelOverlap:{$ref:"#/definitions/LabelOverlap",description:'The strategy to use for resolving overlap of labels in gradient legends. If `false`, no overlap reduction is attempted. If set to `true` or `"parity"`, a strategy of removing every other label is used. If set to `"greedy"`, a linear scan of the labels is performed, removing any label that overlaps with the last visible label (this often works better for log-scaled axes).\n\n__Default value:__ `"greedy"` for `log scales otherwise `true`.\n   *'},labelPadding:{description:"Padding in pixels between the legend and legend labels.",type:"number"},labelSeparation:{description:"The minimum separation that must be between label bounding boxes for them to be considered non-overlapping (default `0`). This property is ignored if *labelOverlap* resolution is not enabled.",type:"number"},layout:{$ref:"#/definitions/LegendLayout",description:"Legend orient group layout parameters."},offset:{description:"The offset in pixels by which to displace the legend from the data rectangle and axes.\n\n__Default value:__ `18`.",type:"number"},orient:{$ref:"#/definitions/LegendOrient",description:'The orientation of the legend, which determines how the legend is positioned within the scene. One of "left", "right", "top-left", "top-right", "bottom-left", "bottom-right", "none".\n\n__Default value:__ `"right"`'},padding:{description:"The padding between the border and content of the legend group.\n\n__Default value:__ `0`.",type:"number"},rowPadding:{description:"The vertical padding in pixels between symbol legend entries.\n\n__Default value:__ `2`.",type:"number"},shortTimeLabels:{description:"Whether month names and weekday names should be abbreviated.\n\n__Default value:__  `false`",type:"boolean"},strokeColor:{$ref:"#/definitions/Color",description:"Border stroke color for the full legend."},strokeDash:{description:"Border stroke dash pattern for the full legend.",items:{type:"number"},type:"array"},strokeWidth:{description:"Border stroke width for the full legend.",type:"number"},symbolBaseFillColor:{$ref:"#/definitions/Color",description:'Default fill color for legend symbols. Only applied if there is no `"fill"` scale color encoding for the legend.\n\n__Default value:__ `"transparent"`.'},symbolBaseStrokeColor:{$ref:"#/definitions/Color",description:'Default stroke color for legend symbols. Only applied if there is no `"fill"` scale color encoding for the legend.\n\n__Default value:__ `"gray"`.'},symbolDash:{description:"An array of alternating [stroke, space] lengths for dashed symbol strokes.",items:{type:"number"},type:"array"},symbolDashOffset:{description:"The pixel offset at which to start drawing with the symbol stroke dash array.",type:"number"},symbolDirection:{$ref:"#/definitions/Orientation",description:'The default direction (`"horizontal"` or `"vertical"`) for symbol legends.\n\n__Default value:__ `"vertical"`.'},symbolFillColor:{$ref:"#/definitions/Color",description:"The color of the legend symbol,"},symbolOffset:{description:"Horizontal pixel offset for legend symbols.\n\n__Default value:__ `0`.",type:"number"},symbolOpacity:{description:"Opacity of the legend symbols.",type:"number"},symbolSize:{description:"The size of the legend symbol, in pixels.\n\n__Default value:__ `100`.",minimum:0,type:"number"},symbolStrokeColor:{$ref:"#/definitions/Color",description:"Stroke color for legend symbols."},symbolStrokeWidth:{description:"The width of the symbol's stroke.\n\n__Default value:__ `1.5`.",minimum:0,type:"number"},symbolType:{$ref:"#/definitions/SymbolShape",description:'Default shape type (such as "circle") for legend symbols.\nCan be one of ``"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n   * In addition to a set of built-in shapes, custom shapes can be defined using [SVG path strings](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths).\n   *\n   * __Default value:__ `"circle"`.\n   *'},title:{description:"Set to null to disable title for the axis, legend, or header.",type:"null"},titleAlign:{$ref:"#/definitions/Align",description:'Horizontal text alignment for legend titles.\n\n__Default value:__ `"left"`.'},titleAnchor:{$ref:"#/definitions/TitleAnchor",description:"Text anchor position for placing legend titles."},titleBaseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for legend titles.\n\n__Default value:__ `"top"`.'},titleColor:{$ref:"#/definitions/Color",description:"The color of the legend title, can be in hex color code or regular color name."},titleFont:{description:"The font of the legend title.",type:"string"},titleFontSize:{description:"The font size of the legend title.",type:"number"},titleFontStyle:{$ref:"#/definitions/FontStyle",description:"The font style of the legend title."},titleFontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight of the legend title.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},titleLimit:{description:"Maximum allowed pixel width of axis titles.\n\n__Default value:__ `180`.",minimum:0,type:"number"},titleOpacity:{description:"Opacity of the legend title.",type:"number"},titleOrient:{$ref:"#/definitions/Orient",description:"Orientation of the legend title."},titlePadding:{description:"The padding, in pixels, between title and legend.\n\n__Default value:__ `5`.",type:"number"}},type:"object"},LegendLayout:{additionalProperties:!1,properties:{anchor:{$ref:"#/definitions/TitleAnchor",description:"The anchor point for legend orient group layout."},bottom:{$ref:"#/definitions/BaseLegendLayout"},"bottom-left":{$ref:"#/definitions/BaseLegendLayout"},"bottom-right":{$ref:"#/definitions/BaseLegendLayout"},bounds:{$ref:"#/definitions/LayoutBounds",description:"The bounds calculation to use for legend orient group layout."},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/SignalRef"}],description:"A flag to center legends within a shared orient group."},direction:{anyOf:[{$ref:"#/definitions/Orientation"},{$ref:"#/definitions/SignalRef"}],description:"The layout direction for legend orient group layout."},left:{$ref:"#/definitions/BaseLegendLayout"},margin:{anyOf:[{type:"number"},{$ref:"#/definitions/SignalRef"}],description:"The pixel margin between legends within a orient group."},offset:{anyOf:[{type:"number"},{$ref:"#/definitions/SignalRef"}],description:"The pixel offset from the chart body for a legend orient group."},right:{$ref:"#/definitions/BaseLegendLayout"},top:{$ref:"#/definitions/BaseLegendLayout"},"top-left":{$ref:"#/definitions/BaseLegendLayout"},"top-right":{$ref:"#/definitions/BaseLegendLayout"}},type:"object"},LegendOrient:{enum:["none","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],type:"string"},LegendResolveMap:{additionalProperties:!1,properties:{color:{$ref:"#/definitions/ResolveMode"},fill:{$ref:"#/definitions/ResolveMode"},fillOpacity:{$ref:"#/definitions/ResolveMode"},opacity:{$ref:"#/definitions/ResolveMode"},shape:{$ref:"#/definitions/ResolveMode"},size:{$ref:"#/definitions/ResolveMode"},stroke:{$ref:"#/definitions/ResolveMode"},strokeOpacity:{$ref:"#/definitions/ResolveMode"},strokeWidth:{$ref:"#/definitions/ResolveMode"}},type:"object"},LineConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},point:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"},{enum:["transparent"],type:"string"}],description:'A flag for overlaying points on top of line or area marks, or an object defining the properties of the overlayed points.\n\n- If this property is `"transparent"`, transparent points will be used (for enhancing tooltips and selections).\n\n- If this property is an empty object (`{}`) or `true`, filled points with default properties will be used.\n\n- If this property is `false`, no points would be automatically added to line or area marks.\n\n__Default value:__ `false`.'},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"}},type:"object"},LocalMultiTimeUnit:{enum:["yearquarter","yearquartermonth","yearmonth","yearmonthdate","yearmonthdatehours","yearmonthdatehoursminutes","yearmonthdatehoursminutesseconds","quartermonth","monthdate","monthdatehours","hoursminutes","hoursminutesseconds","minutesseconds","secondsmilliseconds"],type:"string"},LocalSingleTimeUnit:{enum:["year","quarter","month","day","date","hours","minutes","seconds","milliseconds"],type:"string"},"LogicalAnd<Predicate>":{additionalProperties:!1,properties:{and:{items:{$ref:"#/definitions/LogicalOperand<Predicate>"},type:"array"}},required:["and"],type:"object"},SelectionAnd:{additionalProperties:!1,properties:{and:{items:{$ref:"#/definitions/SelectionOperand"},type:"array"}},required:["and"],type:"object"},"LogicalNot<Predicate>":{additionalProperties:!1,properties:{not:{$ref:"#/definitions/LogicalOperand<Predicate>"}},required:["not"],type:"object"},SelectionNot:{additionalProperties:!1,properties:{not:{$ref:"#/definitions/SelectionOperand"}},required:["not"],type:"object"},"LogicalOperand<Predicate>":{anyOf:[{$ref:"#/definitions/LogicalNot<Predicate>"},{$ref:"#/definitions/LogicalAnd<Predicate>"},{$ref:"#/definitions/LogicalOr<Predicate>"},{$ref:"#/definitions/Predicate"}]},SelectionOperand:{anyOf:[{$ref:"#/definitions/SelectionNot"},{$ref:"#/definitions/SelectionAnd"},{$ref:"#/definitions/SelectionOr"},{type:"string"}]},"LogicalOr<Predicate>":{additionalProperties:!1,properties:{or:{items:{$ref:"#/definitions/LogicalOperand<Predicate>"},type:"array"}},required:["or"],type:"object"},SelectionOr:{additionalProperties:!1,properties:{or:{items:{$ref:"#/definitions/SelectionOperand"},type:"array"}},required:["or"],type:"object"},LookupData:{additionalProperties:!1,properties:{data:{$ref:"#/definitions/Data",description:"Secondary data source to lookup in."},fields:{description:"Fields in foreign data to lookup.\nIf not specified, the entire object is queried.",items:{type:"string"},type:"array"},key:{description:"Key in data to lookup.",type:"string"}},required:["data","key"],type:"object"},LookupTransform:{additionalProperties:!1,properties:{as:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:"The field or fields for storing the computed formula value.\nIf `from.fields` is specified, the transform will use the same names for `as`.\nIf `from.fields` is not specified, `as` has to be a string and we put the whole object into the data under the specified name."},default:{description:"The default value to use if lookup fails.\n\n__Default value:__ `null`",type:"string"},from:{$ref:"#/definitions/LookupData",description:"Secondary data reference."},lookup:{description:"Key in primary data source.",type:"string"}},required:["lookup","from"],type:"object"},Mark:{description:"All types of primitive marks.",enum:["area","bar","line","trail","point","text","tick","rect","rule","circle","square","geoshape"],type:"string"},MarkConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"}},type:"object"},MarkDef:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},binSpacing:{description:"Offset between bars for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).\n\n__Default value:__ `1`",minimum:0,type:"number"},clip:{description:"Whether a mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},line:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"}],description:"A flag for overlaying line on top of area marks, or an object defining the properties of the overlayed lines.\n\n- If this value is an empty object (`{}`) or `true`, lines with default properties will be used.\n\n- If this value is `false`, no lines would be automatically added to area marks.\n\n__Default value:__ `false`."},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},point:{anyOf:[{type:"boolean"},{$ref:"#/definitions/OverlayMarkDef"},{enum:["transparent"],type:"string"}],description:'A flag for overlaying points on top of line or area marks, or an object defining the properties of the overlayed points.\n\n- If this property is `"transparent"`, transparent points will be used (for enhancing tooltips and selections).\n\n- If this property is an empty object (`{}`) or `true`, filled points with default properties will be used.\n\n- If this property is `false`, no points would be automatically added to line or area marks.\n\n__Default value:__ `false`.'},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},style:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'A string or array of strings indicating the name of custom styles to apply to the mark. A style is a named collection of mark property defaults defined within the [style configuration](https://vega.github.io/vega-lite/docs/mark.html#style-config). If style is an array, later styles will override earlier styles. Any [mark properties](https://vega.github.io/vega-lite/docs/encoding.html#mark-prop) explicitly defined within the `encoding` will override a style default.\n\n__Default value:__ The mark\'s name.  For example, a bar mark will have style `"bar"` by default.\n__Note:__ Any specified style will augment the default style. For example, a bar mark with `"style": "foo"` will receive from `config.style.bar` and `config.style.foo` (the specified style `"foo"` has higher precedence).'},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},thickness:{description:"Thickness of the tick mark.\n\n__Default value:__  `1`",minimum:0,type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},type:{$ref:"#/definitions/Mark",description:'The mark type. This could a primitive mark type\n(one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"geoshape"`, `"rule"`, and `"text"`)\nor a composite mark type (`"boxplot"`, `"errorband"`, `"errorbar"`).'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},x2Offset:{description:"Offset for x2-position.",type:"number"},xOffset:{description:"Offset for x-position.",type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y2Offset:{description:"Offset for y2-position.",type:"number"},yOffset:{description:"Offset for y-position.",type:"number"}},required:["type"],type:"object"},Month:{maximum:12,minimum:1,type:"number"},MultiSelection:{additionalProperties:!1,properties:{empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefUnitChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{anyOf:[{$ref:"#/definitions/SelectionInitMapping"},{items:{$ref:"#/definitions/SelectionInitMapping"},type:"array"}],description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and an initial\nvalue (or array of values)."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},toggle:{description:"Controls whether data values should be toggled or only ever inserted into\nmulti selections. Can be `true`, `false` (for insertion only), or a\n[Vega expression](https://vega.github.io/vega/docs/expressions/).\n\n__Default value:__ `true`, which corresponds to `event.shiftKey` (i.e.,\ndata values are toggled when a user interacts with the shift-key pressed).\n\nSee the [toggle transform](https://vega.github.io/vega-lite/docs/toggle.html) documentation for more information.",type:["string","boolean"]},type:{enum:["multi"],type:"string"}},required:["type"],type:"object"},MultiSelectionConfig:{additionalProperties:!1,properties:{empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefUnitChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{anyOf:[{$ref:"#/definitions/SelectionInitMapping"},{items:{$ref:"#/definitions/SelectionInitMapping"},type:"array"}],description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and an initial\nvalue (or array of values)."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},toggle:{description:"Controls whether data values should be toggled or only ever inserted into\nmulti selections. Can be `true`, `false` (for insertion only), or a\n[Vega expression](https://vega.github.io/vega/docs/expressions/).\n\n__Default value:__ `true`, which corresponds to `event.shiftKey` (i.e.,\ndata values are toggled when a user interacts with the shift-key pressed).\n\nSee the [toggle transform](https://vega.github.io/vega-lite/docs/toggle.html) documentation for more information.",type:["string","boolean"]}},type:"object"},MultiTimeUnit:{anyOf:[{$ref:"#/definitions/LocalMultiTimeUnit"},{$ref:"#/definitions/UtcMultiTimeUnit"}]},NamedData:{additionalProperties:!1,properties:{format:{$ref:"#/definitions/DataFormat",description:"An object that specifies the format for parsing the data."},name:{description:"Provide a placeholder name and bind data at runtime.",type:"string"}},required:["name"],type:"object"},NiceTime:{enum:["second","minute","hour","day","week","month","year"],type:"string"},NumericFieldDefWithCondition:{$ref:"#/definitions/FieldDefWithCondition<MarkPropFieldDef,number>"},NumericValueDefWithCondition:{$ref:"#/definitions/ValueDefWithCondition<MarkPropFieldDef,number>"},OrderFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},sort:{$ref:"#/definitions/SortOrder",description:'The sort order. One of `"ascending"` (default) or `"descending"`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},Orient:{enum:["left","right","top","bottom"],type:"string"},Orientation:{enum:["horizontal","vertical"],type:"string"},OverlayMarkDef:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},clip:{description:"Whether a mark be clipped to the enclosing group’s width and height.",type:"boolean"},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},style:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'A string or array of strings indicating the name of custom styles to apply to the mark. A style is a named collection of mark property defaults defined within the [style configuration](https://vega.github.io/vega-lite/docs/mark.html#style-config). If style is an array, later styles will override earlier styles. Any [mark properties](https://vega.github.io/vega-lite/docs/encoding.html#mark-prop) explicitly defined within the `encoding` will override a style default.\n\n__Default value:__ The mark\'s name.  For example, a bar mark will have style `"bar"` by default.\n__Note:__ Any specified style will augment the default style. For example, a bar mark with `"style": "foo"` will receive from `config.style.bar` and `config.style.foo` (the specified style `"foo"` has higher precedence).'},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},x2Offset:{description:"Offset for x2-position.",type:"number"},xOffset:{description:"Offset for x-position.",type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y2Offset:{description:"Offset for y2-position.",type:"number"},yOffset:{description:"Offset for y-position.",type:"number"}},type:"object"},Padding:{anyOf:[{type:"number"},{additionalProperties:!1,properties:{bottom:{type:"number"},left:{type:"number"},right:{type:"number"},top:{type:"number"}},type:"object"}],minimum:0},Parse:{additionalProperties:{$ref:"#/definitions/ParseValue"},type:"object"},ParseValue:{anyOf:[{type:"null"},{type:"string"},{enum:["string"],type:"string"},{enum:["boolean"],type:"string"},{enum:["date"],type:"string"},{enum:["number"],type:"string"}]},"PartsMixins<BoxPlotPart>":{additionalProperties:!1,description:"Make all properties in T optional",properties:{box:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},median:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},outliers:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},"PartsMixins<ErrorBandPart>":{additionalProperties:!1,description:"Make all properties in T optional",properties:{band:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},borders:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},"PartsMixins<ErrorBarPart>":{additionalProperties:!1,description:"Make all properties in T optional",properties:{rule:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]},ticks:{anyOf:[{type:"boolean"},{$ref:"#/definitions/MarkConfig"}]}},type:"object"},PositionFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},axis:{anyOf:[{$ref:"#/definitions/Axis"},{type:"null"}],description:"An object defining properties of axis's gridlines, ticks and labels.\nIf `null`, the axis for the encoding channel will be removed.\n\n__Default value:__ If undefined, default [axis properties](https://vega.github.io/vega-lite/docs/axis.html) are applied."},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},impute:{$ref:"#/definitions/ImputeParams",description:"An object defining the properties of the Impute Operation to be applied.\nThe field value of the other positional channel is taken as `key` of the `Impute` Operation.\nThe field of the `color` channel if specified is used as `groupby` of the `Impute` Operation."},scale:{anyOf:[{$ref:"#/definitions/Scale"},{type:"null"}],description:"An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n\nIf `null`, the scale will be [disabled and the data value will be directly encoded](https://vega.github.io/vega-lite/docs/scale.html#disable).\n\n__Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied."},sort:{$ref:"#/definitions/Sort",description:'Sort order for the encoded field.\n\nFor continuous fields (quantitative or temporal), `sort` can be either `"ascending"` or `"descending"`.\n\nFor discrete fields, `sort` can be one of the following:\n- `"ascending"` or `"descending"` -- for sorting by the values\' natural order in Javascript.\n- [A sort-by-encoding definition](https://vega.github.io/vega-lite/docs/sort.html#sort-by-encoding) for sorting by another encoding channel. (This type of sort definition is not available for `row` and `column` channels.)\n- [A sort field definition](https://vega.github.io/vega-lite/docs/sort.html#sort-field) for sorting by another field.\n- [An array specifying the field values in preferred order](https://vega.github.io/vega-lite/docs/sort.html#sort-array). In this case, the sort order will obey the values in the array, followed by any unspecified values in their original order.  For discrete time field, values in the sort array can be [date-time definition objects](types#datetime). In addition, for time units `"month"` and `"day"`, the values can be the month or day names (case insensitive) or their 3-letter initials (e.g., `"Mon"`, `"Tue"`).\n- `null` indicating no sort.\n\n__Default value:__ `"ascending"`\n\n__Note:__ `null` is not supported for `row` and `column`.'},stack:{anyOf:[{$ref:"#/definitions/StackOffset"},{type:"null"}],description:'Type of stacking offset if the field should be stacked.\n`stack` is only applicable for `x` and `y` channels with continuous domains.\nFor example, `stack` of `y` can be used to customize stacking for a vertical bar chart.\n\n`stack` can be one of the following values:\n- `"zero"`: stacking with baseline offset at zero value of the scale (for creating typical stacked [bar](https://vega.github.io/vega-lite/docs/stack.html#bar) and [area](https://vega.github.io/vega-lite/docs/stack.html#area) chart).\n- `"normalize"` - stacking with normalized domain (for creating [normalized stacked bar and area charts](https://vega.github.io/vega-lite/docs/stack.html#normalized). <br/>\n-`"center"` - stacking with center baseline (for [streamgraph](https://vega.github.io/vega-lite/docs/stack.html#streamgraph)).\n- `null` - No-stacking. This will produce layered [bar](https://vega.github.io/vega-lite/docs/stack.html#layered-bar-chart) and area chart.\n\n__Default value:__ `zero` for plots with all of the following conditions are true:\n(1) the mark is `bar` or `area`;\n(2) the stacked measure channel (x or y) has a linear scale;\n(3) At least one of non-position channels mapped to an unaggregated field that is different from x and y.  Otherwise, `null` by default.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},Predicate:{anyOf:[{$ref:"#/definitions/FieldEqualPredicate"},{$ref:"#/definitions/FieldRangePredicate"},{$ref:"#/definitions/FieldOneOfPredicate"},{$ref:"#/definitions/FieldLTPredicate"},{$ref:"#/definitions/FieldGTPredicate"},{$ref:"#/definitions/FieldLTEPredicate"},{$ref:"#/definitions/FieldGTEPredicate"},{$ref:"#/definitions/FieldValidPredicate"},{$ref:"#/definitions/SelectionPredicate"},{type:"string"}]},Projection:{additionalProperties:!1,properties:{center:{description:"Sets the projection’s center to the specified center, a two-element array of longitude and latitude in degrees.\n\n__Default value:__ `[0, 0]`",items:{type:"number"},type:"array"},clipAngle:{description:"Sets the projection’s clipping circle radius to the specified angle in degrees. If `null`, switches to [antimeridian](http://bl.ocks.org/mbostock/3788999) cutting rather than small-circle clipping.",type:"number"},clipExtent:{description:"Sets the projection’s viewport clip extent to the specified bounds in pixels. The extent bounds are specified as an array `[[x0, y0], [x1, y1]]`, where `x0` is the left-side of the viewport, `y0` is the top, `x1` is the right and `y1` is the bottom. If `null`, no viewport clipping is performed.",items:{items:{type:"number"},type:"array"},type:"array"},coefficient:{type:"number"},distance:{type:"number"},fraction:{type:"number"},lobes:{type:"number"},parallel:{type:"number"},precision:{description:"Sets the threshold for the projection’s [adaptive resampling](http://bl.ocks.org/mbostock/3795544) to the specified value in pixels. This value corresponds to the [Douglas–Peucker distance](http://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm). If precision is not specified, returns the projection’s current resampling precision which defaults to `√0.5 ≅ 0.70710…`.",type:"string"},radius:{type:"number"},ratio:{type:"number"},reflectX:{type:"boolean"},reflectY:{type:"boolean"},rotate:{description:"Sets the projection’s three-axis rotation to the specified angles, which must be a two- or three-element array of numbers [`lambda`, `phi`, `gamma`] specifying the rotation angles in degrees about each spherical axis. (These correspond to yaw, pitch and roll.)\n\n__Default value:__ `[0, 0, 0]`",items:{type:"number"},type:"array"},spacing:{type:"number"},tilt:{type:"number"},type:{$ref:"#/definitions/ProjectionType",description:'The cartographic projection to use. This value is case-insensitive, for example `"albers"` and `"Albers"` indicate the same projection type. You can find all valid projection types [in the documentation](https://vega.github.io/vega-lite/docs/projection.html#projection-types).\n\n__Default value:__ `mercator`'}},type:"object"},ProjectionConfig:{$ref:"#/definitions/Projection",description:"Any property of Projection can be in config"},ProjectionType:{enum:["albers","albersUsa","azimuthalEqualArea","azimuthalEquidistant","conicConformal","conicEqualArea","conicEquidistant","equirectangular","gnomonic","identity","mercator","orthographic","stereographic","transverseMercator"],type:"string"},RangeConfig:{additionalProperties:{$ref:"#/definitions/RangeConfigValue"},properties:{category:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _nominal_ (categorical) fields."},diverging:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for diverging _quantitative_ fields."},heatmap:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _quantitative_ heatmaps."},ordinal:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _ordinal_ fields."},ramp:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/SchemeConfig"}],description:"Default range for _quantitative_ and _temporal_ fields."},symbol:{description:"Default range palette for the `shape` channel.",items:{type:"string"},type:"array"}},type:"object"},RangeConfigValue:{anyOf:[{items:{type:["number","string"]},type:"array"},{$ref:"#/definitions/SchemeConfig"},{additionalProperties:!1,properties:{step:{type:"number"}},required:["step"],type:"object"}]},RepeatMapping:{additionalProperties:!1,properties:{column:{description:"An array of fields to be repeated horizontally.",items:{type:"string"},type:"array"},row:{description:"An array of fields to be repeated vertically.",items:{type:"string"},type:"array"}},type:"object"},RepeatRef:{additionalProperties:!1,description:"Reference to a repeated value.",properties:{repeat:{enum:["row","column","repeat"],type:"string"}},required:["repeat"],type:"object"},Resolve:{additionalProperties:!1,description:"Defines how scales, axes, and legends from different specs should be combined. Resolve is a mapping from `scale`, `axis`, and `legend` to a mapping from channels to resolutions.",properties:{axis:{$ref:"#/definitions/AxisResolveMap"},legend:{$ref:"#/definitions/LegendResolveMap"},scale:{$ref:"#/definitions/ScaleResolveMap"}},type:"object"},ResolveMode:{enum:["independent","shared"],type:"string"},"RowCol<LayoutAlign>":{additionalProperties:!1,properties:{column:{$ref:"#/definitions/LayoutAlign"},row:{$ref:"#/definitions/LayoutAlign"}},type:"object"},"RowCol<boolean>":{additionalProperties:!1,properties:{column:{type:"boolean"},row:{type:"boolean"}},type:"object"},"RowCol<number>":{additionalProperties:!1,properties:{column:{type:"number"},row:{type:"number"}},type:"object"},SampleTransform:{additionalProperties:!1,properties:{sample:{description:"The maximum number of data objects to include in the sample.\n\n__Default value:__ `1000`",type:"number"}},required:["sample"],type:"object"},Scale:{additionalProperties:!1,properties:{base:{description:"The logarithm base of the `log` scale (default `10`).",type:"number"},bins:{description:"An array of bin boundaries over the scale domain. If provided, axes and legends will use the bin boundaries to inform the choice of tick marks and text labels.",items:{type:"number"},type:"array"},clamp:{description:"If `true`, values that exceed the data domain are clamped to either the minimum or maximum range value\n\n__Default value:__ derived from the [scale config](https://vega.github.io/vega-lite/docs/config.html#scale-config)'s `clamp` (`true` by default).",type:"boolean"},constant:{description:"A constant determining the slope of the symlog function around zero. Only used for `symlog` scales.\n\n__Default value:__ `1`",type:"number"},domain:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"},{enum:["unaggregated"],type:"string"},{$ref:"#/definitions/SelectionDomain"}],description:'Customized domain values.\n\nFor _quantitative_ fields, `domain` can take the form of a two-element array with minimum and maximum values.  [Piecewise scales](https://vega.github.io/vega-lite/docs/scale.html#piecewise) can be created by providing a `domain` with more than two entries.\nIf the input field is aggregated, `domain` can also be a string value `"unaggregated"`, indicating that the domain should include the raw data values prior to the aggregation.\n\nFor _temporal_ fields, `domain` can be a two-element array minimum and maximum values, in the form of either timestamps or the [DateTime definition objects](https://vega.github.io/vega-lite/docs/types.html#datetime).\n\nFor _ordinal_ and _nominal_ fields, `domain` can be an array that lists valid input values.\n\nThe `selection` property can be used to [interactively determine](https://vega.github.io/vega-lite/docs/selection.html#scale-domains) the scale domain.'},exponent:{description:"The exponent of the `pow` scale.",type:"number"},interpolate:{anyOf:[{$ref:"#/definitions/ScaleInterpolate"},{$ref:"#/definitions/ScaleInterpolateParams"}],description:"The interpolation method for range values. By default, a general interpolator for numbers, dates, strings and colors (in HCL space) is used. For color ranges, this property allows interpolation in alternative color spaces. Legal values include `rgb`, `hsl`, `hsl-long`, `lab`, `hcl`, `hcl-long`, `cubehelix` and `cubehelix-long` ('-long' variants use longer paths in polar coordinate spaces). If object-valued, this property accepts an object with a string-valued _type_ property and an optional numeric _gamma_ property applicable to rgb and cubehelix interpolators. For more, see the [d3-interpolate documentation](https://github.com/d3/d3-interpolate).\n\n* __Default value:__ `hcl`"},nice:{anyOf:[{type:"boolean"},{type:"number"},{$ref:"#/definitions/NiceTime"},{additionalProperties:!1,properties:{interval:{type:"string"},step:{type:"number"}},required:["interval","step"],type:"object"}],description:'Extending the domain so that it starts and ends on nice round values. This method typically modifies the scale’s domain, and may only extend the bounds to the nearest round value. Nicing is useful if the domain is computed from data and may be irregular. For example, for a domain of _[0.201479…, 0.996679…]_, a nice domain might be _[0.2, 1.0]_.\n\nFor quantitative scales such as linear, `nice` can be either a boolean flag or a number. If `nice` is a number, it will represent a desired tick count. This allows greater control over the step size used to extend the bounds, guaranteeing that the returned ticks will exactly cover the domain.\n\nFor temporal fields with time and utc scales, the `nice` value can be a string indicating the desired time interval. Legal values are `"millisecond"`, `"second"`, `"minute"`, `"hour"`, `"day"`, `"week"`, `"month"`, and `"year"`. Alternatively, `time` and `utc` scales can accept an object-valued interval specifier of the form `{"interval": "month", "step": 3}`, which includes a desired number of interval steps. Here, the domain would snap to quarter (Jan, Apr, Jul, Oct) boundaries.\n\n__Default value:__ `true` for unbinned _quantitative_ fields; `false` otherwise.'},padding:{description:"For _[continuous](https://vega.github.io/vega-lite/docs/scale.html#continuous)_ scales, expands the scale domain to accommodate the specified number of pixels on each of the scale range. The scale range must represent pixels for this parameter to function as intended. Padding adjustment is performed prior to all other adjustments, including the effects of the zero, nice, domainMin, and domainMax properties.\n\nFor _[band](https://vega.github.io/vega-lite/docs/scale.html#band)_ scales, shortcut for setting `paddingInner` and `paddingOuter` to the same value.\n\nFor _[point](https://vega.github.io/vega-lite/docs/scale.html#point)_ scales, alias for `paddingOuter`.\n\n__Default value:__ For _continuous_ scales, derived from the [scale config](https://vega.github.io/vega-lite/docs/scale.html#config)'s `continuousPadding`.\nFor _band and point_ scales, see `paddingInner` and `paddingOuter`.",minimum:0,type:"number"},paddingInner:{description:"The inner padding (spacing) within each band step of band scales, as a fraction of the step size. This value must lie in the range [0,1].\n\nFor point scale, this property is invalid as point scales do not have internal band widths (only step sizes between bands).\n\n__Default value:__ derived from the [scale config](https://vega.github.io/vega-lite/docs/scale.html#config)'s `bandPaddingInner`.",maximum:1,minimum:0,type:"number"},paddingOuter:{description:"The outer padding (spacing) at the ends of the range of band and point scales,\nas a fraction of the step size. This value must lie in the range [0,1].\n\n__Default value:__ derived from the [scale config](https://vega.github.io/vega-lite/docs/scale.html#config)'s `bandPaddingOuter` for band scales and `pointPadding` for point scales.",maximum:1,minimum:0,type:"number"},range:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{type:"string"}],description:'The range of the scale. One of:\n\n- A string indicating a [pre-defined named scale range](https://vega.github.io/vega-lite/docs/scale.html#range-config) (e.g., example, `"symbol"`, or `"diverging"`).\n\n- For [continuous scales](https://vega.github.io/vega-lite/docs/scale.html#continuous), two-element array indicating  minimum and maximum values, or an array with more than two entries for specifying a [piecewise scale](https://vega.github.io/vega-lite/docs/scale.html#piecewise).\n\n- For [discrete](https://vega.github.io/vega-lite/docs/scale.html#discrete) and [discretizing](https://vega.github.io/vega-lite/docs/scale.html#discretizing) scales, an array of desired output values.\n\n__Notes:__\n\n1) For color scales you can also specify a color [`scheme`](https://vega.github.io/vega-lite/docs/scale.html#scheme) instead of `range`.\n\n2) Any directly specified `range` for `x` and `y` channels will be ignored. Range can be customized via the view\'s corresponding [size](https://vega.github.io/vega-lite/docs/size.html) (`width` and `height`) or via [range steps and paddings properties](#range-step) for [band](#band) and [point](#point) scales.'},rangeStep:{description:"The distance between the starts of adjacent bands or points in [band](https://vega.github.io/vega-lite/docs/scale.html#band) and [point](https://vega.github.io/vega-lite/docs/scale.html#point) scales.\n\nIf `rangeStep` is `null` or if the view contains the scale's corresponding [size](https://vega.github.io/vega-lite/docs/size.html) (`width` for `x` scales and `height` for `y` scales), `rangeStep` will be automatically determined to fit the size of the view.\n\n__Default value:__  derived the [scale config](https://vega.github.io/vega-lite/docs/config.html#scale-config)'s `textXRangeStep` (`90` by default) for x-scales of `text` marks and `rangeStep` (`21` by default) for x-scales of other marks and y-scales.\n\n__Warning__: If `rangeStep` is `null` and the cardinality of the scale's domain is higher than `width` or `height`, the rangeStep might become less than one pixel and the mark might not appear correctly.",minimum:0,type:["number","null"]},round:{description:"If `true`, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.\n\n__Default value:__ `false`.",type:"boolean"},scheme:{anyOf:[{type:"string"},{$ref:"#/definitions/SchemeParams"}],description:'A string indicating a color [scheme](https://vega.github.io/vega-lite/docs/scale.html#scheme) name (e.g., `"category10"` or `"blues"`) or a [scheme parameter object](https://vega.github.io/vega-lite/docs/scale.html#scheme-params).\n\nDiscrete color schemes may be used with [discrete](https://vega.github.io/vega-lite/docs/scale.html#discrete) or [discretizing](https://vega.github.io/vega-lite/docs/scale.html#discretizing) scales. Continuous color schemes are intended for use with color scales.\n\nFor the full list of supported schemes, please refer to the [Vega Scheme](https://vega.github.io/vega/docs/schemes/#reference) reference.'},type:{$ref:"#/definitions/ScaleType",description:'The type of scale.  Vega-Lite supports the following categories of scale types:\n\n1) [**Continuous Scales**](https://vega.github.io/vega-lite/docs/scale.html#continuous) -- mapping continuous domains to continuous output ranges ([`"linear"`](https://vega.github.io/vega-lite/docs/scale.html#linear), [`"pow"`](https://vega.github.io/vega-lite/docs/scale.html#pow), [`"sqrt"`](https://vega.github.io/vega-lite/docs/scale.html#sqrt), [`"symlog"`](https://vega.github.io/vega-lite/docs/scale.html#symlog), [`"log"`](https://vega.github.io/vega-lite/docs/scale.html#log), [`"time"`](https://vega.github.io/vega-lite/docs/scale.html#time), [`"utc"`](https://vega.github.io/vega-lite/docs/scale.html#utc).\n\n2) [**Discrete Scales**](https://vega.github.io/vega-lite/docs/scale.html#discrete) -- mapping discrete domains to discrete ([`"ordinal"`](https://vega.github.io/vega-lite/docs/scale.html#ordinal)) or continuous ([`"band"`](https://vega.github.io/vega-lite/docs/scale.html#band) and [`"point"`](https://vega.github.io/vega-lite/docs/scale.html#point)) output ranges.\n\n3) [**Discretizing Scales**](https://vega.github.io/vega-lite/docs/scale.html#discretizing) -- mapping continuous domains to discrete output ranges [`"bin-ordinal"`](https://vega.github.io/vega-lite/docs/scale.html#bin-ordinal), [`"quantile"`](https://vega.github.io/vega-lite/docs/scale.html#quantile), [`"quantize"`](https://vega.github.io/vega-lite/docs/scale.html#quantize) and [`"threshold"`](https://vega.github.io/vega-lite/docs/scale.html#threshold).\n\n__Default value:__ please see the [scale type table](https://vega.github.io/vega-lite/docs/scale.html#type).'},zero:{description:"If `true`, ensures that a zero baseline value is included in the scale domain.\n\n__Default value:__ `true` for x and y channels if the quantitative field is not binned and no custom `domain` is provided; `false` otherwise.\n\n__Note:__ Log, time, and utc scales do not support `zero`.",type:"boolean"}},type:"object"},ScaleConfig:{additionalProperties:!1,properties:{bandPaddingInner:{description:"Default inner padding for `x` and `y` band-ordinal scales.\n\n__Default value:__\n- `barBandPaddingInner` for bar marks (`0.1` by default)\n- `rectBandPaddingInner` for rect and other marks (`0` by default)",maximum:1,minimum:0,type:"number"},bandPaddingOuter:{description:"Default outer padding for `x` and `y` band-ordinal scales.\n\nIf not specified, by default, band scale's paddingOuter is paddingInner/2.",maximum:1,minimum:0,type:"number"},barBandPaddingInner:{description:'Default inner padding for `x` and `y` band-ordinal scales of `"bar"` marks.\n\n__Default value:__ `0.1`',maximum:1,minimum:0,type:"number"},barBandPaddingOuter:{description:'Default outer padding for `x` and `y` band-ordinal scales of `"bar"` marks.\nIf not specified, by default, band scale\'s paddingOuter is paddingInner/2.',maximum:1,minimum:0,type:"number"},clamp:{description:"If true, values that exceed the data domain are clamped to either the minimum or maximum range value",type:"boolean"},continuousPadding:{description:"Default padding for continuous scales.\n\n__Default:__ `5` for continuous x-scale of a vertical bar and continuous y-scale of a horizontal bar.; `0` otherwise.",minimum:0,type:"number"},maxBandSize:{description:"The default max value for mapping quantitative fields to bar's size/bandSize.\n\nIf undefined (default), we will use the scale's `rangeStep` - 1.",minimum:0,type:"number"},maxFontSize:{description:"The default max value for mapping quantitative fields to text's size/fontSize.\n\n__Default value:__ `40`",minimum:0,type:"number"},maxOpacity:{description:"Default max opacity for mapping a field to opacity.\n\n__Default value:__ `0.8`",maximum:1,minimum:0,type:"number"},maxSize:{description:"Default max value for point size scale.",minimum:0,type:"number"},maxStrokeWidth:{description:"Default max strokeWidth for the scale of strokeWidth for rule and line marks and of size for trail marks.\n\n__Default value:__ `4`",minimum:0,type:"number"},minBandSize:{description:"The default min value for mapping quantitative fields to bar and tick's size/bandSize scale with zero=false.\n\n__Default value:__ `2`",minimum:0,type:"number"},minFontSize:{description:"The default min value for mapping quantitative fields to tick's size/fontSize scale with zero=false\n\n__Default value:__ `8`",minimum:0,type:"number"},minOpacity:{description:"Default minimum opacity for mapping a field to opacity.\n\n__Default value:__ `0.3`",maximum:1,minimum:0,type:"number"},minSize:{description:"Default minimum value for point size scale with zero=false.\n\n__Default value:__ `9`",minimum:0,type:"number"},minStrokeWidth:{description:"Default minimum strokeWidth for the scale of strokeWidth for rule and line marks and of size for trail marks with zero=false.\n\n__Default value:__ `1`",minimum:0,type:"number"},pointPadding:{description:"Default outer padding for `x` and `y` point-ordinal scales.\n\n__Default value:__ `0.5`",maximum:1,minimum:0,type:"number"},quantileCount:{description:"Default range cardinality for [`quantile`](https://vega.github.io/vega-lite/docs/scale.html#quantile) scale.\n\n__Default value:__ `4`",minimum:0,type:"number"},quantizeCount:{description:"Default range cardinality for [`quantize`](https://vega.github.io/vega-lite/docs/scale.html#quantize) scale.\n\n__Default value:__ `4`",minimum:0,type:"number"},rangeStep:{description:"Default range step for band and point scales of (1) the `y` channel\nand (2) the `x` channel when the mark is not `text`.\n\n__Default value:__ `20`",minimum:0,type:["number","null"]},rectBandPaddingInner:{description:'Default inner padding for `x` and `y` band-ordinal scales of `"rect"` marks.\n\n__Default value:__ `0`',maximum:1,minimum:0,type:"number"},rectBandPaddingOuter:{description:'Default outer padding for `x` and `y` band-ordinal scales of `"rect"` marks.\nIf not specified, by default, band scale\'s paddingOuter is paddingInner/2.',maximum:1,minimum:0,type:"number"},round:{description:"If true, rounds numeric output values to integers.\nThis can be helpful for snapping to the pixel grid.\n(Only available for `x`, `y`, and `size` scales.)",type:"boolean"},textXRangeStep:{description:"Default range step for `x` band and point scales of text marks.\n\n__Default value:__ `90`",minimum:0,type:"number"},useUnaggregatedDomain:{description:'Use the source data range before aggregation as scale domain instead of aggregated data for aggregate axis.\n\nThis is equivalent to setting `domain` to `"unaggregate"` for aggregated _quantitative_ fields by default.\n\nThis property only works with aggregate functions that produce values within the raw data domain (`"mean"`, `"average"`, `"median"`, `"q1"`, `"q3"`, `"min"`, `"max"`). For other aggregations that produce values outside of the raw data domain (e.g. `"count"`, `"sum"`), this property is ignored.\n\n__Default value:__ `false`',type:"boolean"}},type:"object"},ScaleInterpolate:{enum:["rgb","lab","hcl","hsl","hsl-long","hcl-long","cubehelix","cubehelix-long"],type:"string"},ScaleInterpolateParams:{additionalProperties:!1,properties:{gamma:{type:"number"},type:{enum:["rgb","cubehelix","cubehelix-long"],type:"string"}},required:["type"],type:"object"},ScaleResolveMap:{additionalProperties:!1,properties:{color:{$ref:"#/definitions/ResolveMode"},fill:{$ref:"#/definitions/ResolveMode"},fillOpacity:{$ref:"#/definitions/ResolveMode"},opacity:{$ref:"#/definitions/ResolveMode"},shape:{$ref:"#/definitions/ResolveMode"},size:{$ref:"#/definitions/ResolveMode"},stroke:{$ref:"#/definitions/ResolveMode"},strokeOpacity:{$ref:"#/definitions/ResolveMode"},strokeWidth:{$ref:"#/definitions/ResolveMode"},x:{$ref:"#/definitions/ResolveMode"},y:{$ref:"#/definitions/ResolveMode"}},type:"object"},ScaleType:{enum:["linear","log","pow","sqrt","symlog","time","utc","quantile","quantize","threshold","bin-ordinal","ordinal","point","band"],type:"string"},SchemeConfig:{additionalProperties:!1,properties:{count:{type:"number"},extent:{items:{type:"number"},type:"array"},scheme:{type:"string"}},required:["scheme"],type:"object"},SchemeParams:{additionalProperties:!1,properties:{count:{description:'The number of colors to use in the scheme. This can be useful for scale types such as `"quantize"`, which use the length of the scale range to determine the number of discrete bins for the scale domain.',type:"number"},extent:{description:"The extent of the color range to use. For example `[0.2, 1]` will rescale the color scheme such that color values in the range _[0, 0.2)_ are excluded from the scheme.",items:{type:"number"},type:"array"},name:{description:'A color scheme name for ordinal scales (e.g., `"category10"` or `"blues"`).\n\nFor the full list of supported schemes, please refer to the [Vega Scheme](https://vega.github.io/vega/docs/schemes/#reference) reference.',type:"string"}},required:["name"],type:"object"},SecondaryFieldDef:{additionalProperties:!1,description:"A field definition of a secondary channel that shares a scale with another primary channel.  For example, `x2`, `xError` and `xError2` share the same scale with `x`.",properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]}},type:"object"},SelectionConfig:{additionalProperties:!1,properties:{interval:{$ref:"#/definitions/IntervalSelectionConfig",description:'The default definition for an [`interval`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\nfor an interval selection definition (except `type`) may be specified here.\n\nFor instance, setting `interval` to `{"translate": false}` disables the ability to move\ninterval selections by default.'},multi:{$ref:"#/definitions/MultiSelectionConfig",description:'The default definition for a [`multi`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\nfor a multi selection definition (except `type`) may be specified here.\n\nFor instance, setting `multi` to `{"toggle": "event.altKey"}` adds additional values to\nmulti selections when clicking with the alt-key pressed by default.'},single:{$ref:"#/definitions/SingleSelectionConfig",description:'The default definition for a [`single`](https://vega.github.io/vega-lite/docs/selection.html#type) selection. All properties and transformations\n  for a single selection definition (except `type`) may be specified here.\n\nFor instance, setting `single` to `{"on": "dblclick"}` populates single selections on double-click by default.'}},type:"object"},SelectionDef:{anyOf:[{$ref:"#/definitions/SingleSelection"},{$ref:"#/definitions/MultiSelection"},{$ref:"#/definitions/IntervalSelection"}]},SelectionDomain:{anyOf:[{additionalProperties:!1,properties:{field:{description:"The field name to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\nover multiple fields or encodings.",type:"string"},selection:{description:"The name of a selection.",type:"string"}},required:["selection"],type:"object"},{additionalProperties:!1,properties:{encoding:{description:"The encoding channel to extract selected values for, when a selection is [projected](https://vega.github.io/vega-lite/docs/project.html)\nover multiple fields or encodings.",type:"string"},selection:{description:"The name of a selection.",type:"string"}},required:["selection"],type:"object"}]},SelectionInit:{anyOf:[{type:"boolean"},{type:"number"},{type:"string"},{$ref:"#/definitions/DateTime"}]},SelectionInitArray:{anyOf:[{items:{type:"boolean"},type:"array"},{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}]},SelectionInitArrayMapping:{additionalProperties:{$ref:"#/definitions/SelectionInitArray"},type:"object"},SelectionInitMapping:{additionalProperties:{$ref:"#/definitions/SelectionInit"},type:"object"},SelectionPredicate:{additionalProperties:!1,properties:{selection:{$ref:"#/definitions/SelectionOperand",description:"Filter using a selection name."}},required:["selection"],type:"object"},SelectionResolution:{enum:["global","union","intersect"],type:"string"},ShapeFieldDefWithCondition:{$ref:"#/definitions/StringFieldDefWithCondition<TypeForShape>"},ShapeValueDefWithCondition:{$ref:"#/definitions/StringValueDefWithCondition<TypeForShape>"},SignalRef:{additionalProperties:!1,properties:{signal:{type:"string"}},required:["signal"],type:"object"},SingleDefUnitChannel:{enum:["x","y","x2","y2","longitude","latitude","longitude2","latitude2","color","fill","stroke","strokeWidth","size","shape","fillOpacity","strokeOpacity","opacity","text","tooltip","href","key"],type:"string"},SingleSelection:{additionalProperties:!1,properties:{bind:{anyOf:[{$ref:"#/definitions/Binding"},{additionalProperties:{$ref:"#/definitions/Binding"},type:"object"}],description:"Establish a two-way binding between a single selection and input elements\n(also known as dynamic query widgets). A binding takes the form of\nVega's [input element binding definition](https://vega.github.io/vega/docs/signals/#bind)\nor can be a mapping between projected field/encodings and binding definitions.\n\nSee the [bind transform](https://vega.github.io/vega-lite/docs/bind.html) documentation for more information."},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefUnitChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and initial values."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."},type:{enum:["single"],type:"string"}},required:["type"],type:"object"},SingleSelectionConfig:{additionalProperties:!1,properties:{bind:{anyOf:[{$ref:"#/definitions/Binding"},{additionalProperties:{$ref:"#/definitions/Binding"},type:"object"}],description:"Establish a two-way binding between a single selection and input elements\n(also known as dynamic query widgets). A binding takes the form of\nVega's [input element binding definition](https://vega.github.io/vega/docs/signals/#bind)\nor can be a mapping between projected field/encodings and binding definitions.\n\nSee the [bind transform](https://vega.github.io/vega-lite/docs/bind.html) documentation for more information."},empty:{description:"By default, all data values are considered to lie within an empty selection.\nWhen set to `none`, empty selections contain no data values.",enum:["all","none"],type:"string"},encodings:{description:"An array of encoding channels. The corresponding data field values\nmust match for a data tuple to fall within the selection.",items:{$ref:"#/definitions/SingleDefUnitChannel"},type:"array"},fields:{description:"An array of field names whose values must match for a data tuple to\nfall within the selection.",items:{type:"string"},type:"array"},init:{$ref:"#/definitions/SelectionInitMapping",description:"Initialize the selection with a mapping between [projected channels or field names](https://vega.github.io/vega-lite/docs/project.html) and initial values."},nearest:{description:"When true, an invisible voronoi diagram is computed to accelerate discrete\nselection. The data value _nearest_ the mouse cursor is added to the selection.\n\nSee the [nearest transform](https://vega.github.io/vega-lite/docs/nearest.html) documentation for more information.",type:"boolean"},on:{$ref:"#/definitions/EventStream",description:"A [Vega event stream](https://vega.github.io/vega/docs/event-streams/) (object or selector) that triggers the selection.\nFor interval selections, the event stream must specify a [start and end](https://vega.github.io/vega/docs/event-streams/#between-filters)."},resolve:{$ref:"#/definitions/SelectionResolution",description:"With layered and multi-view displays, a strategy that determines how\nselections' data queries are resolved when applied in a filter transform,\nconditional encoding rule, or scale domain."}},type:"object"},SingleTimeUnit:{anyOf:[{$ref:"#/definitions/LocalSingleTimeUnit"},{$ref:"#/definitions/UtcSingleTimeUnit"}]},Sort:{anyOf:[{$ref:"#/definitions/SortArray"},{$ref:"#/definitions/SortOrder"},{$ref:"#/definitions/EncodingSortField"},{$ref:"#/definitions/SortByEncoding"},{type:"null"}]},SortArray:{anyOf:[{items:{type:"number"},type:"array"},{items:{type:"string"},type:"array"},{items:{type:"boolean"},type:"array"},{items:{$ref:"#/definitions/DateTime"},type:"array"}]},SortByEncoding:{additionalProperties:!1,properties:{encoding:{$ref:"#/definitions/SingleDefUnitChannel",description:'The [encoding channel](https://vega.github.io/vega-lite/docs/encoding.html#channels) to sort by (e.g., `"x"`, `"y"`)'},order:{anyOf:[{$ref:"#/definitions/SortOrder"},{type:"null"}],description:'The sort order. One of `"ascending"` (default), `"descending"`, or `null` (no not sort).'}},required:["encoding"],type:"object"},SortField:{additionalProperties:!1,description:"A sort definition for transform",properties:{field:{description:"The name of the field to sort.",type:"string"},order:{anyOf:[{$ref:"#/definitions/SortOrder"},{type:"null"}],description:'Whether to sort the field in ascending or descending order. One of `"ascending"` (default), `"descending"`, or `null` (no not sort).'}},required:["field"],type:"object"},SortOrder:{enum:["ascending","descending"],type:"string"},StackOffset:{enum:["zero","center","normalize"],type:"string"},StackTransform:{additionalProperties:!1,properties:{as:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'Output field names. This can be either a string or an array of strings with\ntwo elements denoting the name for the fields for stack start and stack end\nrespectively.\nIf a single string(eg."val") is provided, the end field will be "val_end".'},groupby:{description:"The data fields to group by.",items:{type:"string"},type:"array"},offset:{description:'Mode for stacking marks.\n__Default value:__ `"zero"`',enum:["zero","center","normalize"],type:"string"},sort:{description:"Field that determines the order of leaves in the stacked charts.",items:{$ref:"#/definitions/SortField"},type:"array"},stack:{description:"The field which is stacked.",type:"string"}},required:["stack","groupby","as"],type:"object"},StandardType:{enum:["quantitative","ordinal","temporal","nominal"],type:"string"},"StringFieldDefWithCondition<TypeForShape>":{$ref:"#/definitions/FieldDefWithCondition<MarkPropFieldDef<TypeForShape>,string>"},StringFieldDefWithCondition:{$ref:'#/definitions/FieldDefWithCondition<MarkPropFieldDef<"nominal">,string>'},"StringValueDefWithCondition<TypeForShape>":{$ref:"#/definitions/ValueDefWithCondition<MarkPropFieldDef<TypeForShape>,string>"},StringValueDefWithCondition:{$ref:'#/definitions/ValueDefWithCondition<MarkPropFieldDef<"nominal">,string>'},StrokeCap:{enum:["butt","round","square"],type:"string"},StrokeJoin:{enum:["miter","round","bevel"],type:"string"},StyleConfigIndex:{additionalProperties:{$ref:"#/definitions/BaseMarkConfig"},type:"object"},SymbolShape:{type:"string"},TextBaseline:{anyOf:[{enum:["alphabetic"],type:"string"},{$ref:"#/definitions/Baseline"}]},TextConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},shortTimeLabels:{description:"Whether month names and weekday names should be abbreviated.",type:"boolean"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"}},type:"object"},TextFieldDef:{additionalProperties:!1,properties:{aggregate:{$ref:"#/definitions/Aggregate",description:"Aggregation function for the field\n(e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n\n__Default value:__ `undefined` (None)"},bin:{anyOf:[{type:"boolean"},{$ref:"#/definitions/BinParams"},{enum:["binned"],type:"string"},{type:"null"}],description:'A flag for binning a `quantitative` field, [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params), or indicating that the data for `x` or `y` channel are binned before they are imported into Vega-Lite (`"binned"`).\n\n- If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n\n- If `"binned"`, this indicates that the data for the `x` (or `y`) channel are already binned. You can map the bin-start field to `x` (or `y`) and the bin-end field to `x2` (or `y2`). The scale and axis will be formatted similar to binning in Vega-lite.  To adjust the axis ticks based on the bin step, you can also set the axis\'s [`tickMinStep`](https://vega.github.io/vega-lite/docs/axis.html#ticks) property.\n\n__Default value:__ `false`'},field:{$ref:"#/definitions/Field",description:'__Required.__ A string defining the name of the field from which to pull a data value\nor an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n\n__Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `"field": "foo.bar"` and `"field": "foo[\'bar\']"`).\nIf field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `"a\\\\.b"` and `"a\\\\[0\\\\]"`).\nSee more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n\n__Note:__ `field` is not required if `aggregate` is `count`.'},format:{description:'The text formatting pattern for labels of guides (axes, legends, headers) and text marks.\n\n- If the format type is `"number"` (e.g., for quantitative fields), this is D3\'s [number format pattern](https://github.com/d3/d3-format#locale_format).\n- If the format type is `"time"` (e.g., for temporal fields), this is D3\'s [time format pattern](https://github.com/d3/d3-time-format#locale_format).\n\nSee the [format documentation](https://vega.github.io/vega-lite/docs/format.html) for more examples.\n\n__Default value:__  Derived from [numberFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for number format and from [timeFormat](https://vega.github.io/vega-lite/docs/config.html#format) config for time format.',type:"string"},formatType:{description:'The format type for labels (`"number"` or `"time"`).\n\n__Default value:__\n- `"time"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\n- `"number"` for quantitative fields as well as ordinal and nomimal fields without `timeUnit`.',enum:["number","time"],type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\nor [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n\n__Default value:__ `undefined` (None)"},title:{description:'A title for the field. If `null`, the title will be removed.\n\n__Default value:__  derived from the field\'s name and transformation function (`aggregate`, `bin` and `timeUnit`).  If the field has an aggregate function, the function is displayed as part of the title (e.g., `"Sum of Profit"`). If the field is binned or has a time unit applied, the applied function is shown in parentheses (e.g., `"Profit (binned)"`, `"Transaction Date (year-month)"`).  Otherwise, the title is simply the field name.\n\n__Notes__:\n\n1) You can customize the default field title format by providing the [`fieldTitle`](https://vega.github.io/vega-lite/docs/config.html#top-level-config) property in the [config](https://vega.github.io/vega-lite/docs/config.html) or [`fieldTitle` function via the `compile` function\'s options](https://vega.github.io/vega-lite/docs/compile.html#field-title).\n\n2) If both field definition\'s `title` and axis, header, or legend `title` are defined, axis/header/legend title will be used.',type:["string","null"]},type:{$ref:"#/definitions/StandardType",description:'The encoded field\'s type of measurement (`"quantitative"`, `"temporal"`, `"ordinal"`, or `"nominal"`).\nIt can also be a `"geojson"` type for encoding [\'geoshape\'](https://vega.github.io/vega-lite/docs/geoshape.html).\n\n\n__Note:__\n\n- Data values for a temporal field can be either a date-time string (e.g., `"2015-03-07 12:32:17"`, `"17:01"`, `"2015-03-16"`. `"2015"`) or a timestamp number (e.g., `1552199579097`).\n- Data `type` describes the semantics of the data rather than the primitive data types (`number`, `string`, etc.). The same primitive data type can have different types of measurement. For example, numeric data can represent quantitative, ordinal, or nominal data.\n- When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type` property can be either `"quantitative"` (for using a linear bin scale) or [`"ordinal"` (for using an ordinal bin scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the `type` property can be either `"temporal"` (for using a temporal scale) or [`"ordinal"` (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\n- When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html), the `type` property refers to the post-aggregation data type. For example, we can calculate count `distinct` of a categorical field `"cat"` using `{"aggregate": "distinct", "field": "cat", "type": "quantitative"}`. The `"type"` of the aggregate output is `"quantitative"`.\n- Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they have exactly the same type as their primary channels (e.g., `x`, `y`).'}},required:["type"],type:"object"},TextFieldDefWithCondition:{$ref:"#/definitions/FieldDefWithCondition<TextFieldDef,(string|number|boolean)>"},TextValueDefWithCondition:{$ref:"#/definitions/ValueDefWithCondition<TextFieldDef,(string|number|boolean)>"},TickConfig:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align",description:'The horizontal alignment of the text. One of `"left"`, `"right"`, `"center"`.'},angle:{description:"The rotation angle of the text, in degrees.",maximum:360,minimum:0,type:"number"},bandSize:{description:"The width of the ticks.\n\n__Default value:__  3/4 of rangeStep.",minimum:0,type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'The vertical alignment of the text. One of `"top"`, `"middle"`, `"bottom"`.\n\n__Default value:__ `"middle"`'},color:{description:'Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n\n__Default value:__ <span style="color: #4682b4;">&#9632;</span> `"#4682b4"`\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).',type:"string"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},cursor:{$ref:"#/definitions/Cursor",description:"The mouse cursor used over the mark. Any valid [CSS cursor type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used."},dir:{$ref:"#/definitions/Dir",description:'The direction of the text. One of `"ltr"` (left-to-right) or `"rtl"` (right-to-left). This property determines on which side is truncated in response to the limit parameter.\n\n__Default value:__ `"ltr"`'},dx:{description:"The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},dy:{description:"The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the _angle_ property.",type:"number"},ellipsis:{description:'The ellipsis string for text truncated in response to the limit parameter.\n\n__Default value:__ `"…"`',type:"string"},fill:{$ref:"#/definitions/Color",description:"Default Fill Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},filled:{description:"Whether the mark's color should be used as fill color instead of stroke color.\n\n__Default value:__ `false` for `point`, `line` and `rule`; otherwise, `true`.\n\n__Note:__ This property cannot be used in a [style config](https://vega.github.io/vega-lite/docs/mark.html#style-config).",type:"boolean"},font:{description:'The typeface to set the text in (e.g., `"Helvetica Neue"`).',type:"string"},fontSize:{description:"The font size, in pixels.",type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:'The font style (e.g., `"italic"`).'},fontWeight:{$ref:"#/definitions/FontWeight",description:'The font weight.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},href:{description:"A URL to load upon mouse click. If defined, the mark acts as a hyperlink.",format:"uri",type:"string"},interpolate:{$ref:"#/definitions/Interpolate",description:'The line interpolation method to use for line and area marks. One of the following:\n- `"linear"`: piecewise linear segments, as in a polyline.\n- `"linear-closed"`: close the linear segments to form a polygon.\n- `"step"`: alternate between horizontal and vertical segments, as in a step function.\n- `"step-before"`: alternate between vertical and horizontal segments, as in a step function.\n- `"step-after"`: alternate between horizontal and vertical segments, as in a step function.\n- `"basis"`: a B-spline, with control point duplication on the ends.\n- `"basis-open"`: an open B-spline; may not intersect the start or end.\n- `"basis-closed"`: a closed B-spline, as in a loop.\n- `"cardinal"`: a Cardinal spline, with control point duplication on the ends.\n- `"cardinal-open"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n- `"cardinal-closed"`: a closed Cardinal spline, as in a loop.\n- `"bundle"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n- `"monotone"`: cubic interpolation that preserves monotonicity in y.'},limit:{description:"The maximum length of the text mark in pixels. The text value will be automatically truncated if the rendered size exceeds the limit.\n\n__Default value:__ `0`, indicating no limit",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},order:{description:"For line and trail marks, this `order` property can be set to `null` or `false` to make the lines use the original order in the data sources.",type:["null","boolean"]},orient:{$ref:"#/definitions/Orientation",description:"The orientation of a non-stacked bar, tick, area, and line charts.\nThe value is either horizontal (default) or vertical.\n- For bar, rule and tick, this determines whether the size of the bar and tick\nshould be applied to x or y dimension.\n- For area, this property determines the orient property of the Vega output.\n- For line and trail marks, this property determines the sort order of the points in the line\nif `config.sortLineBy` is not specified.\nFor stacked charts, this is always determined by the orientation of the stack;\ntherefore explicitly specified value will be ignored."},radius:{description:"Polar coordinate radial offset, in pixels, of the text label from the origin determined by the `x` and `y` properties.",minimum:0,type:"number"},shape:{description:'Shape of the point marks. Supported values include:\n- plotting shapes: `"circle"`, `"square"`, `"cross"`, `"diamond"`, `"triangle-up"`, `"triangle-down"`, `"triangle-right"`, or `"triangle-left"`.\n- the line symbol `"stroke"`\n- centered directional shapes `"arrow"`, `"wedge"`, or `"triangle"`\n- a custom [SVG path string](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths) (For correct sizing, custom shape paths should be defined within a square bounding box with coordinates ranging from -1 to 1 along both the x and y dimensions.)\n\n__Default value:__ `"circle"`',type:"string"},size:{description:"Default size for marks.\n- For `point`/`circle`/`square`, this represents the pixel area of the marks. For example: in the case of circles, the radius is determined in part by the square root of the size value.\n- For `bar`, this represents the band size of the bar, in pixels.\n- For `text`, this represents the font size, in pixels.\n\n__Default value:__ `30` for point, circle, square marks; `rangeStep` - 1 for bar marks with discrete dimensions; `5` for bar marks with continuous dimensions; `11` for text marks.",minimum:0,type:"number"},stroke:{$ref:"#/definitions/Color",description:"Default Stroke Color.  This has higher precedence than `config.color`\n\n__Default value:__ (None)"},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},tension:{description:"Depending on the interpolation type, sets the tension parameter (for line and area marks).",maximum:1,minimum:0,type:"number"},text:{description:"Placeholder text if the `text` channel is not specified",type:"string"},theta:{description:'Polar coordinate angle, in radians, of the text label from the origin determined by the `x` and `y` properties. Values for `theta` follow the same convention of `arc` mark `startAngle` and `endAngle` properties: angles are measured in radians, with `0` indicating "north".',type:"number"},thickness:{description:"Thickness of the tick mark.\n\n__Default value:__  `1`",minimum:0,type:"number"},tooltip:{anyOf:[{type:"string"},{$ref:"#/definitions/TooltipContent"},{type:"null"}],description:'The tooltip text string to show upon mouse hover or an object defining which fields should the tooltip be derived from.\n\n- If `tooltip` is `{"content": "encoding"}`, then all fields from `encoding` will be used.\n- If `tooltip` is `{"content": "data"}`, then all fields that appear in the highlighted data point will be used.\n- If set to `null`, then no tooltip will be used.'},x:{description:'X coordinates of the marks, or width of horizontal `"bar"` and `"area"` without `x2`.',type:"number"},x2:{description:'X2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"},y:{description:'Y coordinates of the marks, or height of vertical `"bar"` and `"area"` without `y2`',type:"number"},y2:{description:'Y2 coordinates for ranged `"area"`, `"bar"`, `"rect"`, and  `"rule"`.',type:"number"}},type:"object"},TimeUnit:{anyOf:[{$ref:"#/definitions/SingleTimeUnit"},{$ref:"#/definitions/MultiTimeUnit"}]},TimeUnitTransform:{additionalProperties:!1,properties:{as:{description:"The output field to write the timeUnit value.",type:"string"},field:{description:"The data field to apply time unit.",type:"string"},timeUnit:{$ref:"#/definitions/TimeUnit",description:"The timeUnit."}},required:["timeUnit","field","as"],type:"object"},TitleAnchor:{enum:[null,"start","middle","end"],type:["null","string"]},TitleConfig:{$ref:"#/definitions/BaseTitleConfig"},TitleFrame:{enum:["bounds","group"],type:"string"},TitleOrient:{enum:["none","left","right","top","bottom"],type:"string"},TitleParams:{additionalProperties:!1,properties:{align:{$ref:"#/definitions/Align"},anchor:{$ref:"#/definitions/TitleAnchor",description:'The anchor position for placing the title. One of `"start"`, `"middle"`, or `"end"`. For example, with an orientation of top these anchor positions map to a left-, center-, or right-aligned title.\n\n__Default value:__ `"middle"` for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.\n`"start"` for other composite views.\n\n__Note:__ [For now](https://github.com/vega/vega-lite/issues/2875), `anchor` is only customizable only for [single](https://vega.github.io/vega-lite/docs/spec.html) and [layered](https://vega.github.io/vega-lite/docs/layer.html) views.  For other composite views, `anchor` is always `"start"`.'},angle:{description:"Angle in degrees of title text.",type:"number"},baseline:{$ref:"#/definitions/TextBaseline",description:'Vertical text baseline for title text. One of `"top"`, `"middle"`, `"bottom"`, or `"alphabetic"`.'},color:{$ref:"#/definitions/Color",description:"Text color for title text."},dx:{description:"Delta offset for title text x-coordinate.",type:"number"},dy:{description:"Delta offset for title text y-coordinate.",type:"number"},font:{description:"Font name for title text.",type:"string"},fontSize:{description:"Font size in pixels for title text.\n\n__Default value:__ `10`.",minimum:0,type:"number"},fontStyle:{$ref:"#/definitions/FontStyle",description:"Font style for title text."},fontWeight:{$ref:"#/definitions/FontWeight",description:'Font weight for title text.\nThis can be either a string (e.g `"bold"`, `"normal"`) or a number (`100`, `200`, `300`, ..., `900` where `"normal"` = `400` and `"bold"` = `700`).'},frame:{$ref:"#/definitions/TitleFrame",description:'The reference frame for the anchor position, one of `"bounds"` (to anchor relative to the full bounding box) or `"group"` (to anchor relative to the group width or height).'},limit:{description:"The maximum allowed length in pixels of legend labels.",minimum:0,type:"number"},offset:{description:"The orthogonal offset in pixels by which to displace the title from its position along the edge of the chart.",type:"number"},orient:{$ref:"#/definitions/TitleOrient",description:'Default title orientation (`"top"`, `"bottom"`, `"left"`, or `"right"`)'},style:{anyOf:[{type:"string"},{items:{type:"string"},type:"array"}],description:'A [mark style property](https://vega.github.io/vega-lite/docs/config.html#style) to apply to the title text mark.\n\n__Default value:__ `"group-title"`.'},text:{description:"The title text.",type:"string"},zindex:{description:"The integer z-index indicating the layering of the title group relative to other axis, mark and legend groups.\n\n__Default value:__ `0`.",minimum:0,type:"number"}},required:["text"],type:"object"},TooltipContent:{additionalProperties:!1,properties:{content:{enum:["encoding","data"],type:"string"}},required:["content"],type:"object"},TopLevelConcatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},concat:{description:"A list of views to be concatenated.",items:{$ref:"#/definitions/Spec"},type:"array"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["concat"],type:"object"},TopLevelHConcatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},hconcat:{description:"A list of views to be concatenated and put into a row.",items:{$ref:"#/definitions/Spec"},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["hconcat"],type:"object"},TopLevelRepeatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},repeat:{anyOf:[{items:{type:"string"},type:"array"},{$ref:"#/definitions/RepeatMapping"}],description:'Definition for fields to be repeated.  One of:\n1) An array of fields to be repeated.  If `"repeat"` is an array, the field can be referred using `{"repeat": "repeat"}`\n2) An object that mapped `"row"` and/or `"column"` to the listed of fields to be repeated along the particular orientations. The objects `{"repeat": "row"}` and `{"repeat": "column"}` can be used to refer to the repeated field respectively.'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},spec:{$ref:"#/definitions/Spec",description:"A specification of the view that gets repeated."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["repeat","spec"],type:"object"},TopLevelVConcatSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{description:"Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\n__Default value:__ `false`",type:"boolean"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{description:"The spacing in pixels between sub-views of the concat operator.\n\n__Default value__: `10`",type:"number"},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"},vconcat:{description:"A list of views to be concatenated and put into a column.",items:{$ref:"#/definitions/Spec"},type:"array"}},required:["vconcat"],type:"object"},TopLevelLayerSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/Encoding",description:"A shared key-value mapping between encoding channels and definition of fields in the underlying layers."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},layer:{description:"Layer or single view specifications to be layered.\n\n__Note__: Specifications inside `layer` cannot use `row` and `column` channels as layering facet specifications is not allowed. Instead, use the [facet operator](https://vega.github.io/vega-lite/docs/facet.html) and place a layer inside a facet.",items:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/UnitSpec"}]},type:"array"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},projection:{$ref:"#/definitions/Projection",description:"An object defining properties of the geographic projection shared by underlying layers."},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["layer"],type:"object"},TopLevelFacetSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},facet:{anyOf:[{$ref:"#/definitions/FacetFieldDef"},{$ref:"#/definitions/FacetMapping"}],description:"Definition for how to facet the data.  One of:\n1) [a field definition for faceting the plot by one field](https://vega.github.io/vega-lite/docs/facet.html#field-def)\n2) [An object that maps `row` and `column` channels to their field definitions](https://vega.github.io/vega-lite/docs/facet.html#mapping)"},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},spec:{anyOf:[{$ref:"#/definitions/LayerSpec"},{$ref:"#/definitions/FacetedUnitSpec"}],description:"A specification of the view that gets faceted."},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"}},required:["data","facet","spec"],type:"object"},TopLevelSpec:{anyOf:[{$ref:"#/definitions/TopLevelUnitSpec"},{$ref:"#/definitions/TopLevelFacetSpec"},{$ref:"#/definitions/TopLevelLayerSpec"},{$ref:"#/definitions/TopLevelRepeatSpec"},{$ref:"#/definitions/TopLevelConcatSpec"},{$ref:"#/definitions/TopLevelVConcatSpec"},{$ref:"#/definitions/TopLevelHConcatSpec"}],description:"A Vega-Lite top-level specification.\nThis is the root class for all Vega-Lite specifications.\n(The json schema is generated from this type.)"},TopLevelUnitSpec:{additionalProperties:!1,properties:{$schema:{description:"URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v3.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.",format:"uri",type:"string"},align:{anyOf:[{$ref:"#/definitions/LayoutAlign"},{$ref:"#/definitions/RowCol<LayoutAlign>"}],description:'The alignment to apply to grid rows and columns.\nThe supported string values are `"all"`, `"each"`, and `"none"`.\n\n- For `"none"`, a flow layout will be used, in which adjacent subviews are simply placed one after the other.\n- For `"each"`, subviews will be aligned into a clean grid structure, but each row or column may be of variable size.\n- For `"all"`, subviews will be aligned and each row or column will be sized identically based on the maximum observed size. String values for this property will be applied to both grid rows and columns.\n\nAlternatively, an object value of the form `{"row": string, "column": string}` can be used to supply different alignments for rows and columns.\n\n__Default value:__ `"all"`.'},autosize:{anyOf:[{$ref:"#/definitions/AutosizeType"},{$ref:"#/definitions/AutoSizeParams"}],description:'Sets how the visualization size should be determined. If a string, should be one of `"pad"`, `"fit"` or `"none"`.\nObject values can additionally specify parameters for content sizing and automatic resizing.\n`"fit"` is only supported for single and layered views that don\'t use `rangeStep`.\n\n__Default value__: `pad`'},background:{description:"CSS color property to use as the background of the entire view.\n\n__Default value:__ none (transparent)",type:"string"},bounds:{description:'The bounds calculation method to use for determining the extent of a sub-plot. One of `full` (the default) or `flush`.\n\n- If set to `full`, the entire calculated bounds (including axes, title, and legend) will be used.\n- If set to `flush`, only the specified width and height values for the sub-view will be used. The `flush` setting can be useful when attempting to place sub-plots without axes or legends into a uniform grid structure.\n\n__Default value:__ `"full"`',enum:["full","flush"],type:"string"},center:{anyOf:[{type:"boolean"},{$ref:"#/definitions/RowCol<boolean>"}],description:'Boolean flag indicating if subviews should be centered relative to their respective rows or columns.\n\nAn object value of the form `{"row": boolean, "column": boolean}` can be used to supply different centering values for rows and columns.\n\n__Default value:__ `false`'},columns:{description:"The number of columns to include in the view composition layout.\n\n__Default value__: `undefined` -- An infinite number of columns (a single row) will be assumed. This is equivalent to\n`hconcat` (for `concat`) and to using the `column` channel (for `facet` and `repeat`).\n\n__Note__:\n\n1) This property is only for:\n- the general (wrappable) `concat` operator (not `hconcat`/`vconcat`)\n- the `facet` and `repeat` operator with one field/repetition definition (without row/column nesting)\n\n2) Setting the `columns` to `1` is equivalent to `vconcat` (for `concat`) and to using the `row` channel (for `facet` and `repeat`).",type:"number"},config:{$ref:"#/definitions/Config",description:"Vega-Lite configuration object.  This property can only be defined at the top-level of a specification."},data:{$ref:"#/definitions/Data",description:"An object describing the data source"},datasets:{$ref:"#/definitions/Datasets",description:"A global data store for named datasets. This is a mapping from names to inline datasets.\nThis can be an array of objects or primitive values or a string. Arrays of primitive values are ingested as objects with a `data` property."},description:{description:"Description of this mark for commenting purpose.",type:"string"},encoding:{$ref:"#/definitions/FacetedEncoding",description:"A key-value mapping between encoding channels and definition of fields."},height:{description:'The height of a visualization.\n\n__Default value:__\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n\n__Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"},mark:{$ref:"#/definitions/AnyMark",description:'A string describing the mark type (one of `"bar"`, `"circle"`, `"square"`, `"tick"`, `"line"`,\n`"area"`, `"point"`, `"rule"`, `"geoshape"`, and `"text"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).'},name:{description:"Name of the visualization for later reference.",type:"string"},padding:{$ref:"#/definitions/Padding",description:'The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle.  If a number, specifies padding for all sides.\nIf an object, the value should have the format `{"left": 5, "top": 5, "right": 5, "bottom": 5}` to specify padding for each side of the visualization.\n\n__Default value__: `5`'},projection:{$ref:"#/definitions/Projection",description:'An object defining properties of geographic projection, which will be applied to `shape` path for `"geoshape"` marks\nand to `latitude` and `"longitude"` channels for other marks.'},resolve:{$ref:"#/definitions/Resolve",description:"Scale, axis, and legend resolutions for view composition specifications."},selection:{additionalProperties:{$ref:"#/definitions/SelectionDef"},description:"A key-value mapping between selection names and definitions.",type:"object"},spacing:{anyOf:[{type:"number"},{$ref:"#/definitions/RowCol<number>"}],description:'The spacing in pixels between sub-views of the composition operator.\nAn object of the form `{"row": number, "column": number}` can be used to set\ndifferent spacing values for rows and columns.\n\n__Default value__: Depends on `"spacing"` property of [the view composition configuration](https://vega.github.io/vega-lite/docs/config.html#view-config) (`20` by default)'},title:{anyOf:[{type:"string"},{$ref:"#/definitions/TitleParams"}],description:"Title for the plot."},transform:{description:"An array of data transformations such as filter and new field calculation.",items:{$ref:"#/definitions/Transform"},type:"array"},usermeta:{description:"Optional metadata that will be passed to Vega.\nThis object is completely ignored by Vega and Vega-Lite and can be used for custom metadata.",type:"object"},view:{$ref:"#/definitions/ViewBackground",description:"An object defining the view background's fill and stroke.\n\n__Default value:__ none (transparent)"},width:{description:'The width of a visualization.\n\n__Default value:__ This will be determined by the following rules:\n\n- If a view\'s [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `"fit"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n- If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n\n__Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n\n__See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.',type:"number"}},required:["data","mark"],type:"object"},TopoDataFormat:{additionalProperties:!1,properties:{feature:{description:'The name of the TopoJSON object set to convert to a GeoJSON feature collection.\nFor example, in a map of the world, there may be an object set named `"countries"`.\nUsing the feature property, we can extract this set and generate a GeoJSON feature object for each country.',type:"string"},mesh:{description:"The name of the TopoJSON object set to convert to mesh.\nSimilar to the `feature` option, `mesh` extracts a named TopoJSON object set.\n  Unlike the `feature` option, the corresponding geo data is returned as a single, unified mesh instance, not as individual GeoJSON features.\nExtracting a mesh is useful for more efficiently drawing borders or other geographic elements that you do not need to associate with specific regions such as individual countries, states or counties.",type:"string"},parse:{anyOf:[{$ref:"#/definitions/Parse"},{type:"null"}],description:'If set to `null`, disable type inference based on the spec and only use type inference based on the data.\nAlternatively, a parsing directive object can be provided for explicit data types. Each property of the object corresponds to a field name, and the value to the desired data type (one of `"number"`, `"boolean"`, `"date"`, or null (do not parse the field)).\nFor example, `"parse": {"modified_on": "date"}` parses the `modified_on` field in each input record a Date value.\n\nFor `"date"`, we parse data based using Javascript\'s [`Date.parse()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\nFor Specific date formats can be provided (e.g., `{foo: "date:\'%m%d%Y\'"}`), using the [d3-time-format syntax](https://github.com/d3/d3-time-format#locale_format). UTC date format parsing is supported similarly (e.g., `{foo: "utc:\'%m%d%Y\'"}`). See more about [UTC time](https://vega.github.io/vega-lite/docs/timeunit.html#utc)'},type:{description:'Type of input data: `"json"`, `"csv"`, `"tsv"`, `"dsv"`.\nThe default format type is determined by the extension of the file URL.\nIf no extension is detected, `"json"` will be used by default.',enum:["topojson"],type:"string"}},type:"object"},Transform:{anyOf:[{$ref:"#/definitions/FilterTransform"},{$ref:"#/definitions/CalculateTransform"},{$ref:"#/definitions/LookupTransform"},{$ref:"#/definitions/BinTransform"},{$ref:"#/definitions/TimeUnitTransform"},{$ref:"#/definitions/ImputeTransform"},{$ref:"#/definitions/AggregateTransform"},{$ref:"#/definitions/WindowTransform"},{$ref:"#/definitions/JoinAggregateTransform"},{$ref:"#/definitions/StackTransform"},{$ref:"#/definitions/FlattenTransform"},{$ref:"#/definitions/FoldTransform"},{$ref:"#/definitions/SampleTransform"}]},Type:{anyOf:[{$ref:"#/definitions/StandardType"},{enum:["geojson"],type:"string"}]},TypeForShape:{enum:["nominal","ordinal","geojson"],type:"string"},UnitSpec:{$ref:"#/definitions/GenericUnitSpec<Encoding,AnyMark>",description:"A unit specification, which can contain either [primitive marks or composite marks](https://vega.github.io/vega-lite/docs/mark.html#types)."},UrlData:{additionalProperties:!1,properties:{format:{$ref:"#/definitions/DataFormat",description:"An object that specifies the format for parsing the data."},name:{description:"Provide a placeholder name and bind data at runtime.",type:"string"},url:{description:"An URL from which to load the data set. Use the `format.type` property\nto ensure the loaded data is correctly parsed.",type:"string"}},required:["url"],type:"object"},UtcMultiTimeUnit:{enum:["utcyearquarter","utcyearquartermonth","utcyearmonth","utcyearmonthdate","utcyearmonthdatehours","utcyearmonthdatehoursminutes","utcyearmonthdatehoursminutesseconds","utcquartermonth","utcmonthdate","utcmonthdatehours","utchoursminutes","utchoursminutesseconds","utcminutesseconds","utcsecondsmilliseconds"],type:"string"},UtcSingleTimeUnit:{enum:["utcyear","utcquarter","utcmonth","utcday","utcdate","utchours","utcminutes","utcseconds","utcmilliseconds"],type:"string"},YValueDef:{additionalProperties:!1,description:"Definition object for a constant value of an encoding channel.",properties:{value:{anyOf:[{type:"number"},{enum:["height"],type:"string"}],description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).'}},required:["value"],type:"object"},XValueDef:{additionalProperties:!1,description:"Definition object for a constant value of an encoding channel.",properties:{value:{anyOf:[{type:"number"},{enum:["width"],type:"string"}],description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).'}},required:["value"],type:"object"},NumberValueDef:{additionalProperties:!1,description:"Definition object for a constant value of an encoding channel.",properties:{value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["value"],type:"object"},'ValueDefWithCondition<MarkPropFieldDef<"nominal">,string>':{anyOf:[{$ref:'#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef<"nominal">,string>'},{$ref:'#/definitions/ConditionOnlyDef<MarkPropFieldDef<"nominal">>'}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<MarkPropFieldDef,(string|null)>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef,(string|null)>"},{$ref:"#/definitions/ConditionOnlyDef<MarkPropFieldDef>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<MarkPropFieldDef,number>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef,number>"},{$ref:"#/definitions/ConditionOnlyDef<MarkPropFieldDef>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<MarkPropFieldDef<TypeForShape>,string>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<MarkPropFieldDef<TypeForShape>,string>"},{$ref:"#/definitions/ConditionOnlyDef<MarkPropFieldDef<TypeForShape>>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},"ValueDefWithCondition<TextFieldDef,(string|number|boolean)>":{anyOf:[{$ref:"#/definitions/ValueDefWithOptionalCondition<TextFieldDef,(string|number|boolean)>"},{$ref:"#/definitions/ConditionOnlyDef<TextFieldDef>"}],description:"A ValueDef with Condition<ValueDef | FieldDef> where either the conition or the value are optional.\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}"},'ValueDefWithOptionalCondition<MarkPropFieldDef<"nominal">,string>':{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:'#/definitions/ConditionalMarkPropFieldDef<"nominal">'},{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<MarkPropFieldDef,(string|null)>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef"},{$ref:"#/definitions/ConditionalColorValueDef"},{items:{$ref:"#/definitions/ConditionalColorValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","null"]}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<MarkPropFieldDef,number>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef"},{$ref:"#/definitions/ConditionalNumberValueDef"},{items:{$ref:"#/definitions/ConditionalNumberValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"number"}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<MarkPropFieldDef<TypeForShape>,string>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalMarkPropFieldDef<TypeForShape>"},{$ref:"#/definitions/ConditionalStringValueDef"},{items:{$ref:"#/definitions/ConditionalStringValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:"string"}},required:["value"],type:"object"},"ValueDefWithOptionalCondition<TextFieldDef,(string|number|boolean)>":{additionalProperties:!1,description:"A ValueDef with optional Condition<ValueDef | FieldDef>\n{\n   condition: {field: ...} | {value: ...},\n   value: ...,\n}",properties:{condition:{anyOf:[{$ref:"#/definitions/ConditionalTextFieldDef"},{$ref:"#/definitions/ConditionalTextValueDef"},{items:{$ref:"#/definitions/ConditionalTextValueDef"},type:"array"}],description:"A field definition or one or more value definition(s) with a selection predicate."},value:{description:'A constant value in visual domain (e.g., `"red"` / "#0099ff" for color, values between `0` to `1` for opacity).',type:["string","number","boolean"]}},required:["value"],type:"object"},ViewBackground:{additionalProperties:!1,properties:{cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},fill:{description:"The fill color.\n\n__Default value:__ `undefined`",type:["string","null"]},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},stroke:{description:'The stroke color.\n\n__Default value:__ `"#ddd"`',type:["string","null"]},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},style:{description:'A string or array of strings indicating the name of custom styles to apply to the view background. A style is a named collection of mark property defaults defined within the [style configuration](https://vega.github.io/vega-lite/docs/mark.html#style-config). If style is an array, later styles will override earlier styles.\n\n__Default value:__ `"cell"`\n__Note:__ Any specified view background properties will augment the default style.',type:"string"}},type:"object"},ViewConfig:{additionalProperties:!1,properties:{clip:{description:"Whether the view should be clipped.",type:"boolean"},cornerRadius:{description:"The radius in pixels of rounded rectangle corners.\n\n__Default value:__ `0`",type:"number"},fill:{description:"The fill color.\n\n__Default value:__ `undefined`",type:["string","null"]},fillOpacity:{description:"The fill opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},height:{description:"The default height of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) y-scale with `rangeStep` = `null`.\n\n__Default value:__ `200`",type:"number"},opacity:{description:"The overall opacity (value between [0,1]).\n\n__Default value:__ `0.7` for non-aggregate plots with `point`, `tick`, `circle`, or `square` marks or layered `bar` charts and `1` otherwise.",maximum:1,minimum:0,type:"number"},stroke:{description:'The stroke color.\n\n__Default value:__ `"#ddd"`',type:["string","null"]},strokeCap:{$ref:"#/definitions/StrokeCap",description:'The stroke cap for line ending style. One of `"butt"`, `"round"`, or `"square"`.\n\n__Default value:__ `"square"`'},strokeDash:{description:"An array of alternating stroke, space lengths for creating dashed or dotted lines.",items:{type:"number"},type:"array"},strokeDashOffset:{description:"The offset (in pixels) into which to begin drawing with the stroke dash array.",type:"number"},strokeJoin:{$ref:"#/definitions/StrokeJoin",description:'The stroke line join method. One of `"miter"`, `"round"` or `"bevel"`.\n\n__Default value:__ `"miter"`'},strokeMiterLimit:{description:"The miter limit at which to bevel a line join.",type:"number"},strokeOpacity:{description:"The stroke opacity (value between [0,1]).\n\n__Default value:__ `1`",maximum:1,minimum:0,type:"number"},strokeWidth:{description:"The stroke width, in pixels.",minimum:0,type:"number"},width:{description:"The default width of the single plot or each plot in a trellis plot when the visualization has a continuous (non-ordinal) x-scale or ordinal x-scale with `rangeStep` = `null`.\n\n__Default value:__ `200`",type:"number"}},type:"object"},WindowFieldDef:{additionalProperties:!1,properties:{as:{description:"The output name for the window operation.",type:"string"},field:{description:"The data field for which to compute the aggregate or window function. This can be omitted for window functions that do not operate over a field such as `count`, `rank`, `dense_rank`.",type:"string"},op:{anyOf:[{$ref:"#/definitions/AggregateOp"},{$ref:"#/definitions/WindowOnlyOp"}],description:"The window or aggregation operation to apply within a window (e.g.,`rank`, `lead`, `sum`, `average` or `count`). See the list of all supported operations [here](https://vega.github.io/vega-lite/docs/window.html#ops)."},param:{description:"Parameter values for the window functions. Parameter values can be omitted for operations that do not accept a parameter.\n\nSee the list of all supported operations and their parameters [here](https://vega.github.io/vega-lite/docs/transforms/window.html).",type:"number"}},required:["op","as"],type:"object"},WindowOnlyOp:{enum:["row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value"],type:"string"},WindowTransform:{additionalProperties:!1,properties:{frame:{description:"A frame specification as a two-element array indicating how the sliding window should proceed. The array entries should either be a number indicating the offset from the current data object, or null to indicate unbounded rows preceding or following the current data object. The default value is `[null, 0]`, indicating that the sliding window includes the current object and all preceding objects. The value `[-5, 5]` indicates that the window should include five objects preceding and five objects following the current object. Finally, `[null, null]` indicates that the window frame should always include all data objects. If you this frame and want to assign the same value to add objects, you can use the simpler [join aggregate transform](https://vega.github.io/vega-lite/docs/joinaggregate.html). The only operators affected are the aggregation operations and the `first_value`, `last_value`, and `nth_value` window operations. The other window operations are not affected by this.\n\n__Default value:__:  `[null, 0]` (includes the current object and all preceding objects)",items:{type:["null","number"]},type:"array"},groupby:{description:"The data fields for partitioning the data objects into separate windows. If unspecified, all data points will be in a single window.",items:{type:"string"},type:"array"},ignorePeers:{description:"Indicates if the sliding window frame should ignore peer values (data that are considered identical by the sort criteria). The default is false, causing the window frame to expand to include all peer values. If set to true, the window frame will be defined by offset values only. This setting only affects those operations that depend on the window frame, namely aggregation operations and the first_value, last_value, and nth_value window operations.\n\n__Default value:__ `false`",type:"boolean"},sort:{description:"A sort field definition for sorting data objects within a window. If two data objects are considered equal by the comparator, they are considered “peer” values of equal rank. If sort is not specified, the order is undefined: data objects are processed in the order they are observed and none are considered peers (the ignorePeers parameter is ignored and treated as if set to `true`).",items:{$ref:"#/definitions/SortField"},type:"array"},window:{description:"The definition of the fields in the window, and what calculations to use.",items:{$ref:"#/definitions/WindowFieldDef"},type:"array"}},required:["window"],type:"object"}}}},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],i=t[1];return 3*(n+i)/4-i},t.toByteArray=function(e){for(var t,n=c(e),i=n[0],a=n[1],s=new o(function(e,t,n){return 3*(t+n)/4-n}(0,i,a)),l=0,d=a>0?i-4:i,u=0;u<d;u+=4)t=r[e.charCodeAt(u)]<<18|r[e.charCodeAt(u+1)]<<12|r[e.charCodeAt(u+2)]<<6|r[e.charCodeAt(u+3)],s[l++]=t>>16&255,s[l++]=t>>8&255,s[l++]=255&t;2===a&&(t=r[e.charCodeAt(u)]<<2|r[e.charCodeAt(u+1)]>>4,s[l++]=255&t);1===a&&(t=r[e.charCodeAt(u)]<<10|r[e.charCodeAt(u+1)]<<4|r[e.charCodeAt(u+2)]>>2,s[l++]=t>>8&255,s[l++]=255&t);return s},t.fromByteArray=function(e){for(var t,n=e.length,r=n%3,o=[],a=0,s=n-r;a<s;a+=16383)o.push(u(e,a,a+16383>s?s:a+16383));1===r?(t=e[n-1],o.push(i[t>>2]+i[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],o.push(i[t>>10]+i[t>>4&63]+i[t<<2&63]+"="));return o.join("")};for(var i=[],r=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,l=a.length;s<l;++s)i[s]=a[s],r[a.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function d(e){return i[e>>18&63]+i[e>>12&63]+i[e>>6&63]+i[63&e]}function u(e,t,n){for(var i,r=[],o=t;o<n;o+=3)i=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),r.push(d(i));return r.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,i,r){var o,a,s=8*r-i-1,l=(1<<s)-1,c=l>>1,d=-7,u=n?r-1:0,f=n?-1:1,h=e[t+u];for(u+=f,o=h&(1<<-d)-1,h>>=-d,d+=s;d>0;o=256*o+e[t+u],u+=f,d-=8);for(a=o&(1<<-d)-1,o>>=-d,d+=i;d>0;a=256*a+e[t+u],u+=f,d-=8);if(0===o)o=1-c;else{if(o===l)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,i),o-=c}return(h?-1:1)*a*Math.pow(2,o-i)},t.write=function(e,t,n,i,r,o){var a,s,l,c=8*o-r-1,d=(1<<c)-1,u=d>>1,f=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,h=i?0:o-1,p=i?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=d):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),(t+=a+u>=1?f/l:f*Math.pow(2,1-u))*l>=2&&(a++,l/=2),a+u>=d?(s=0,a=d):a+u>=1?(s=(t*l-1)*Math.pow(2,r),a+=u):(s=t*Math.pow(2,u-1)*Math.pow(2,r),a=0));r>=8;e[n+h]=255&s,h+=p,s/=256,r-=8);for(a=a<<r|s,c+=r;c>0;e[n+h]=255&a,h+=p,a/=256,c-=8);e[n+h-p]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t){var n,i,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{i="function"==typeof clearTimeout?clearTimeout:a}catch(e){i=a}}();var l,c=[],d=!1,u=-1;function f(){d&&l&&(d=!1,l.length?c=l.concat(c):u=-1,c.length&&h())}function h(){if(!d){var e=s(f);d=!0;for(var t=c.length;t;){for(l=c,c=[];++u<t;)l&&l[u].run();u=-1,t=c.length}l=null,d=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===a||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function m(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new p(e,t)),1!==c.length||d||s(h)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=m,r.addListener=m,r.once=m,r.off=m,r.removeListener=m,r.removeAllListeners=m,r.emit=m,r.prependListener=m,r.prependOnceListener=m,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,t,n){var i=n(33);e.exports={json:n(8),topojson:n(35),treejson:n(36),dsv:i,csv:i.delimiter(","),tsv:i.delimiter("\t")}},function(e,t,n){var i=n(3),r=n(34);function o(e,t){if(e){var n=t.header;e=(n?n.join(t.delimiter)+"\n":"")+e}return r.dsv(t.delimiter).parse(e)}o.delimiter=function(e){var t={delimiter:e};return function(e,n){return o(e,n?i.extend(n,t):t)}},e.exports=o},function(e,t,n){!function(e){"use strict";function t(e){return new i(e)}function n(e){return new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}")}function i(e){var t=new RegExp('["'+e+"\n]"),i=e.charCodeAt(0);function r(t){return t.map(o).join(e)}function o(e){return t.test(e)?'"'+e.replace(/\"/g,'""')+'"':e}this.parse=function(e,t){var i,r,o=this.parseRows(e,function(e,o){if(i)return i(e,o-1);r=e,i=t?function(e,t){var i=n(e);return function(n,r){return t(i(n),r,e)}}(e,t):n(e)});return o.columns=r,o},this.parseRows=function(e,t){var n,r,o={},a={},s=[],l=e.length,c=0,d=0;function u(){if(c>=l)return a;if(r)return r=!1,o;var t,n=c;if(34===e.charCodeAt(n)){for(var s=n;s++<l;)if(34===e.charCodeAt(s)){if(34!==e.charCodeAt(s+1))break;++s}return c=s+2,13===(t=e.charCodeAt(s+1))?(r=!0,10===e.charCodeAt(s+2)&&++c):10===t&&(r=!0),e.slice(n+1,s).replace(/""/g,'"')}for(;c<l;){var d=1;if(10===(t=e.charCodeAt(c++)))r=!0;else if(13===t)r=!0,10===e.charCodeAt(c)&&(++c,++d);else if(t!==i)continue;return e.slice(n,c-d)}return e.slice(n)}for(;(n=u())!==a;){for(var f=[];n!==o&&n!==a;)f.push(n),n=u();t&&null==(f=t(f,d++))||s.push(f)}return s},this.format=function(t,n){return null==n&&(n=function(e){var t=Object.create(null),n=[];return e.forEach(function(e){for(var i in e)i in t||n.push(t[i]=i)}),n}(t)),[n.map(o).join(e)].concat(t.map(function(t){return n.map(function(e){return o(t[e])}).join(e)})).join("\n")},this.formatRows=function(e){return e.map(r).join("\n")}}t.prototype=i.prototype;var r=t(","),o=t("\t");e.version="0.1.14",e.dsv=t,e.csv=r,e.tsv=o}(t)},function(e,t,n){var i=n(8),r=function(e,t){var n=r.topojson;if(null==n)throw Error("TopoJSON library not loaded.");var o,a=i(e,t);if(t&&t.feature){if(o=a.objects[t.feature])return n.feature(a,o).features;throw Error("Invalid TopoJSON object: "+t.feature)}if(t&&t.mesh){if(o=a.objects[t.mesh])return[n.mesh(a,a.objects[t.mesh])];throw Error("Invalid TopoJSON object: "+t.mesh)}throw Error("Missing TopoJSON feature or mesh parameter.")};r.topojson=n(78),e.exports=r},function(e,t,n){var i=n(8);e.exports=function(e,t){return function(e,t){var n=t&&t.children||"children",i=t&&t.parent||"parent",r=[];return function e(t,o){t[i]=o,r.push(t);var a=t[n];if(a)for(var s=0;s<a.length;++s)e(a[s],t)}(e,null),r.root=e,r}(i(e,t),t)}},function(e,t,n){var i,r,o,a,s=n(3),l=n(15),c=n(38),d=n(39),u=d,f=c,h=new Date(2e3,0,1);function p(e){return e.length>4&&"locale"+(e[0].toUpperCase()+e[1].toLowerCase()+e[3].toUpperCase()+e[4].toLowerCase())}function m(e){var t=s.isString(e)?d[p(e)]:d.locale(e);if(null==t)throw Error("Unrecognized locale: "+e);u=t}function g(e){var t=s.isString(e)?c[p(e)]:c.locale(e);if(null==t)throw Error("Unrecognized locale: "+e);f=t,i=r=o=a=null}e.exports={numberLocale:m,number:function(e){return u.format(e)},numberPrefix:function(e,t){return u.formatPrefix(e,t)},timeLocale:g,time:function(e){return f.format(e)},utc:function(e){return f.utcFormat(e)},locale:function(e){m(e),g(e)},auto:{number:function(e){var t=u.format(".1f")(1)[1];null==e&&(e=",");null==(e=d.formatSpecifier(e)).precision&&(e.precision=12);switch(e.type){case"%":e.precision-=2;break;case"e":e.precision-=1}return function(e,t){return function(n){var i=e(n),r=i.indexOf(t);if(r<0)return i;for(var o=function(e,t){var n,i=e.lastIndexOf("e");if(i>0)return i;for(i=e.length;--i>t;)if((n=e.charCodeAt(i))>=48&&n<=57)return i+1}(i,r),a=o<i.length?i.slice(o):"";--o>r;)if("0"!==i[o]){++o;break}return i.slice(0,o)+a}}(u.format(e),t)},linear:function(e,t,n){var i=function(e,t){e.length||(e=[0]);null==t&&(t=10);var n=e[0],i=e[e.length-1];i<n&&(a=i,i=n,n=a);var r=i-n||(t=1,n||i||1),o=Math.pow(10,Math.floor(Math.log(r/t)/Math.LN10)),a=r/t/o;a>=y?o*=10:a>=_?o*=5:a>=v&&(o*=2);return[Math.ceil(n/o)*o,Math.floor(i/o)*o+o/2,o]}(e,t);null==n&&(n=",f");switch((n=d.formatSpecifier(n)).type){case"s":var r=Math.max(Math.abs(i[0]),Math.abs(i[1]));return null==n.precision&&(n.precision=d.precisionPrefix(i[2],r)),u.formatPrefix(n,r);case"":case"e":case"g":case"p":case"r":null==n.precision&&(n.precision=d.precisionRound(i[2],Math.max(Math.abs(i[0]),Math.abs(i[1])))-("e"===n.type));break;case"f":case"%":null==n.precision&&(n.precision=d.precisionFixed(i[2])-2*("%"===n.type))}return u.format(n)},time:function(){return function(){var e=f.format,t=e(".%L"),n=e(":%S"),i=e("%I:%M"),r=e("%I %p"),o=e("%a %d"),a=e("%b %d"),s=e("%B"),c=e("%Y");return function(e){var d=+e;return(l.second(e)<d?t:l.minute(e)<d?n:l.hour(e)<d?i:l.day(e)<d?r:l.month(e)<d?l.week(e)<d?o:a:l.year(e)<d?s:c)(e)}}()},utc:function(){return function(){var e=f.utcFormat,t=e(".%L"),n=e(":%S"),i=e("%I:%M"),r=e("%I %p"),o=e("%a %d"),a=e("%b %d"),s=e("%B"),c=e("%Y");return function(e){var d=+e;return(l.utcSecond(e)<d?t:l.utcMinute(e)<d?n:l.utcHour(e)<d?i:l.utcDay(e)<d?r:l.utcMonth(e)<d?l.utcWeek(e)<d?o:a:l.utcYear(e)<d?s:c)(e)}}()}},month:function(e,t){var n=t?r||(r=f.format("%b")):i||(i=f.format("%B"));return h.setMonth(e),n(h)},day:function(e,t){var n=t?a||(a=f.format("%a")):o||(o=f.format("%A"));return h.setMonth(0),h.setDate(2+e),n(h)},quarter:function(e){return Math.floor(e.getMonth()/3)+1},utcQuarter:function(e){return Math.floor(e.getUTCMonth()/3)+1}};var y=Math.sqrt(50),_=Math.sqrt(10),v=Math.sqrt(2)},function(e,t,n){!function(e,t){"use strict";function n(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function i(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function r(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}function o(e){var t=e.dateTime,o=e.date,s=e.time,l=e.periods,c=e.days,d=e.shortDays,u=e.months,ie=e.shortMonths,re=f(l),oe=h(l),ae=f(c),se=h(c),le=f(d),ce=h(d),de=f(u),ue=h(u),fe=f(ie),he=h(ie),pe={a:function(e){return d[e.getDay()]},A:function(e){return c[e.getDay()]},b:function(e){return ie[e.getMonth()]},B:function(e){return u[e.getMonth()]},c:null,d:A,e:A,H:P,I:O,j:$,L:C,m:F,M:j,p:function(e){return l[+(e.getHours()>=12)]},S:I,U:M,w:z,W:N,x:null,X:null,y:U,Y:R,Z:L,"%":ne},me={a:function(e){return d[e.getUTCDay()]},A:function(e){return c[e.getUTCDay()]},b:function(e){return ie[e.getUTCMonth()]},B:function(e){return u[e.getUTCMonth()]},c:null,d:q,e:q,H:B,I:V,j:W,L:Y,m:H,M:J,p:function(e){return l[+(e.getUTCHours()>=12)]},S:G,U:X,w:Q,W:K,x:null,X:null,y:Z,Y:ee,Z:te,"%":ne},ge={a:function(e,t,n){var i=le.exec(t.slice(n));return i?(e.w=ce[i[0].toLowerCase()],n+i[0].length):-1},A:function(e,t,n){var i=ae.exec(t.slice(n));return i?(e.w=se[i[0].toLowerCase()],n+i[0].length):-1},b:function(e,t,n){var i=fe.exec(t.slice(n));return i?(e.m=he[i[0].toLowerCase()],n+i[0].length):-1},B:function(e,t,n){var i=de.exec(t.slice(n));return i?(e.m=ue[i[0].toLowerCase()],n+i[0].length):-1},c:function(e,n,i){return ve(e,t,n,i)},d:w,e:w,H:E,I:E,j:x,L:T,m:b,M:k,p:function(e,t,n){var i=re.exec(t.slice(n));return i?(e.p=oe[i[0].toLowerCase()],n+i[0].length):-1},S:S,U:m,w:p,W:g,x:function(e,t,n){return ve(e,o,t,n)},X:function(e,t,n){return ve(e,s,t,n)},y:_,Y:y,Z:v,"%":D};function ye(e,t){return function(n){var i,r,o,s=[],l=-1,c=0,d=e.length;for(n instanceof Date||(n=new Date(+n));++l<d;)37===e.charCodeAt(l)&&(s.push(e.slice(c,l)),null!=(r=a[i=e.charAt(++l)])?i=e.charAt(++l):r="e"===i?" ":"0",(o=t[i])&&(i=o(n,r)),s.push(i),c=l+1);return s.push(e.slice(c,l)),s.join("")}}function _e(e,t){return function(n){var o=r(1900),a=ve(o,e,n+="",0);if(a!=n.length)return null;if("p"in o&&(o.H=o.H%12+12*o.p),"W"in o||"U"in o){"w"in o||(o.w="W"in o?1:0);var s="Z"in o?i(r(o.y)).getUTCDay():t(r(o.y)).getDay();o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(s+5)%7:o.w+7*o.U-(s+6)%7}return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,i(o)):t(o)}}function ve(e,t,n,i){for(var r,o,s=0,l=t.length,c=n.length;s<l;){if(i>=c)return-1;if(37===(r=t.charCodeAt(s++))){if(r=t.charAt(s++),!(o=ge[r in a?t.charAt(s++):r])||(i=o(e,n,i))<0)return-1}else if(r!=n.charCodeAt(i++))return-1}return i}return pe.x=ye(o,pe),pe.X=ye(s,pe),pe.c=ye(t,pe),me.x=ye(o,me),me.X=ye(s,me),me.c=ye(t,me),{format:function(e){var t=ye(e+="",pe);return t.parse=_e(e,n),t.toString=function(){return e},t},utcFormat:function(e){var t=ye(e+="",me);return t.parse=_e(e,i),t.toString=function(){return e},t}}}var a={"-":"",_:" ",0:"0"},s=/^\s*\d+/,l=/^%/,c=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;function d(e,t,n){var i=e<0?"-":"",r=(i?-e:e)+"",o=r.length;return i+(o<n?new Array(n-o+1).join(t)+r:r)}function u(e){return e.replace(c,"\\$&")}function f(e){return new RegExp("^(?:"+e.map(u).join("|")+")","i")}function h(e){for(var t={},n=-1,i=e.length;++n<i;)t[e[n].toLowerCase()]=n;return t}function p(e,t,n){var i=s.exec(t.slice(n,n+1));return i?(e.w=+i[0],n+i[0].length):-1}function m(e,t,n){var i=s.exec(t.slice(n));return i?(e.U=+i[0],n+i[0].length):-1}function g(e,t,n){var i=s.exec(t.slice(n));return i?(e.W=+i[0],n+i[0].length):-1}function y(e,t,n){var i=s.exec(t.slice(n,n+4));return i?(e.y=+i[0],n+i[0].length):-1}function _(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.y=+i[0]+(+i[0]>68?1900:2e3),n+i[0].length):-1}function v(e,t,n){var i=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(t.slice(n,n+6));return i?(e.Z=i[1]?0:-(i[2]+(i[3]||"00")),n+i[0].length):-1}function b(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.m=i[0]-1,n+i[0].length):-1}function w(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.d=+i[0],n+i[0].length):-1}function x(e,t,n){var i=s.exec(t.slice(n,n+3));return i?(e.m=0,e.d=+i[0],n+i[0].length):-1}function E(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.H=+i[0],n+i[0].length):-1}function k(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.M=+i[0],n+i[0].length):-1}function S(e,t,n){var i=s.exec(t.slice(n,n+2));return i?(e.S=+i[0],n+i[0].length):-1}function T(e,t,n){var i=s.exec(t.slice(n,n+3));return i?(e.L=+i[0],n+i[0].length):-1}function D(e,t,n){var i=l.exec(t.slice(n,n+1));return i?n+i[0].length:-1}function A(e,t){return d(e.getDate(),t,2)}function P(e,t){return d(e.getHours(),t,2)}function O(e,t){return d(e.getHours()%12||12,t,2)}function $(e,n){return d(1+t.day.count(t.year(e),e),n,3)}function C(e,t){return d(e.getMilliseconds(),t,3)}function F(e,t){return d(e.getMonth()+1,t,2)}function j(e,t){return d(e.getMinutes(),t,2)}function I(e,t){return d(e.getSeconds(),t,2)}function M(e,n){return d(t.sunday.count(t.year(e),e),n,2)}function z(e){return e.getDay()}function N(e,n){return d(t.monday.count(t.year(e),e),n,2)}function U(e,t){return d(e.getFullYear()%100,t,2)}function R(e,t){return d(e.getFullYear()%1e4,t,4)}function L(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+d(t/60|0,"0",2)+d(t%60,"0",2)}function q(e,t){return d(e.getUTCDate(),t,2)}function B(e,t){return d(e.getUTCHours(),t,2)}function V(e,t){return d(e.getUTCHours()%12||12,t,2)}function W(e,n){return d(1+t.utcDay.count(t.utcYear(e),e),n,3)}function Y(e,t){return d(e.getUTCMilliseconds(),t,3)}function H(e,t){return d(e.getUTCMonth()+1,t,2)}function J(e,t){return d(e.getUTCMinutes(),t,2)}function G(e,t){return d(e.getUTCSeconds(),t,2)}function X(e,n){return d(t.utcSunday.count(t.utcYear(e),e),n,2)}function Q(e){return e.getUTCDay()}function K(e,n){return d(t.utcMonday.count(t.utcYear(e),e),n,2)}function Z(e,t){return d(e.getUTCFullYear()%100,t,2)}function ee(e,t){return d(e.getUTCFullYear()%1e4,t,4)}function te(){return"+0000"}function ne(){return"%"}var ie=o({dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),re=o({dateTime:"%A, %e de %B de %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["diumenge","dilluns","dimarts","dimecres","dijous","divendres","dissabte"],shortDays:["dg.","dl.","dt.","dc.","dj.","dv.","ds."],months:["gener","febrer","març","abril","maig","juny","juliol","agost","setembre","octubre","novembre","desembre"],shortMonths:["gen.","febr.","març","abr.","maig","juny","jul.","ag.","set.","oct.","nov.","des."]}),oe=o({dateTime:"%A, der %e. %B %Y, %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],shortDays:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],shortMonths:["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}),ae=o({dateTime:"%A, der %e. %B %Y, %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],shortDays:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],shortMonths:["Jan","Feb","Mrz","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]}),se=o({dateTime:"%a %b %e %X %Y",date:"%Y-%m-%d",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),le=o({dateTime:"%a %e %b %X %Y",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),ce=o({dateTime:"%A, %e de %B de %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"],shortDays:["dom","lun","mar","mié","jue","vie","sáb"],months:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],shortMonths:["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"]}),de=o({dateTime:"%A, %-d. %Bta %Y klo %X",date:"%-d.%-m.%Y",time:"%H:%M:%S",periods:["a.m.","p.m."],days:["sunnuntai","maanantai","tiistai","keskiviikko","torstai","perjantai","lauantai"],shortDays:["Su","Ma","Ti","Ke","To","Pe","La"],months:["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesäkuu","heinäkuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"],shortMonths:["Tammi","Helmi","Maalis","Huhti","Touko","Kesä","Heinä","Elo","Syys","Loka","Marras","Joulu"]}),ue=o({dateTime:"%a %e %b %Y %X",date:"%Y-%m-%d",time:"%H:%M:%S",periods:["",""],days:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],shortDays:["dim","lun","mar","mer","jeu","ven","sam"],months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],shortMonths:["jan","fév","mar","avr","mai","jui","jul","aoû","sep","oct","nov","déc"]}),fe=o({dateTime:"%A, le %e %B %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],shortDays:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],shortMonths:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."]}),he=o({dateTime:"%A, %e ב%B %Y %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["ראשון","שני","שלישי","רביעי","חמישי","שישי","שבת"],shortDays:["א׳","ב׳","ג׳","ד׳","ה׳","ו׳","ש׳"],months:["ינואר","פברואר","מרץ","אפריל","מאי","יוני","יולי","אוגוסט","ספטמבר","אוקטובר","נובמבר","דצמבר"],shortMonths:["ינו׳","פבר׳","מרץ","אפר׳","מאי","יוני","יולי","אוג׳","ספט׳","אוק׳","נוב׳","דצמ׳"]}),pe=o({dateTime:"%Y. %B %-e., %A %X",date:"%Y. %m. %d.",time:"%H:%M:%S",periods:["de.","du."],days:["vasárnap","hétfő","kedd","szerda","csütörtök","péntek","szombat"],shortDays:["V","H","K","Sze","Cs","P","Szo"],months:["január","február","március","április","május","június","július","augusztus","szeptember","október","november","december"],shortMonths:["jan.","feb.","már.","ápr.","máj.","jún.","júl.","aug.","szept.","okt.","nov.","dec."]}),me=o({dateTime:"%A %e %B %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Domenica","Lunedì","Martedì","Mercoledì","Giovedì","Venerdì","Sabato"],shortDays:["Dom","Lun","Mar","Mer","Gio","Ven","Sab"],months:["Gennaio","Febbraio","Marzo","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobre","Novembre","Dicembre"],shortMonths:["Gen","Feb","Mar","Apr","Mag","Giu","Lug","Ago","Set","Ott","Nov","Dic"]}),ge=o({dateTime:"%Y %b %e %a %X",date:"%Y/%m/%d",time:"%H:%M:%S",periods:["AM","PM"],days:["日曜日","月曜日","火曜日","水曜日","木曜日","金曜日","土曜日"],shortDays:["日","月","火","水","木","金","土"],months:["睦月","如月","弥生","卯月","皐月","水無月","文月","葉月","長月","神無月","霜月","師走"],shortMonths:["1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月"]}),ye=o({dateTime:"%Y/%m/%d %a %X",date:"%Y/%m/%d",time:"%H:%M:%S",periods:["오전","오후"],days:["일요일","월요일","화요일","수요일","목요일","금요일","토요일"],shortDays:["일","월","화","수","목","금","토"],months:["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"],shortMonths:["1월","2월","3월","4월","5월","6월","7월","8월","9월","10월","11월","12월"]}),_e=o({dateTime:"%A, %e %B %Y г. %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["недела","понеделник","вторник","среда","четврток","петок","сабота"],shortDays:["нед","пон","вто","сре","чет","пет","саб"],months:["јануари","февруари","март","април","мај","јуни","јули","август","септември","октомври","ноември","декември"],shortMonths:["јан","фев","мар","апр","мај","јун","јул","авг","сеп","окт","ное","дек"]}),ve=o({dateTime:"%a %e %B %Y %T",date:"%d-%m-%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],shortDays:["zo","ma","di","wo","do","vr","za"],months:["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],shortMonths:["jan","feb","mrt","apr","mei","jun","jul","aug","sep","okt","nov","dec"]}),be=o({dateTime:"%A, %e %B %Y, %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Niedziela","Poniedziałek","Wtorek","Środa","Czwartek","Piątek","Sobota"],shortDays:["Niedz.","Pon.","Wt.","Śr.","Czw.","Pt.","Sob."],months:["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"],shortMonths:["Stycz.","Luty","Marz.","Kwie.","Maj","Czerw.","Lipc.","Sierp.","Wrz.","Paźdz.","Listop.","Grudz."]}),we=o({dateTime:"%A, %e de %B de %Y. %X",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],shortDays:["Dom","Seg","Ter","Qua","Qui","Sex","Sáb"],months:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],shortMonths:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"]}),xe=o({dateTime:"%A, %e %B %Y г. %X",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["воскресенье","понедельник","вторник","среда","четверг","пятница","суббота"],shortDays:["вс","пн","вт","ср","чт","пт","сб"],months:["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"],shortMonths:["янв","фев","мар","апр","май","июн","июл","авг","сен","окт","ноя","дек"]}),Ee=o({dateTime:"%A den %d %B %Y %X",date:"%Y-%m-%d",time:"%H:%M:%S",periods:["fm","em"],days:["Söndag","Måndag","Tisdag","Onsdag","Torsdag","Fredag","Lördag"],shortDays:["Sön","Mån","Tis","Ons","Tor","Fre","Lör"],months:["Januari","Februari","Mars","April","Maj","Juni","Juli","Augusti","September","Oktober","November","December"],shortMonths:["Jan","Feb","Mar","Apr","Maj","Jun","Jul","Aug","Sep","Okt","Nov","Dec"]}),ke=o({dateTime:"%a %b %e %X %Y",date:"%Y/%-m/%-d",time:"%H:%M:%S",periods:["上午","下午"],days:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],shortDays:["星期日","星期一","星期二","星期三","星期四","星期五","星期六"],months:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],shortMonths:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]});function Se(e){return e.toISOString()}Se.parse=function(e){var t=new Date(e);return isNaN(t)?null:t},Se.toString=function(){return"%Y-%m-%dT%H:%M:%S.%LZ"};var Te=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?Se:ie.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ"),De=ie.format,Ae=ie.utcFormat;e.version="0.2.1",e.format=De,e.utcFormat=Ae,e.locale=o,e.localeCaEs=re,e.localeDeCh=oe,e.localeDeDe=ae,e.localeEnCa=se,e.localeEnGb=le,e.localeEnUs=ie,e.localeEsEs=ce,e.localeFiFi=de,e.localeFrCa=ue,e.localeFrFr=fe,e.localeHeIl=he,e.localeHuHu=pe,e.localeItIt=me,e.localeJaJp=ge,e.localeKoKr=ye,e.localeMkMk=_e,e.localeNlNl=ve,e.localePlPl=be,e.localePtBr=we,e.localeRuRu=xe,e.localeSvSe=Ee,e.localeZhCn=ke,e.isoFormat=Te}(t,n(15))},function(e,t,n){!function(e){"use strict";function t(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,i=e.slice(0,n);return[i.length>1?i[0]+i.slice(2):i,+e.slice(n+1)]}function n(e){return(e=t(Math.abs(e)))?e[1]:NaN}var i;function r(e,n){var i=t(e,n);if(!i)return e+"";var r=i[0],o=i[1];return o<0?"0."+new Array(-o).join("0")+r:r.length>o+1?r.slice(0,o+1)+"."+r.slice(o+1):r+new Array(o-r.length+2).join("0")}var o={"":function(e,t){e=e.toPrecision(t);e:for(var n,i=e.length,r=1,o=-1;r<i;++r)switch(e[r]){case".":o=n=r;break;case"0":0===o&&(o=r),n=r;break;case"e":break e;default:o>0&&(o=0)}return o>0?e.slice(0,o)+e.slice(n+1):e},"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return r(100*e,t)},r:r,s:function(e,n){var r=t(e,n);if(!r)return e+"";var o=r[0],a=r[1],s=a-(i=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,l=o.length;return s===l?o:s>l?o+new Array(s-l+1).join("0"):s>0?o.slice(0,s)+"."+o.slice(s):"0."+new Array(1-s).join("0")+t(e,Math.max(0,n+s-1))[0]},X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},a=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function s(e){return new l(e)}function l(e){if(!(t=a.exec(e)))throw new Error("invalid format: "+e);var t,n=t[1]||" ",i=t[2]||">",r=t[3]||"-",s=t[4]||"",l=!!t[5],c=t[6]&&+t[6],d=!!t[7],u=t[8]&&+t[8].slice(1),f=t[9]||"";"n"===f?(d=!0,f="g"):o[f]||(f=""),(l||"0"===n&&"="===i)&&(l=!0,n="0",i="="),this.fill=n,this.align=i,this.sign=r,this.symbol=s,this.zero=l,this.width=c,this.comma=d,this.precision=u,this.type=f}l.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var c=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function d(e){return e}function u(e){var t=e.grouping&&e.thousands?function(e,t){return function(n,i){for(var r=n.length,o=[],a=0,s=e[0],l=0;r>0&&s>0&&(l+s+1>i&&(s=Math.max(1,i-l)),o.push(n.substring(r-=s,r+s)),!((l+=s+1)>i));)s=e[a=(a+1)%e.length];return o.reverse().join(t)}}(e.grouping,e.thousands):d,r=e.currency,a=e.decimal;function l(e){var n=(e=s(e)).fill,l=e.align,d=e.sign,u=e.symbol,f=e.zero,h=e.width,p=e.comma,m=e.precision,g=e.type,y="$"===u?r[0]:"#"===u&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",_="$"===u?r[1]:/[%p]/.test(g)?"%":"",v=o[g],b=!g||/[defgprs%]/.test(g);return m=null==m?g?6:12:/[gprs]/.test(g)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),function(e){var r=y,o=_;if("c"===g)o=v(e)+o,e="";else{var s=((e=+e)<0||1/e<0)&&(e*=-1,!0);if(e=v(e,m),s){var u=-1,w=e.length;for(s=!1;++u<w;)if(48<(x=e.charCodeAt(u))&&x<58||"x"===g&&96<x&&x<103||"X"===g&&64<x&&x<71){s=!0;break}}if(r=(s?"("===d?d:"-":"-"===d||"("===d?"":d)+r,o=o+("s"===g?c[8+i/3]:"")+(s&&"("===d?")":""),b)for(var x,u=-1,w=e.length;++u<w;)if(48>(x=e.charCodeAt(u))||x>57){o=(46===x?a+e.slice(u+1):e.slice(u))+o,e=e.slice(0,u);break}}p&&!f&&(e=t(e,1/0));var E=r.length+e.length+o.length,k=E<h?new Array(h-E+1).join(n):"";switch(p&&f&&(e=t(k+e,k.length?h-o.length:1/0),k=""),l){case"<":return r+e+o+k;case"=":return r+k+e+o;case"^":return k.slice(0,E=k.length>>1)+r+e+o+k.slice(E)}return k+r+e+o}}return{format:l,formatPrefix:function(e,t){var i=l(((e=s(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(n(t)/3))),o=Math.pow(10,-r),a=c[8+r/3];return function(e){return i(o*e)+a}}}}var f=u({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),h=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),p=u({decimal:",",thousands:" ",grouping:[3],currency:[""," Kč"]}),m=u({decimal:",",thousands:"'",grouping:[3],currency:[""," CHF"]}),g=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),y=u({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),_=u({decimal:".",thousands:",",grouping:[3],currency:["£",""]}),v=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),b=u({decimal:",",thousands:" ",grouping:[3],currency:[""," €"]}),w=u({decimal:",",thousands:" ",grouping:[3],currency:["","$"]}),x=u({decimal:",",thousands:".",grouping:[3],currency:[""," €"]}),E=u({decimal:".",thousands:",",grouping:[3],currency:["₪",""]}),k=u({decimal:",",thousands:" ",grouping:[3],currency:[""," Ft"]}),S=u({decimal:",",thousands:".",grouping:[3],currency:["€",""]}),T=u({decimal:".",thousands:",",grouping:[3],currency:["","円"]}),D=u({decimal:".",thousands:",",grouping:[3],currency:["₩",""]}),A=u({decimal:",",thousands:".",grouping:[3],currency:[""," ден."]}),P=u({decimal:",",thousands:".",grouping:[3],currency:["€ ",""]}),O=u({decimal:",",thousands:".",grouping:[3],currency:["","zł"]}),$=u({decimal:",",thousands:".",grouping:[3],currency:["R$",""]}),C=u({decimal:",",thousands:" ",grouping:[3],currency:[""," руб."]}),F=u({decimal:",",thousands:" ",grouping:[3],currency:["","SEK"]}),j=u({decimal:".",thousands:",",grouping:[3],currency:["¥",""]}),I=f.format,M=f.formatPrefix;e.version="0.4.2",e.format=I,e.formatPrefix=M,e.locale=u,e.localeCaEs=h,e.localeCsCz=p,e.localeDeCh=m,e.localeDeDe=g,e.localeEnCa=y,e.localeEnGb=_,e.localeEnUs=f,e.localeEsEs=v,e.localeFiFi=b,e.localeFrCa=w,e.localeFrFr=x,e.localeHeIl=E,e.localeHuHu=k,e.localeItIt=S,e.localeJaJp=T,e.localeKoKr=D,e.localeMkMk=A,e.localeNlNl=P,e.localePlPl=O,e.localePtBr=$,e.localeRuRu=C,e.localeSvSe=F,e.localeZhCn=j,e.formatSpecifier=s,e.precisionFixed=function(e){return Math.max(0,-n(Math.abs(e)))},e.precisionPrefix=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(n(t)/3)))-n(Math.abs(e)))},e.precisionRound=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,n(t)-n(e))+1}}(t)},function(e,t,n){var i=n(3),r=e.exports;r.repeat=function(e,t){var n,i=Array(t);for(n=0;n<t;++n)i[n]=e;return i},r.zeros=function(e){return r.repeat(0,e)},r.range=function(e,t,n){if(arguments.length<3&&(n=1,arguments.length<2&&(t=e,e=0)),(t-e)/n==1/0)throw new Error("Infinite range");var i,r=[],o=-1;if(n<0)for(;(i=e+n*++o)>t;)r.push(i);else for(;(i=e+n*++o)<t;)r.push(i);return r},r.random={},r.random.uniform=function(e,t){void 0===t&&(t=void 0===e?1:e,e=0);var n=t-e,i=function(){return e+n*Math.random()};return i.samples=function(e){return r.zeros(e).map(i)},i.pdf=function(i){return i>=e&&i<=t?1/n:0},i.cdf=function(i){return i<e?0:i>t?1:(i-e)/n},i.icdf=function(t){return t>=0&&t<=1?e+t*n:NaN},i},r.random.integer=function(e,t){void 0===t&&(t=e,e=0);var n=t-e,i=function(){return e+Math.floor(n*Math.random())};return i.samples=function(e){return r.zeros(e).map(i)},i.pdf=function(i){return i===Math.floor(i)&&i>=e&&i<t?1/n:0},i.cdf=function(i){var r=Math.floor(i);return r<e?0:r>=t?1:(r-e+1)/n},i.icdf=function(t){return t>=0&&t<=1?e-1+Math.floor(t*n):NaN},i},r.random.normal=function(e,t){var n;e=e||0,t=t||1;var i=function(){var i,r,o=0,a=0;if(void 0!==n)return o=n,n=void 0,o;do{i=(o=2*Math.random()-1)*o+(a=2*Math.random()-1)*a}while(0===i||i>1);return r=Math.sqrt(-2*Math.log(i)/i),n=e+a*r*t,e+o*r*t};return i.samples=function(e){return r.zeros(e).map(i)},i.pdf=function(n){var i=Math.exp(Math.pow(n-e,2)/(-2*Math.pow(t,2)));return 1/(t*Math.sqrt(2*Math.PI))*i},i.cdf=function(n){var i,r=(n-e)/t,o=Math.abs(r);if(o>37)i=0;else{var a=Math.exp(-o*o/2);o<7.07106781186547?(i=a*((((((.0352624965998911*o+.700383064443688)*o+6.37396220353165)*o+33.912866078383)*o+112.079291497871)*o+221.213596169931)*o+220.206867912376),i/=((((((.0883883476483184*o+1.75566716318264)*o+16.064177579207)*o+86.7807322029461)*o+296.564248779674)*o+637.333633378831)*o+793.826512519948)*o+440.413735824752):i=a/(o+1/(o+2/(o+3/(o+4/(o+.65)))))/2.506628274631}return r>0?1-i:i},i.icdf=function(n){if(n<=0||n>=1)return NaN;var i=2*n-1,r=8*(Math.PI-3)/(3*Math.PI*(4-Math.PI)),o=2/(Math.PI*r)+Math.log(1-Math.pow(i,2))/2,a=Math.log(1-i*i)/r,s=(i>0?1:-1)*Math.sqrt(Math.sqrt(o*o-a)-o);return e+t*Math.SQRT2*s},i},r.random.bootstrap=function(e,t){var n=e.filter(i.isValid),o=n.length,a=t?r.random.normal(0,t):null,s=function(){return n[~~(Math.random()*o)]+(a?a():0)};return s.samples=function(e){return r.zeros(e).map(s)},s}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";var i=n(9),r=n(4),o=n(11),a=n(17),s=n(18),l=r.ucs2length,c=n(10),d=o.Validation;function u(e,t,n){for(var i=0;i<this._compilations.length;i++){var r=this._compilations[i];if(r.schema==e&&r.root==t&&r.baseId==n)return i}return-1}function f(e,t){return"var pattern"+e+" = new RegExp("+r.toQuotedString(t[e])+");"}function h(e){return"var default"+e+" = defaults["+e+"];"}function p(e,t){return void 0===t[e]?"":"var refVal"+e+" = refVal["+e+"];"}function m(e){return"var customRule"+e+" = customRules["+e+"];"}function g(e,t){if(!e.length)return"";for(var n="",i=0;i<e.length;i++)n+=t(i,e);return n}e.exports=function e(t,n,y,_){var v=this,b=this._opts,w=[void 0],x={},E=[],k={},S=[],T={},D=[];n=n||{schema:t,refVal:w,refs:x};var A=function(e,t,n){var i=u.call(this,e,t,n);return i>=0?{index:i,compiling:!0}:(i=this._compilations.length,this._compilations[i]={schema:e,root:t,baseId:n},{index:i,compiling:!1})}.call(this,t,n,_);var P=this._compilations[A.index];if(A.compiling)return P.callValidate=function e(){var t=P.validate;var n=t.apply(this,arguments);e.errors=t.errors;return n};var O=this._formats;var $=this.RULES;try{var C=j(t,n,y,_);P.validate=C;var F=P.callValidate;return F&&(F.schema=C.schema,F.errors=null,F.refs=C.refs,F.refVal=C.refVal,F.root=C.root,F.$async=C.$async,b.sourceCode&&(F.source=C.source)),C}finally{(function(e,t,n){var i=u.call(this,e,t,n);i>=0&&this._compilations.splice(i,1)}).call(this,t,n,_)}function j(t,a,u,y){var _=!a||a&&a.schema==t;if(a.schema!=n.schema)return e.call(v,t,a,u,y);var k,T=!0===t.$async,A=s({isTop:!0,schema:t,isRoot:_,baseId:y,root:a,schemaPath:"",errSchemaPath:"#",errorPath:'""',MissingRefError:o.MissingRef,RULES:$,validate:s,util:r,resolve:i,resolveRef:I,usePattern:N,useDefault:U,useCustomRule:R,opts:b,formats:O,logger:v.logger,self:v});A=g(w,p)+g(E,f)+g(S,h)+g(D,m)+A,b.processCode&&(A=b.processCode(A));try{var P=new Function("self","RULES","formats","root","refVal","defaults","customRules","equal","ucs2length","ValidationError",A);k=P(v,$,O,n,w,S,D,c,l,d),w[0]=k}catch(e){throw v.logger.error("Error compiling schema, function code:",A),e}return k.schema=t,k.errors=null,k.refs=x,k.refVal=w,k.root=_?k:a,T&&(k.$async=!0),!0===b.sourceCode&&(k.source={code:A,patterns:E,defaults:S}),k}function I(t,r,o){r=i.url(t,r);var a,s,l=x[r];if(void 0!==l)return z(a=w[l],s="refVal["+l+"]");if(!o&&n.refs){var c=n.refs[r];if(void 0!==c)return a=n.refVal[c],s=M(r,a),z(a,s)}s=M(r);var d=i.call(v,j,n,r);if(void 0===d){var u=y&&y[r];u&&(d=i.inlineRef(u,b.inlineRefs)?u:e.call(v,u,n,y,t))}if(void 0!==d)return function(e,t){var n=x[e];w[n]=t}(r,d),z(d,s);!function(e){delete x[e]}(r)}function M(e,t){var n=w.length;return w[n]=t,x[e]=n,"refVal"+n}function z(e,t){return"object"==typeof e||"boolean"==typeof e?{code:t,schema:e,inline:!0}:{code:t,$async:e&&!!e.$async}}function N(e){var t=k[e];return void 0===t&&(t=k[e]=E.length,E[t]=e),"pattern"+t}function U(e){switch(typeof e){case"boolean":case"number":return""+e;case"string":return r.toQuotedString(e);case"object":if(null===e)return"null";var t=a(e),n=T[t];return void 0===n&&(n=T[t]=S.length,S[n]=e),"default"+n}}function R(e,t,n,i){if(!1!==v._opts.validateSchema){var r=e.definition.dependencies;if(r&&!r.every(function(e){return Object.prototype.hasOwnProperty.call(n,e)}))throw new Error("parent schema must have all required keywords: "+r.join(","));var o=e.definition.validateSchema;if(o){var a=o(t);if(!a){var s="keyword schema is invalid: "+v.errorsText(o.errors);if("log"!=v._opts.validateSchema)throw new Error(s);v.logger.error(s)}}}var l,c=e.definition.compile,d=e.definition.inline,u=e.definition.macro;if(c)l=c.call(v,t,n,i);else if(u)l=u.call(v,t,n,i),!1!==b.validateSchema&&v.validateSchema(l,!0);else if(d)l=d.call(v,i,e.keyword,t,n);else if(!(l=e.definition.validate))return;if(void 0===l)throw new Error('custom keyword "'+e.keyword+'"failed to compile');var f=D.length;return D[f]=l,{code:"customRule"+f,validate:l}}}},function(e,t,n){
/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */
!function(e){"use strict";function t(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];if(t.length>1){t[0]=t[0].slice(0,-1);for(var i=t.length-1,r=1;r<i;++r)t[r]=t[r].slice(1,-1);return t[i]=t[i].slice(1),t.join("")}return t[0]}function n(e){return"(?:"+e+")"}function i(e){return void 0===e?"undefined":null===e?"null":Object.prototype.toString.call(e).split(" ").pop().split("]").shift().toLowerCase()}function r(e){return e.toUpperCase()}function o(e){var i=t("[0-9]","[A-Fa-f]"),r=n(n("%[EFef]"+i+"%"+i+i+"%"+i+i)+"|"+n("%[89A-Fa-f]"+i+"%"+i+i)+"|"+n("%"+i+i)),o="[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]",a=t("[\\:\\/\\?\\#\\[\\]\\@]",o),s=e?"[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]":"[]",l=e?"[\\uE000-\\uF8FF]":"[]",c=t("[A-Za-z]","[0-9]","[\\-\\.\\_\\~]",s),d=n("[A-Za-z]"+t("[A-Za-z]","[0-9]","[\\+\\-\\.]")+"*"),u=n(n(r+"|"+t(c,o,"[\\:]"))+"*"),f=(n(n("25[0-5]")+"|"+n("2[0-4][0-9]")+"|"+n("1[0-9][0-9]")+"|"+n("[1-9][0-9]")+"|[0-9]"),n(n("25[0-5]")+"|"+n("2[0-4][0-9]")+"|"+n("1[0-9][0-9]")+"|"+n("0?[1-9][0-9]")+"|0?0?[0-9]")),h=n(f+"\\."+f+"\\."+f+"\\."+f),p=n(i+"{1,4}"),m=n(n(p+"\\:"+p)+"|"+h),g=n(n(p+"\\:")+"{6}"+m),y=n("\\:\\:"+n(p+"\\:")+"{5}"+m),_=n(n(p)+"?\\:\\:"+n(p+"\\:")+"{4}"+m),v=n(n(n(p+"\\:")+"{0,1}"+p)+"?\\:\\:"+n(p+"\\:")+"{3}"+m),b=n(n(n(p+"\\:")+"{0,2}"+p)+"?\\:\\:"+n(p+"\\:")+"{2}"+m),w=n(n(n(p+"\\:")+"{0,3}"+p)+"?\\:\\:"+p+"\\:"+m),x=n(n(n(p+"\\:")+"{0,4}"+p)+"?\\:\\:"+m),E=n(n(n(p+"\\:")+"{0,5}"+p)+"?\\:\\:"+p),k=n(n(n(p+"\\:")+"{0,6}"+p)+"?\\:\\:"),S=n([g,y,_,v,b,w,x,E,k].join("|")),T=n(n(c+"|"+r)+"+"),D=(n(S+"\\%25"+T),n(S+n("\\%25|\\%(?!"+i+"{2})")+T)),A=n("[vV]"+i+"+\\."+t(c,o,"[\\:]")+"+"),P=n("\\["+n(D+"|"+S+"|"+A)+"\\]"),O=n(n(r+"|"+t(c,o))+"*"),$=n(P+"|"+h+"(?!"+O+")|"+O),C=n("[0-9]*"),F=n(n(u+"@")+"?"+$+n("\\:"+C)+"?"),j=n(r+"|"+t(c,o,"[\\:\\@]")),I=n(j+"*"),M=n(j+"+"),z=n(n(r+"|"+t(c,o,"[\\@]"))+"+"),N=n(n("\\/"+I)+"*"),U=n("\\/"+n(M+N)+"?"),R=n(z+N),L=n(M+N),q="(?!"+j+")",B=(n(N+"|"+U+"|"+R+"|"+L+"|"+q),n(n(j+"|"+t("[\\/\\?]",l))+"*")),V=n(n(j+"|[\\/\\?]")+"*"),W=n(n("\\/\\/"+F+N)+"|"+U+"|"+L+"|"+q),Y=n(d+"\\:"+W+n("\\?"+B)+"?"+n("\\#"+V)+"?"),H=n(n("\\/\\/"+F+N)+"|"+U+"|"+R+"|"+q),J=n(H+n("\\?"+B)+"?"+n("\\#"+V)+"?");return n(Y+"|"+J),n(d+"\\:"+W+n("\\?"+B)+"?"),n(n("\\/\\/("+n("("+u+")@")+"?("+$+")"+n("\\:("+C+")")+"?)")+"?("+N+"|"+U+"|"+L+"|"+q+")"),n("\\?("+B+")"),n("\\#("+V+")"),n(n("\\/\\/("+n("("+u+")@")+"?("+$+")"+n("\\:("+C+")")+"?)")+"?("+N+"|"+U+"|"+R+"|"+q+")"),n("\\?("+B+")"),n("\\#("+V+")"),n(n("\\/\\/("+n("("+u+")@")+"?("+$+")"+n("\\:("+C+")")+"?)")+"?("+N+"|"+U+"|"+L+"|"+q+")"),n("\\?("+B+")"),n("\\#("+V+")"),n("("+u+")@"),n("\\:("+C+")"),{NOT_SCHEME:new RegExp(t("[^]","[A-Za-z]","[0-9]","[\\+\\-\\.]"),"g"),NOT_USERINFO:new RegExp(t("[^\\%\\:]",c,o),"g"),NOT_HOST:new RegExp(t("[^\\%\\[\\]\\:]",c,o),"g"),NOT_PATH:new RegExp(t("[^\\%\\/\\:\\@]",c,o),"g"),NOT_PATH_NOSCHEME:new RegExp(t("[^\\%\\/\\@]",c,o),"g"),NOT_QUERY:new RegExp(t("[^\\%]",c,o,"[\\:\\@\\/\\?]",l),"g"),NOT_FRAGMENT:new RegExp(t("[^\\%]",c,o,"[\\:\\@\\/\\?]"),"g"),ESCAPE:new RegExp(t("[^]",c,o),"g"),UNRESERVED:new RegExp(c,"g"),OTHER_CHARS:new RegExp(t("[^\\%]",c,a),"g"),PCT_ENCODED:new RegExp(r,"g"),IPV4ADDRESS:new RegExp("^("+h+")$"),IPV6ADDRESS:new RegExp("^\\[?("+S+")"+n(n("\\%25|\\%(?!"+i+"{2})")+"("+T+")")+"?\\]?$")}}var a=o(!1),s=o(!0),l=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],i=!0,r=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);i=!0);}catch(e){r=!0,o=e}finally{try{!i&&s.return&&s.return()}finally{if(r)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},c=2147483647,d=/^xn--/,u=/[^\0-\x7E]/,f=/[\x2E\u3002\uFF0E\uFF61]/g,h={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},p=Math.floor,m=String.fromCharCode;function g(e){throw new RangeError(h[e])}function y(e,t){var n=e.split("@"),i="";n.length>1&&(i=n[0]+"@",e=n[1]);var r=(e=e.replace(f,".")).split("."),o=function(e,t){for(var n=[],i=e.length;i--;)n[i]=t(e[i]);return n}(r,t).join(".");return i+o}function _(e){for(var t=[],n=0,i=e.length;n<i;){var r=e.charCodeAt(n++);if(r>=55296&&r<=56319&&n<i){var o=e.charCodeAt(n++);56320==(64512&o)?t.push(((1023&r)<<10)+(1023&o)+65536):(t.push(r),n--)}else t.push(r)}return t}var v=function(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:36},b=function(e,t){return e+22+75*(e<26)-((0!=t)<<5)},w=function(e,t,n){var i=0;for(e=n?p(e/700):e>>1,e+=p(e/t);e>455;i+=36)e=p(e/35);return p(i+36*e/(e+38))},x=function(e){var t=[],n=e.length,i=0,r=128,o=72,a=e.lastIndexOf("-");a<0&&(a=0);for(var s=0;s<a;++s)e.charCodeAt(s)>=128&&g("not-basic"),t.push(e.charCodeAt(s));for(var l=a>0?a+1:0;l<n;){for(var d=i,u=1,f=36;;f+=36){l>=n&&g("invalid-input");var h=v(e.charCodeAt(l++));(h>=36||h>p((c-i)/u))&&g("overflow"),i+=h*u;var m=f<=o?1:f>=o+26?26:f-o;if(h<m)break;var y=36-m;u>p(c/y)&&g("overflow"),u*=y}var _=t.length+1;o=w(i-d,_,0==d),p(i/_)>c-r&&g("overflow"),r+=p(i/_),i%=_,t.splice(i++,0,r)}return String.fromCodePoint.apply(String,t)},E=function(e){var t=[],n=(e=_(e)).length,i=128,r=0,o=72,a=!0,s=!1,l=void 0;try{for(var d,u=e[Symbol.iterator]();!(a=(d=u.next()).done);a=!0){var f=d.value;f<128&&t.push(m(f))}}catch(e){s=!0,l=e}finally{try{!a&&u.return&&u.return()}finally{if(s)throw l}}var h=t.length,y=h;for(h&&t.push("-");y<n;){var v=c,x=!0,E=!1,k=void 0;try{for(var S,T=e[Symbol.iterator]();!(x=(S=T.next()).done);x=!0){var D=S.value;D>=i&&D<v&&(v=D)}}catch(e){E=!0,k=e}finally{try{!x&&T.return&&T.return()}finally{if(E)throw k}}var A=y+1;v-i>p((c-r)/A)&&g("overflow"),r+=(v-i)*A,i=v;var P=!0,O=!1,$=void 0;try{for(var C,F=e[Symbol.iterator]();!(P=(C=F.next()).done);P=!0){var j=C.value;if(j<i&&++r>c&&g("overflow"),j==i){for(var I=r,M=36;;M+=36){var z=M<=o?1:M>=o+26?26:M-o;if(I<z)break;var N=I-z,U=36-z;t.push(m(b(z+N%U,0))),I=p(N/U)}t.push(m(b(I,0))),o=w(r,A,y==h),r=0,++y}}}catch(e){O=!0,$=e}finally{try{!P&&F.return&&F.return()}finally{if(O)throw $}}++r,++i}return t.join("")},k={version:"2.1.0",ucs2:{decode:_,encode:function(e){return String.fromCodePoint.apply(String,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(e))}},decode:x,encode:E,toASCII:function(e){return y(e,function(e){return u.test(e)?"xn--"+E(e):e})},toUnicode:function(e){return y(e,function(e){return d.test(e)?x(e.slice(4).toLowerCase()):e})}},S={};function T(e){var t=e.charCodeAt(0);return t<16?"%0"+t.toString(16).toUpperCase():t<128?"%"+t.toString(16).toUpperCase():t<2048?"%"+(t>>6|192).toString(16).toUpperCase()+"%"+(63&t|128).toString(16).toUpperCase():"%"+(t>>12|224).toString(16).toUpperCase()+"%"+(t>>6&63|128).toString(16).toUpperCase()+"%"+(63&t|128).toString(16).toUpperCase()}function D(e){for(var t="",n=0,i=e.length;n<i;){var r=parseInt(e.substr(n+1,2),16);if(r<128)t+=String.fromCharCode(r),n+=3;else if(r>=194&&r<224){if(i-n>=6){var o=parseInt(e.substr(n+4,2),16);t+=String.fromCharCode((31&r)<<6|63&o)}else t+=e.substr(n,6);n+=6}else if(r>=224){if(i-n>=9){var a=parseInt(e.substr(n+4,2),16),s=parseInt(e.substr(n+7,2),16);t+=String.fromCharCode((15&r)<<12|(63&a)<<6|63&s)}else t+=e.substr(n,9);n+=9}else t+=e.substr(n,3),n+=3}return t}function A(e,t){function n(e){var n=D(e);return n.match(t.UNRESERVED)?n:e}return e.scheme&&(e.scheme=String(e.scheme).replace(t.PCT_ENCODED,n).toLowerCase().replace(t.NOT_SCHEME,"")),void 0!==e.userinfo&&(e.userinfo=String(e.userinfo).replace(t.PCT_ENCODED,n).replace(t.NOT_USERINFO,T).replace(t.PCT_ENCODED,r)),void 0!==e.host&&(e.host=String(e.host).replace(t.PCT_ENCODED,n).toLowerCase().replace(t.NOT_HOST,T).replace(t.PCT_ENCODED,r)),void 0!==e.path&&(e.path=String(e.path).replace(t.PCT_ENCODED,n).replace(e.scheme?t.NOT_PATH:t.NOT_PATH_NOSCHEME,T).replace(t.PCT_ENCODED,r)),void 0!==e.query&&(e.query=String(e.query).replace(t.PCT_ENCODED,n).replace(t.NOT_QUERY,T).replace(t.PCT_ENCODED,r)),void 0!==e.fragment&&(e.fragment=String(e.fragment).replace(t.PCT_ENCODED,n).replace(t.NOT_FRAGMENT,T).replace(t.PCT_ENCODED,r)),e}function P(e){return e.replace(/^0*(.*)/,"$1")||"0"}function O(e,t){var n=e.match(t.IPV4ADDRESS)||[],i=l(n,2),r=i[1];return r?r.split(".").map(P).join("."):e}function $(e,t){var n=e.match(t.IPV6ADDRESS)||[],i=l(n,3),r=i[1],o=i[2];if(r){for(var a=r.toLowerCase().split("::").reverse(),s=l(a,2),c=s[0],d=s[1],u=d?d.split(":").map(P):[],f=c.split(":").map(P),h=t.IPV4ADDRESS.test(f[f.length-1]),p=h?7:8,m=f.length-p,g=Array(p),y=0;y<p;++y)g[y]=u[y]||f[m+y]||"";h&&(g[p-1]=O(g[p-1],t));var _=g.reduce(function(e,t,n){if(!t||"0"===t){var i=e[e.length-1];i&&i.index+i.length===n?i.length++:e.push({index:n,length:1})}return e},[]),v=_.sort(function(e,t){return t.length-e.length})[0],b=void 0;if(v&&v.length>1){var w=g.slice(0,v.index),x=g.slice(v.index+v.length);b=w.join(":")+"::"+x.join(":")}else b=g.join(":");return o&&(b+="%"+o),b}return e}var C=/^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i,F=void 0==="".match(/(){0}/)[1];function j(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={},i=!1!==t.iri?s:a;"suffix"===t.reference&&(e=(t.scheme?t.scheme+":":"")+"//"+e);var r=e.match(C);if(r){F?(n.scheme=r[1],n.userinfo=r[3],n.host=r[4],n.port=parseInt(r[5],10),n.path=r[6]||"",n.query=r[7],n.fragment=r[8],isNaN(n.port)&&(n.port=r[5])):(n.scheme=r[1]||void 0,n.userinfo=-1!==e.indexOf("@")?r[3]:void 0,n.host=-1!==e.indexOf("//")?r[4]:void 0,n.port=parseInt(r[5],10),n.path=r[6]||"",n.query=-1!==e.indexOf("?")?r[7]:void 0,n.fragment=-1!==e.indexOf("#")?r[8]:void 0,isNaN(n.port)&&(n.port=e.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/)?r[4]:void 0)),n.host&&(n.host=$(O(n.host,i),i)),void 0!==n.scheme||void 0!==n.userinfo||void 0!==n.host||void 0!==n.port||n.path||void 0!==n.query?void 0===n.scheme?n.reference="relative":void 0===n.fragment?n.reference="absolute":n.reference="uri":n.reference="same-document",t.reference&&"suffix"!==t.reference&&t.reference!==n.reference&&(n.error=n.error||"URI is not a "+t.reference+" reference.");var o=S[(t.scheme||n.scheme||"").toLowerCase()];if(t.unicodeSupport||o&&o.unicodeSupport)A(n,i);else{if(n.host&&(t.domainHost||o&&o.domainHost))try{n.host=k.toASCII(n.host.replace(i.PCT_ENCODED,D).toLowerCase())}catch(e){n.error=n.error||"Host's domain name can not be converted to ASCII via punycode: "+e}A(n,a)}o&&o.parse&&o.parse(n,t)}else n.error=n.error||"URI can not be parsed.";return n}var I=/^\.\.?\//,M=/^\/\.(\/|$)/,z=/^\/\.\.(\/|$)/,N=/^\/?(?:.|\n)*?(?=\/|$)/;function U(e){for(var t=[];e.length;)if(e.match(I))e=e.replace(I,"");else if(e.match(M))e=e.replace(M,"/");else if(e.match(z))e=e.replace(z,"/"),t.pop();else if("."===e||".."===e)e="";else{var n=e.match(N);if(!n)throw new Error("Unexpected dot segment condition");var i=n[0];e=e.slice(i.length),t.push(i)}return t.join("")}function R(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.iri?s:a,i=[],r=S[(t.scheme||e.scheme||"").toLowerCase()];if(r&&r.serialize&&r.serialize(e,t),e.host)if(n.IPV6ADDRESS.test(e.host));else if(t.domainHost||r&&r.domainHost)try{e.host=t.iri?k.toUnicode(e.host):k.toASCII(e.host.replace(n.PCT_ENCODED,D).toLowerCase())}catch(n){e.error=e.error||"Host's domain name can not be converted to "+(t.iri?"Unicode":"ASCII")+" via punycode: "+n}A(e,n),"suffix"!==t.reference&&e.scheme&&(i.push(e.scheme),i.push(":"));var o=function(e,t){var n=!1!==t.iri?s:a,i=[];return void 0!==e.userinfo&&(i.push(e.userinfo),i.push("@")),void 0!==e.host&&i.push($(O(String(e.host),n),n).replace(n.IPV6ADDRESS,function(e,t,n){return"["+t+(n?"%25"+n:"")+"]"})),"number"==typeof e.port&&(i.push(":"),i.push(e.port.toString(10))),i.length?i.join(""):void 0}(e,t);if(void 0!==o&&("suffix"!==t.reference&&i.push("//"),i.push(o),e.path&&"/"!==e.path.charAt(0)&&i.push("/")),void 0!==e.path){var l=e.path;t.absolutePath||r&&r.absolutePath||(l=U(l)),void 0===o&&(l=l.replace(/^\/\//,"/%2F")),i.push(l)}return void 0!==e.query&&(i.push("?"),i.push(e.query)),void 0!==e.fragment&&(i.push("#"),i.push(e.fragment)),i.join("")}function L(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=arguments[3],r={};return i||(e=j(R(e,n),n),t=j(R(t,n),n)),!(n=n||{}).tolerant&&t.scheme?(r.scheme=t.scheme,r.userinfo=t.userinfo,r.host=t.host,r.port=t.port,r.path=U(t.path||""),r.query=t.query):(void 0!==t.userinfo||void 0!==t.host||void 0!==t.port?(r.userinfo=t.userinfo,r.host=t.host,r.port=t.port,r.path=U(t.path||""),r.query=t.query):(t.path?("/"===t.path.charAt(0)?r.path=U(t.path):(void 0===e.userinfo&&void 0===e.host&&void 0===e.port||e.path?e.path?r.path=e.path.slice(0,e.path.lastIndexOf("/")+1)+t.path:r.path=t.path:r.path="/"+t.path,r.path=U(r.path)),r.query=t.query):(r.path=e.path,void 0!==t.query?r.query=t.query:r.query=e.query),r.userinfo=e.userinfo,r.host=e.host,r.port=e.port),r.scheme=e.scheme),r.fragment=t.fragment,r}function q(e,t){return e&&e.toString().replace(t&&t.iri?s.PCT_ENCODED:a.PCT_ENCODED,D)}var B={scheme:"http",domainHost:!0,parse:function(e,t){return e.host||(e.error=e.error||"HTTP URIs must have a host."),e},serialize:function(e,t){return e.port!==("https"!==String(e.scheme).toLowerCase()?80:443)&&""!==e.port||(e.port=void 0),e.path||(e.path="/"),e}},V={scheme:"https",domainHost:B.domainHost,parse:B.parse,serialize:B.serialize},W={},Y="[A-Za-z0-9\\-\\.\\_\\~\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]",H="[0-9A-Fa-f]",J=n(n("%[EFef][0-9A-Fa-f]%"+H+H+"%"+H+H)+"|"+n("%[89A-Fa-f][0-9A-Fa-f]%"+H+H)+"|"+n("%"+H+H)),G=t("[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]",'[\\"\\\\]'),X=new RegExp(Y,"g"),Q=new RegExp(J,"g"),K=new RegExp(t("[^]","[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]","[\\.]",'[\\"]',G),"g"),Z=new RegExp(t("[^]",Y,"[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]"),"g"),ee=Z;function te(e){var t=D(e);return t.match(X)?t:e}var ne={scheme:"mailto",parse:function(e,t){var n=e,i=n.to=n.path?n.path.split(","):[];if(n.path=void 0,n.query){for(var r=!1,o={},a=n.query.split("&"),s=0,l=a.length;s<l;++s){var c=a[s].split("=");switch(c[0]){case"to":for(var d=c[1].split(","),u=0,f=d.length;u<f;++u)i.push(d[u]);break;case"subject":n.subject=q(c[1],t);break;case"body":n.body=q(c[1],t);break;default:r=!0,o[q(c[0],t)]=q(c[1],t)}}r&&(n.headers=o)}n.query=void 0;for(var h=0,p=i.length;h<p;++h){var m=i[h].split("@");if(m[0]=q(m[0]),t.unicodeSupport)m[1]=q(m[1],t).toLowerCase();else try{m[1]=k.toASCII(q(m[1],t).toLowerCase())}catch(e){n.error=n.error||"Email address's domain name can not be converted to ASCII via punycode: "+e}i[h]=m.join("@")}return n},serialize:function(e,t){var n=e,i=function(e){return void 0!==e&&null!==e?e instanceof Array?e:"number"!=typeof e.length||e.split||e.setInterval||e.call?[e]:Array.prototype.slice.call(e):[]}(e.to);if(i){for(var o=0,a=i.length;o<a;++o){var s=String(i[o]),l=s.lastIndexOf("@"),c=s.slice(0,l).replace(Q,te).replace(Q,r).replace(K,T),d=s.slice(l+1);try{d=t.iri?k.toUnicode(d):k.toASCII(q(d,t).toLowerCase())}catch(e){n.error=n.error||"Email address's domain name can not be converted to "+(t.iri?"Unicode":"ASCII")+" via punycode: "+e}i[o]=c+"@"+d}n.path=i.join(",")}var u=e.headers=e.headers||{};e.subject&&(u.subject=e.subject),e.body&&(u.body=e.body);var f=[];for(var h in u)u[h]!==W[h]&&f.push(h.replace(Q,te).replace(Q,r).replace(Z,T)+"="+u[h].replace(Q,te).replace(Q,r).replace(ee,T));return f.length&&(n.query=f.join("&")),n}},ie=/^([^\:]+)\:(.*)/,re={scheme:"urn",parse:function(e,t){var n=e.path&&e.path.match(ie),i=e;if(n){var r=t.scheme||i.scheme||"urn",o=n[1].toLowerCase(),a=n[2],s=r+":"+(t.nid||o),l=S[s];i.nid=o,i.nss=a,i.path=void 0,l&&(i=l.parse(i,t))}else i.error=i.error||"URN can not be parsed.";return i},serialize:function(e,t){var n=t.scheme||e.scheme||"urn",i=e.nid,r=n+":"+(t.nid||i),o=S[r];o&&(e=o.serialize(e,t));var a=e,s=e.nss;return a.path=(i||t.nid)+":"+s,a}},oe=/^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/,ae={scheme:"urn:uuid",parse:function(e,t){var n=e;return n.uuid=n.nss,n.nss=void 0,t.tolerant||n.uuid&&n.uuid.match(oe)||(n.error=n.error||"UUID is not valid."),n},serialize:function(e,t){var n=e;return n.nss=(e.uuid||"").toLowerCase(),n}};S[B.scheme]=B,S[V.scheme]=V,S[ne.scheme]=ne,S[re.scheme]=re,S[ae.scheme]=ae,e.SCHEMES=S,e.pctEncChar=T,e.pctDecChars=D,e.parse=j,e.removeDotSegments=U,e.serialize=R,e.resolveComponents=L,e.resolve=function(e,t,n){var i=function(e,t){var n=e;if(t)for(var i in t)n[i]=t[i];return n}({scheme:"null"},n);return R(L(j(e,i),j(t,i),i,!0),i)},e.normalize=function(e,t){return"string"==typeof e?e=R(j(e,t),t):"object"===i(e)&&(e=j(R(e,t),t)),e},e.equal=function(e,t,n){return"string"==typeof e?e=R(j(e,n),n):"object"===i(e)&&(e=R(e,n)),"string"==typeof t?t=R(j(t,n),n):"object"===i(t)&&(t=R(t,n)),e===t},e.escapeComponent=function(e,t){return e&&e.toString().replace(t&&t.iri?s.ESCAPE:a.ESCAPE,T)},e.unescapeComponent=q,Object.defineProperty(e,"__esModule",{value:!0})}(t)},function(e,t,n){"use strict";e.exports=function(e){for(var t,n=0,i=e.length,r=0;r<i;)n++,(t=e.charCodeAt(r++))>=55296&&t<=56319&&r<i&&56320==(64512&(t=e.charCodeAt(r)))&&r++;return n}},function(e,t,n){"use strict";var i=e.exports=function(e,t,n){"function"==typeof t&&(n=t,t={}),function e(t,n,o,a,s,l,c,d,u,f){if(a&&"object"==typeof a&&!Array.isArray(a)){for(var h in n(a,s,l,c,d,u,f),a){var p=a[h];if(Array.isArray(p)){if(h in i.arrayKeywords)for(var m=0;m<p.length;m++)e(t,n,o,p[m],s+"/"+h+"/"+m,l,s,h,a,m)}else if(h in i.propsKeywords){if(p&&"object"==typeof p)for(var g in p)e(t,n,o,p[g],s+"/"+h+"/"+r(g),l,s,h,a,g)}else(h in i.keywords||t.allKeys&&!(h in i.skipKeywords))&&e(t,n,o,p,s+"/"+h,l,s,h,a)}o(a,s,l,c,d,u,f)}}(t,"function"==typeof(n=t.cb||n)?n:n.pre||function(){},n.post||function(){},e,"",e)};function r(e){return e.replace(/~/g,"~0").replace(/\//g,"~1")}i.keywords={additionalItems:!0,items:!0,contains:!0,additionalProperties:!0,propertyNames:!0,not:!0},i.arrayKeywords={items:!0,allOf:!0,anyOf:!0,oneOf:!0},i.propsKeywords={definitions:!0,properties:!0,patternProperties:!0,dependencies:!0},i.skipKeywords={default:!0,enum:!0,const:!0,required:!0,maximum:!0,minimum:!0,exclusiveMaximum:!0,exclusiveMinimum:!0,multipleOf:!0,maxLength:!0,minLength:!0,pattern:!0,format:!0,maxItems:!0,minItems:!0,uniqueItems:!0,maxProperties:!0,minProperties:!0}},function(e,t,n){"use strict";var i=e.exports=function(){this._cache={}};i.prototype.put=function(e,t){this._cache[e]=t},i.prototype.get=function(e){return this._cache[e]},i.prototype.del=function(e){delete this._cache[e]},i.prototype.clear=function(){this._cache={}}},function(e,t,n){"use strict";var i=n(4),r=/^(\d\d\d\d)-(\d\d)-(\d\d)$/,o=[0,31,28,31,30,31,30,31,31,30,31,30,31],a=/^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d:\d\d)?$/i,s=/^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,l=/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,c=/^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,d=/^(?:(?:http[s\u017F]?|ftp):\/\/)(?:(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+(?::(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?@)?(?:(?!10(?:\.[0-9]{1,3}){3})(?!127(?:\.[0-9]{1,3}){3})(?!169\.254(?:\.[0-9]{1,3}){2})(?!192\.168(?:\.[0-9]{1,3}){2})(?!172\.(?:1[6-9]|2[0-9]|3[01])(?:\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)(?:\.(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)*(?:\.(?:(?:[KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\/(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?$/i,u=/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,f=/^(?:\/(?:[^~/]|~0|~1)*)*$/,h=/^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,p=/^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/;function m(e){return e="full"==e?"full":"fast",i.copy(m[e])}function g(e){var t=e.match(r);if(!t)return!1;var n=+t[1],i=+t[2],a=+t[3];return i>=1&&i<=12&&a>=1&&a<=(2==i&&function(e){return e%4==0&&(e%100!=0||e%400==0)}(n)?29:o[i])}function y(e,t){var n=e.match(a);if(!n)return!1;var i=n[1],r=n[2],o=n[3],s=n[5];return(i<=23&&r<=59&&o<=59||23==i&&59==r&&60==o)&&(!t||s)}e.exports=m,m.fast={date:/^\d\d\d\d-[0-1]\d-[0-3]\d$/,time:/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d:\d\d)?$/i,"date-time":/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d:\d\d)$/i,uri:/^(?:[a-z][a-z0-9+-.]*:)(?:\/?\/)?[^\s]*$/i,"uri-reference":/^(?:(?:[a-z][a-z0-9+-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,"uri-template":c,url:d,email:/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,hostname:s,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:w,uuid:u,"json-pointer":f,"json-pointer-uri-fragment":h,"relative-json-pointer":p},m.full={date:g,time:y,"date-time":function(e){var t=e.split(_);return 2==t.length&&g(t[0])&&y(t[1],!0)},uri:function(e){return v.test(e)&&l.test(e)},"uri-reference":/^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,"uri-template":c,url:d,email:/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:function(e){return e.length<=255&&s.test(e)},ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:w,uuid:u,"json-pointer":f,"json-pointer-uri-fragment":h,"relative-json-pointer":p};var _=/t|\s/i;var v=/\/|:/;var b=/[^\\]\\Z/;function w(e){if(b.test(e))return!1;try{return new RegExp(e),!0}catch(e){return!1}}},function(e,t,n){"use strict";var i=n(49),r=n(4).toHash;e.exports=function(){var e=[{type:"number",rules:[{maximum:["exclusiveMaximum"]},{minimum:["exclusiveMinimum"]},"multipleOf","format"]},{type:"string",rules:["maxLength","minLength","pattern","format"]},{type:"array",rules:["maxItems","minItems","items","contains","uniqueItems"]},{type:"object",rules:["maxProperties","minProperties","required","dependencies","propertyNames",{properties:["additionalProperties","patternProperties"]}]},{rules:["$ref","const","enum","not","anyOf","oneOf","allOf","if"]}],t=["type","$comment"];return e.all=r(t),e.types=r(["number","integer","string","array","object","boolean","null"]),e.forEach(function(n){n.rules=n.rules.map(function(n){var r;if("object"==typeof n){var o=Object.keys(n)[0];r=n[o],n=o,r.forEach(function(n){t.push(n),e.all[n]=!0})}return t.push(n),e.all[n]={keyword:n,code:i[n],implements:r}}),e.all.$comment={keyword:"$comment",code:i.$comment},n.type&&(e.types[n.type]=n)}),e.keywords=r(t.concat(["$schema","$id","id","$data","$async","title","description","default","definitions","examples","readOnly","writeOnly","contentMediaType","contentEncoding","additionalItems","then","else"])),e.custom={},e}},function(e,t,n){"use strict";e.exports={$ref:n(50),allOf:n(51),anyOf:n(52),$comment:n(53),const:n(54),contains:n(55),dependencies:n(56),enum:n(57),format:n(58),if:n(59),items:n(60),maximum:n(19),minimum:n(19),maxItems:n(20),minItems:n(20),maxLength:n(21),minLength:n(21),maxProperties:n(22),minProperties:n(22),multipleOf:n(61),not:n(62),oneOf:n(63),pattern:n(64),properties:n(65),propertyNames:n(66),required:n(67),uniqueItems:n(68),validate:n(18)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r,o=" ",a=e.level,s=e.dataLevel,l=e.schema[t],c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(s||""),f="valid"+a;if("#"==l||"#/"==l)e.isRoot?(i=e.async,r="validate"):(i=!0===e.root.schema.$async,r="root.refVal[0]");else{var h=e.resolveRef(e.baseId,l,e.isRoot);if(void 0===h){var p=e.MissingRefError.message(e.baseId,l);if("fail"==e.opts.missingRefs){e.logger.error(p),(_=_||[]).push(o),o="",!1!==e.createErrors?(o+=" { keyword: '$ref' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { ref: '"+e.util.escapeQuotes(l)+"' } ",!1!==e.opts.messages&&(o+=" , message: 'can\\'t resolve reference "+e.util.escapeQuotes(l)+"' "),e.opts.verbose&&(o+=" , schema: "+e.util.toQuotedString(l)+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),o+=" } "):o+=" {} ";var m=o;o=_.pop(),!e.compositeRule&&d?e.async?o+=" throw new ValidationError(["+m+"]); ":o+=" validate.errors = ["+m+"]; return false; ":o+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",d&&(o+=" if (false) { ")}else{if("ignore"!=e.opts.missingRefs)throw new e.MissingRefError(e.baseId,l,p);e.logger.warn(p),d&&(o+=" if (true) { ")}}else if(h.inline){var g=e.util.copy(e);g.level++;var y="valid"+g.level;g.schema=h.schema,g.schemaPath="",g.errSchemaPath=l,o+=" "+e.validate(g).replace(/validate\.schema/g,h.code)+" ",d&&(o+=" if ("+y+") { ")}else i=!0===h.$async||e.async&&!1!==h.$async,r=h.code}if(r){var _;(_=_||[]).push(o),o="",e.opts.passContext?o+=" "+r+".call(this, ":o+=" "+r+"( ",o+=" "+u+", (dataPath || '')",'""'!=e.errorPath&&(o+=" + "+e.errorPath);var v=o+=" , "+(s?"data"+(s-1||""):"parentData")+" , "+(s?e.dataPathArr[s]:"parentDataProperty")+", rootData)  ";if(o=_.pop(),i){if(!e.async)throw new Error("async schema referenced by sync schema");d&&(o+=" var "+f+"; "),o+=" try { await "+v+"; ",d&&(o+=" "+f+" = true; "),o+=" } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ",d&&(o+=" "+f+" = false; "),o+=" } ",d&&(o+=" if ("+f+") { ")}else o+=" if (!"+v+") { if (vErrors === null) vErrors = "+r+".errors; else vErrors = vErrors.concat("+r+".errors); errors = vErrors.length; } ",d&&(o+=" else { ")}return o}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.schema[t],o=e.schemaPath+e.util.getProperty(t),a=e.errSchemaPath+"/"+t,s=!e.opts.allErrors,l=e.util.copy(e),c="";l.level++;var d="valid"+l.level,u=l.baseId,f=!0,h=r;if(h)for(var p,m=-1,g=h.length-1;m<g;)p=h[m+=1],e.util.schemaHasRules(p,e.RULES.all)&&(f=!1,l.schema=p,l.schemaPath=o+"["+m+"]",l.errSchemaPath=a+"/"+m,i+="  "+e.validate(l)+" ",l.baseId=u,s&&(i+=" if ("+d+") { ",c+="}"));return s&&(i+=f?" if (true) { ":" "+c.slice(0,-1)+" "),i=e.util.cleanUpCode(i)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f="errs__"+r,h=e.util.copy(e),p="";h.level++;var m="valid"+h.level;if(a.every(function(t){return e.util.schemaHasRules(t,e.RULES.all)})){var g=h.baseId;i+=" var "+f+" = errors; var "+u+" = false;  ";var y=e.compositeRule;e.compositeRule=h.compositeRule=!0;var _=a;if(_)for(var v,b=-1,w=_.length-1;b<w;)v=_[b+=1],h.schema=v,h.schemaPath=s+"["+b+"]",h.errSchemaPath=l+"/"+b,i+="  "+e.validate(h)+" ",h.baseId=g,i+=" "+u+" = "+u+" || "+m+"; if (!"+u+") { ",p+="}";e.compositeRule=h.compositeRule=y,i+=" "+p+" if (!"+u+") {   var err =   ",!1!==e.createErrors?(i+=" { keyword: 'anyOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: {} ",!1!==e.opts.messages&&(i+=" , message: 'should match some schema in anyOf' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&c&&(e.async?i+=" throw new ValidationError(vErrors); ":i+=" validate.errors = vErrors; return false; "),i+=" } else {  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; } ",e.opts.allErrors&&(i+=" } "),i=e.util.cleanUpCode(i)}else c&&(i+=" if (true) { ");return i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.schema[t],o=e.errSchemaPath+"/"+t,a=(e.opts.allErrors,e.util.toQuotedString(r));return!0===e.opts.$comment?i+=" console.log("+a+");":"function"==typeof e.opts.$comment&&(i+=" self._opts.$comment("+a+", "+e.util.toQuotedString(o)+", validate.root.schema);"),i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f=e.opts.$data&&a&&a.$data;f&&(i+=" var schema"+r+" = "+e.util.getData(a.$data,o,e.dataPathArr)+"; "),f||(i+=" var schema"+r+" = validate.schema"+s+";"),i+="var "+u+" = equal("+d+", schema"+r+"); if (!"+u+") {   ";var h=h||[];h.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'const' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { allowedValue: schema"+r+" } ",!1!==e.opts.messages&&(i+=" , message: 'should be equal to constant' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var p=i;return i=h.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+p+"]); ":i+=" validate.errors = ["+p+"]; return false; ":i+=" var err = "+p+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" }",c&&(i+=" else { "),i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f="errs__"+r,h=e.util.copy(e);h.level++;var p="valid"+h.level,m="i"+r,g=h.dataLevel=e.dataLevel+1,y="data"+g,_=e.baseId,v=e.util.schemaHasRules(a,e.RULES.all);if(i+="var "+f+" = errors;var "+u+";",v){var b=e.compositeRule;e.compositeRule=h.compositeRule=!0,h.schema=a,h.schemaPath=s,h.errSchemaPath=l,i+=" var "+p+" = false; for (var "+m+" = 0; "+m+" < "+d+".length; "+m+"++) { ",h.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers,!0);var w=d+"["+m+"]";h.dataPathArr[g]=m;var x=e.validate(h);h.baseId=_,e.util.varOccurences(x,y)<2?i+=" "+e.util.varReplace(x,y,w)+" ":i+=" var "+y+" = "+w+"; "+x+" ",i+=" if ("+p+") break; }  ",e.compositeRule=h.compositeRule=b,i+="  if (!"+p+") {"}else i+=" if ("+d+".length == 0) {";var E=E||[];E.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'contains' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: {} ",!1!==e.opts.messages&&(i+=" , message: 'should contain a valid item' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var k=i;return i=E.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+k+"]); ":i+=" validate.errors = ["+k+"]; return false; ":i+=" var err = "+k+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } else { ",v&&(i+="  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; } "),e.opts.allErrors&&(i+=" } "),i=e.util.cleanUpCode(i)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="errs__"+r,f=e.util.copy(e),h="";f.level++;var p="valid"+f.level,m={},g={},y=e.opts.ownProperties;for(w in a){var _=a[w],v=Array.isArray(_)?g:m;v[w]=_}i+="var "+u+" = errors;";var b=e.errorPath;for(var w in i+="var missing"+r+";",g)if((v=g[w]).length){if(i+=" if ( "+d+e.util.getProperty(w)+" !== undefined ",y&&(i+=" && Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes(w)+"') "),c){i+=" && ( ";var x=v;if(x)for(var E=-1,k=x.length-1;E<k;){O=x[E+=1],E&&(i+=" || "),i+=" ( ( "+(j=d+(F=e.util.getProperty(O)))+" === undefined ",y&&(i+=" || ! Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes(O)+"') "),i+=") && (missing"+r+" = "+e.util.toQuotedString(e.opts.jsonPointers?O:F)+") ) "}i+=")) {  ";var S="missing"+r,T="' + "+S+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(b,S,!0):b+" + "+S);var D=D||[];D.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { property: '"+e.util.escapeQuotes(w)+"', missingProperty: '"+T+"', depsCount: "+v.length+", deps: '"+e.util.escapeQuotes(1==v.length?v[0]:v.join(", "))+"' } ",!1!==e.opts.messages&&(i+=" , message: 'should have ",1==v.length?i+="property "+e.util.escapeQuotes(v[0]):i+="properties "+e.util.escapeQuotes(v.join(", ")),i+=" when property "+e.util.escapeQuotes(w)+" is present' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var A=i;i=D.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+A+"]); ":i+=" validate.errors = ["+A+"]; return false; ":i+=" var err = "+A+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}else{i+=" ) { ";var P=v;if(P)for(var O,$=-1,C=P.length-1;$<C;){O=P[$+=1];var F=e.util.getProperty(O),j=(T=e.util.escapeQuotes(O),d+F);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(b,O,e.opts.jsonPointers)),i+=" if ( "+j+" === undefined ",y&&(i+=" || ! Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes(O)+"') "),i+=") {  var err =   ",!1!==e.createErrors?(i+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { property: '"+e.util.escapeQuotes(w)+"', missingProperty: '"+T+"', depsCount: "+v.length+", deps: '"+e.util.escapeQuotes(1==v.length?v[0]:v.join(", "))+"' } ",!1!==e.opts.messages&&(i+=" , message: 'should have ",1==v.length?i+="property "+e.util.escapeQuotes(v[0]):i+="properties "+e.util.escapeQuotes(v.join(", ")),i+=" when property "+e.util.escapeQuotes(w)+" is present' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}i+=" }   ",c&&(h+="}",i+=" else { ")}e.errorPath=b;var I=f.baseId;for(var w in m){_=m[w];e.util.schemaHasRules(_,e.RULES.all)&&(i+=" "+p+" = true; if ( "+d+e.util.getProperty(w)+" !== undefined ",y&&(i+=" && Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes(w)+"') "),i+=") { ",f.schema=_,f.schemaPath=s+e.util.getProperty(w),f.errSchemaPath=l+"/"+e.util.escapeFragment(w),i+="  "+e.validate(f)+" ",f.baseId=I,i+=" }  ",c&&(i+=" if ("+p+") { ",h+="}"))}return c&&(i+="   "+h+" if ("+u+" == errors) {"),i=e.util.cleanUpCode(i)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f=e.opts.$data&&a&&a.$data;f&&(i+=" var schema"+r+" = "+e.util.getData(a.$data,o,e.dataPathArr)+"; ");var h="i"+r,p="schema"+r;f||(i+=" var "+p+" = validate.schema"+s+";"),i+="var "+u+";",f&&(i+=" if (schema"+r+" === undefined) "+u+" = true; else if (!Array.isArray(schema"+r+")) "+u+" = false; else {"),i+=u+" = false;for (var "+h+"=0; "+h+"<"+p+".length; "+h+"++) if (equal("+d+", "+p+"["+h+"])) { "+u+" = true; break; }",f&&(i+="  }  "),i+=" if (!"+u+") {   ";var m=m||[];m.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'enum' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { allowedValues: schema"+r+" } ",!1!==e.opts.messages&&(i+=" , message: 'should be equal to one of the allowed values' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var g=i;return i=m.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+g+"]); ":i+=" validate.errors = ["+g+"]; return false; ":i+=" var err = "+g+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" }",c&&(i+=" else { "),i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||"");if(!1===e.opts.format)return c&&(i+=" if (true) { "),i;var u,f=e.opts.$data&&a&&a.$data;f?(i+=" var schema"+r+" = "+e.util.getData(a.$data,o,e.dataPathArr)+"; ",u="schema"+r):u=a;var h=e.opts.unknownFormats,p=Array.isArray(h);if(f){i+=" var "+(m="format"+r)+" = formats["+u+"]; var "+(g="isObject"+r)+" = typeof "+m+" == 'object' && !("+m+" instanceof RegExp) && "+m+".validate; var "+(y="formatType"+r)+" = "+g+" && "+m+".type || 'string'; if ("+g+") { ",e.async&&(i+=" var async"+r+" = "+m+".async; "),i+=" "+m+" = "+m+".validate; } if (  ",f&&(i+=" ("+u+" !== undefined && typeof "+u+" != 'string') || "),i+=" (","ignore"!=h&&(i+=" ("+u+" && !"+m+" ",p&&(i+=" && self._opts.unknownFormats.indexOf("+u+") == -1 "),i+=") || "),i+=" ("+m+" && "+y+" == '"+n+"' && !(typeof "+m+" == 'function' ? ",e.async?i+=" (async"+r+" ? await "+m+"("+d+") : "+m+"("+d+")) ":i+=" "+m+"("+d+") ",i+=" : "+m+".test("+d+"))))) {"}else{var m;if(!(m=e.formats[a])){if("ignore"==h)return e.logger.warn('unknown format "'+a+'" ignored in schema at path "'+e.errSchemaPath+'"'),c&&(i+=" if (true) { "),i;if(p&&h.indexOf(a)>=0)return c&&(i+=" if (true) { "),i;throw new Error('unknown format "'+a+'" is used in schema at path "'+e.errSchemaPath+'"')}var g,y=(g="object"==typeof m&&!(m instanceof RegExp)&&m.validate)&&m.type||"string";if(g){var _=!0===m.async;m=m.validate}if(y!=n)return c&&(i+=" if (true) { "),i;if(_){if(!e.async)throw new Error("async format in sync schema");i+=" if (!(await "+(v="formats"+e.util.getProperty(a)+".validate")+"("+d+"))) { "}else{i+=" if (! ";var v="formats"+e.util.getProperty(a);g&&(v+=".validate"),i+="function"==typeof m?" "+v+"("+d+") ":" "+v+".test("+d+") ",i+=") { "}}var b=b||[];b.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'format' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { format:  ",i+=f?""+u:""+e.util.toQuotedString(a),i+="  } ",!1!==e.opts.messages&&(i+=" , message: 'should match format \"",i+=f?"' + "+u+" + '":""+e.util.escapeQuotes(a),i+="\"' "),e.opts.verbose&&(i+=" , schema:  ",i+=f?"validate.schema"+s:""+e.util.toQuotedString(a),i+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var w=i;return i=b.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+w+"]); ":i+=" validate.errors = ["+w+"]; return false; ":i+=" var err = "+w+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } ",c&&(i+=" else { "),i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f="errs__"+r,h=e.util.copy(e);h.level++;var p="valid"+h.level,m=e.schema.then,g=e.schema.else,y=void 0!==m&&e.util.schemaHasRules(m,e.RULES.all),_=void 0!==g&&e.util.schemaHasRules(g,e.RULES.all),v=h.baseId;if(y||_){var b;h.createErrors=!1,h.schema=a,h.schemaPath=s,h.errSchemaPath=l,i+=" var "+f+" = errors; var "+u+" = true;  ";var w=e.compositeRule;e.compositeRule=h.compositeRule=!0,i+="  "+e.validate(h)+" ",h.baseId=v,h.createErrors=!0,i+="  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; }  ",e.compositeRule=h.compositeRule=w,y?(i+=" if ("+p+") {  ",h.schema=e.schema.then,h.schemaPath=e.schemaPath+".then",h.errSchemaPath=e.errSchemaPath+"/then",i+="  "+e.validate(h)+" ",h.baseId=v,i+=" "+u+" = "+p+"; ",y&&_?i+=" var "+(b="ifClause"+r)+" = 'then'; ":b="'then'",i+=" } ",_&&(i+=" else { ")):i+=" if (!"+p+") { ",_&&(h.schema=e.schema.else,h.schemaPath=e.schemaPath+".else",h.errSchemaPath=e.errSchemaPath+"/else",i+="  "+e.validate(h)+" ",h.baseId=v,i+=" "+u+" = "+p+"; ",y&&_?i+=" var "+(b="ifClause"+r)+" = 'else'; ":b="'else'",i+=" } "),i+=" if (!"+u+") {   var err =   ",!1!==e.createErrors?(i+=" { keyword: 'if' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { failingKeyword: "+b+" } ",!1!==e.opts.messages&&(i+=" , message: 'should match \"' + "+b+" + '\" schema' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&c&&(e.async?i+=" throw new ValidationError(vErrors); ":i+=" validate.errors = vErrors; return false; "),i+=" }   ",c&&(i+=" else { "),i=e.util.cleanUpCode(i)}else c&&(i+=" if (true) { ");return i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f="errs__"+r,h=e.util.copy(e),p="";h.level++;var m="valid"+h.level,g="i"+r,y=h.dataLevel=e.dataLevel+1,_="data"+y,v=e.baseId;if(i+="var "+f+" = errors;var "+u+";",Array.isArray(a)){var b=e.schema.additionalItems;if(!1===b){i+=" "+u+" = "+d+".length <= "+a.length+"; ";var w=l;l=e.errSchemaPath+"/additionalItems",i+="  if (!"+u+") {   ";var x=x||[];x.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'additionalItems' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { limit: "+a.length+" } ",!1!==e.opts.messages&&(i+=" , message: 'should NOT have more than "+a.length+" items' "),e.opts.verbose&&(i+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var E=i;i=x.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+E+"]); ":i+=" validate.errors = ["+E+"]; return false; ":i+=" var err = "+E+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } ",l=w,c&&(p+="}",i+=" else { ")}var k=a;if(k)for(var S,T=-1,D=k.length-1;T<D;)if(S=k[T+=1],e.util.schemaHasRules(S,e.RULES.all)){i+=" "+m+" = true; if ("+d+".length > "+T+") { ";var A=d+"["+T+"]";h.schema=S,h.schemaPath=s+"["+T+"]",h.errSchemaPath=l+"/"+T,h.errorPath=e.util.getPathExpr(e.errorPath,T,e.opts.jsonPointers,!0),h.dataPathArr[y]=T;var P=e.validate(h);h.baseId=v,e.util.varOccurences(P,_)<2?i+=" "+e.util.varReplace(P,_,A)+" ":i+=" var "+_+" = "+A+"; "+P+" ",i+=" }  ",c&&(i+=" if ("+m+") { ",p+="}")}if("object"==typeof b&&e.util.schemaHasRules(b,e.RULES.all)){h.schema=b,h.schemaPath=e.schemaPath+".additionalItems",h.errSchemaPath=e.errSchemaPath+"/additionalItems",i+=" "+m+" = true; if ("+d+".length > "+a.length+") {  for (var "+g+" = "+a.length+"; "+g+" < "+d+".length; "+g+"++) { ",h.errorPath=e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers,!0);A=d+"["+g+"]";h.dataPathArr[y]=g;P=e.validate(h);h.baseId=v,e.util.varOccurences(P,_)<2?i+=" "+e.util.varReplace(P,_,A)+" ":i+=" var "+_+" = "+A+"; "+P+" ",c&&(i+=" if (!"+m+") break; "),i+=" } }  ",c&&(i+=" if ("+m+") { ",p+="}")}}else if(e.util.schemaHasRules(a,e.RULES.all)){h.schema=a,h.schemaPath=s,h.errSchemaPath=l,i+="  for (var "+g+" = 0; "+g+" < "+d+".length; "+g+"++) { ",h.errorPath=e.util.getPathExpr(e.errorPath,g,e.opts.jsonPointers,!0);A=d+"["+g+"]";h.dataPathArr[y]=g;P=e.validate(h);h.baseId=v,e.util.varOccurences(P,_)<2?i+=" "+e.util.varReplace(P,_,A)+" ":i+=" var "+_+" = "+A+"; "+P+" ",c&&(i+=" if (!"+m+") break; "),i+=" }"}return c&&(i+=" "+p+" if ("+f+" == errors) {"),i=e.util.cleanUpCode(i)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r=" ",o=e.level,a=e.dataLevel,s=e.schema[t],l=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(a||""),f=e.opts.$data&&s&&s.$data;f?(r+=" var schema"+o+" = "+e.util.getData(s.$data,a,e.dataPathArr)+"; ",i="schema"+o):i=s,r+="var division"+o+";if (",f&&(r+=" "+i+" !== undefined && ( typeof "+i+" != 'number' || "),r+=" (division"+o+" = "+u+" / "+i+", ",e.opts.multipleOfPrecision?r+=" Math.abs(Math.round(division"+o+") - division"+o+") > 1e-"+e.opts.multipleOfPrecision+" ":r+=" division"+o+" !== parseInt(division"+o+") ",r+=" ) ",f&&(r+="  )  "),r+=" ) {   ";var h=h||[];h.push(r),r="",!1!==e.createErrors?(r+=" { keyword: 'multipleOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { multipleOf: "+i+" } ",!1!==e.opts.messages&&(r+=" , message: 'should be multiple of ",r+=f?"' + "+i:i+"'"),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+l:""+s,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";var p=r;return r=h.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+p+"]); ":r+=" validate.errors = ["+p+"]; return false; ":r+=" var err = "+p+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",d&&(r+=" else { "),r}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="errs__"+r,f=e.util.copy(e);f.level++;var h="valid"+f.level;if(e.util.schemaHasRules(a,e.RULES.all)){f.schema=a,f.schemaPath=s,f.errSchemaPath=l,i+=" var "+u+" = errors;  ";var p,m=e.compositeRule;e.compositeRule=f.compositeRule=!0,f.createErrors=!1,f.opts.allErrors&&(p=f.opts.allErrors,f.opts.allErrors=!1),i+=" "+e.validate(f)+" ",f.createErrors=!0,p&&(f.opts.allErrors=p),e.compositeRule=f.compositeRule=m,i+=" if ("+h+") {   ";var g=g||[];g.push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'not' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: {} ",!1!==e.opts.messages&&(i+=" , message: 'should NOT be valid' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var y=i;i=g.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+y+"]); ":i+=" validate.errors = ["+y+"]; return false; ":i+=" var err = "+y+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } else {  errors = "+u+"; if (vErrors !== null) { if ("+u+") vErrors.length = "+u+"; else vErrors = null; } ",e.opts.allErrors&&(i+=" } ")}else i+="  var err =   ",!1!==e.createErrors?(i+=" { keyword: 'not' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: {} ",!1!==e.opts.messages&&(i+=" , message: 'should NOT be valid' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",c&&(i+=" if (false) { ");return i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f="errs__"+r,h=e.util.copy(e),p="";h.level++;var m="valid"+h.level,g=h.baseId,y="prevValid"+r,_="passingSchemas"+r;i+="var "+f+" = errors , "+y+" = false , "+u+" = false , "+_+" = null; ";var v=e.compositeRule;e.compositeRule=h.compositeRule=!0;var b=a;if(b)for(var w,x=-1,E=b.length-1;x<E;)w=b[x+=1],e.util.schemaHasRules(w,e.RULES.all)?(h.schema=w,h.schemaPath=s+"["+x+"]",h.errSchemaPath=l+"/"+x,i+="  "+e.validate(h)+" ",h.baseId=g):i+=" var "+m+" = true; ",x&&(i+=" if ("+m+" && "+y+") { "+u+" = false; "+_+" = ["+_+", "+x+"]; } else { ",p+="}"),i+=" if ("+m+") { "+u+" = "+y+" = true; "+_+" = "+x+"; }";return e.compositeRule=h.compositeRule=v,i+=p+"if (!"+u+") {   var err =   ",!1!==e.createErrors?(i+=" { keyword: 'oneOf' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { passingSchemas: "+_+" } ",!1!==e.opts.messages&&(i+=" , message: 'should match exactly one schema in oneOf' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&c&&(e.async?i+=" throw new ValidationError(vErrors); ":i+=" validate.errors = vErrors; return false; "),i+="} else {  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; }",e.opts.allErrors&&(i+=" } "),i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r=" ",o=e.level,a=e.dataLevel,s=e.schema[t],l=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(a||""),f=e.opts.$data&&s&&s.$data;f?(r+=" var schema"+o+" = "+e.util.getData(s.$data,a,e.dataPathArr)+"; ",i="schema"+o):i=s;var h=f?"(new RegExp("+i+"))":e.usePattern(s);r+="if ( ",f&&(r+=" ("+i+" !== undefined && typeof "+i+" != 'string') || "),r+=" !"+h+".test("+u+") ) {   ";var p=p||[];p.push(r),r="",!1!==e.createErrors?(r+=" { keyword: 'pattern' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { pattern:  ",r+=f?""+i:""+e.util.toQuotedString(s),r+="  } ",!1!==e.opts.messages&&(r+=" , message: 'should match pattern \"",r+=f?"' + "+i+" + '":""+e.util.escapeQuotes(s),r+="\"' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+l:""+e.util.toQuotedString(s),r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";var m=r;return r=p.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+m+"]); ":r+=" validate.errors = ["+m+"]; return false; ":r+=" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",d&&(r+=" else { "),r}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="errs__"+r,f=e.util.copy(e),h="";f.level++;var p="valid"+f.level,m="key"+r,g="idx"+r,y=f.dataLevel=e.dataLevel+1,_="data"+y,v="dataProperties"+r,b=Object.keys(a||{}),w=e.schema.patternProperties||{},x=Object.keys(w),E=e.schema.additionalProperties,k=b.length||x.length,S=!1===E,T="object"==typeof E&&Object.keys(E).length,D=e.opts.removeAdditional,A=S||T||D,P=e.opts.ownProperties,O=e.baseId,$=e.schema.required;if($&&(!e.opts.$data||!$.$data)&&$.length<e.opts.loopRequired)var C=e.util.toHash($);if(i+="var "+u+" = errors;var "+p+" = true;",P&&(i+=" var "+v+" = undefined;"),A){if(i+=P?" "+v+" = "+v+" || Object.keys("+d+"); for (var "+g+"=0; "+g+"<"+v+".length; "+g+"++) { var "+m+" = "+v+"["+g+"]; ":" for (var "+m+" in "+d+") { ",k){if(i+=" var isAdditional"+r+" = !(false ",b.length)if(b.length>8)i+=" || validate.schema"+s+".hasOwnProperty("+m+") ";else{var F=b;if(F)for(var j=-1,I=F.length-1;j<I;)J=F[j+=1],i+=" || "+m+" == "+e.util.toQuotedString(J)+" "}if(x.length){var M=x;if(M)for(var z=-1,N=M.length-1;z<N;)re=M[z+=1],i+=" || "+e.usePattern(re)+".test("+m+") "}i+=" ); if (isAdditional"+r+") { "}if("all"==D)i+=" delete "+d+"["+m+"]; ";else{var U=e.errorPath,R="' + "+m+" + '";if(e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers)),S)if(D)i+=" delete "+d+"["+m+"]; ";else{i+=" "+p+" = false; ";var L=l;l=e.errSchemaPath+"/additionalProperties",(te=te||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'additionalProperties' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { additionalProperty: '"+R+"' } ",!1!==e.opts.messages&&(i+=" , message: '",e.opts._errorDataPathProperty?i+="is an invalid additional property":i+="should NOT have additional properties",i+="' "),e.opts.verbose&&(i+=" , schema: false , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var q=i;i=te.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+q+"]); ":i+=" validate.errors = ["+q+"]; return false; ":i+=" var err = "+q+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l=L,c&&(i+=" break; ")}else if(T)if("failing"==D){i+=" var "+u+" = errors;  ";var B=e.compositeRule;e.compositeRule=f.compositeRule=!0,f.schema=E,f.schemaPath=e.schemaPath+".additionalProperties",f.errSchemaPath=e.errSchemaPath+"/additionalProperties",f.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers);var V=d+"["+m+"]";f.dataPathArr[y]=m;var W=e.validate(f);f.baseId=O,e.util.varOccurences(W,_)<2?i+=" "+e.util.varReplace(W,_,V)+" ":i+=" var "+_+" = "+V+"; "+W+" ",i+=" if (!"+p+") { errors = "+u+"; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete "+d+"["+m+"]; }  ",e.compositeRule=f.compositeRule=B}else{f.schema=E,f.schemaPath=e.schemaPath+".additionalProperties",f.errSchemaPath=e.errSchemaPath+"/additionalProperties",f.errorPath=e.opts._errorDataPathProperty?e.errorPath:e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers);V=d+"["+m+"]";f.dataPathArr[y]=m;W=e.validate(f);f.baseId=O,e.util.varOccurences(W,_)<2?i+=" "+e.util.varReplace(W,_,V)+" ":i+=" var "+_+" = "+V+"; "+W+" ",c&&(i+=" if (!"+p+") break; ")}e.errorPath=U}k&&(i+=" } "),i+=" }  ",c&&(i+=" if ("+p+") { ",h+="}")}var Y=e.opts.useDefaults&&!e.compositeRule;if(b.length){var H=b;if(H)for(var J,G=-1,X=H.length-1;G<X;){var Q=a[J=H[G+=1]];if(e.util.schemaHasRules(Q,e.RULES.all)){var K=e.util.getProperty(J),Z=(V=d+K,Y&&void 0!==Q.default);f.schema=Q,f.schemaPath=s+K,f.errSchemaPath=l+"/"+e.util.escapeFragment(J),f.errorPath=e.util.getPath(e.errorPath,J,e.opts.jsonPointers),f.dataPathArr[y]=e.util.toQuotedString(J);W=e.validate(f);if(f.baseId=O,e.util.varOccurences(W,_)<2){W=e.util.varReplace(W,_,V);var ee=V}else{ee=_;i+=" var "+_+" = "+V+"; "}if(Z)i+=" "+W+" ";else{if(C&&C[J]){i+=" if ( "+ee+" === undefined ",P&&(i+=" || ! Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes(J)+"') "),i+=") { "+p+" = false; ";U=e.errorPath,L=l;var te,ne=e.util.escapeQuotes(J);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(U,J,e.opts.jsonPointers)),l=e.errSchemaPath+"/required",(te=te||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { missingProperty: '"+ne+"' } ",!1!==e.opts.messages&&(i+=" , message: '",e.opts._errorDataPathProperty?i+="is a required property":i+="should have required property \\'"+ne+"\\'",i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";q=i;i=te.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+q+"]); ":i+=" validate.errors = ["+q+"]; return false; ":i+=" var err = "+q+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l=L,e.errorPath=U,i+=" } else { "}else c?(i+=" if ( "+ee+" === undefined ",P&&(i+=" || ! Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes(J)+"') "),i+=") { "+p+" = true; } else { "):(i+=" if ("+ee+" !== undefined ",P&&(i+=" &&   Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes(J)+"') "),i+=" ) { ");i+=" "+W+" } "}}c&&(i+=" if ("+p+") { ",h+="}")}}if(x.length){var ie=x;if(ie)for(var re,oe=-1,ae=ie.length-1;oe<ae;){Q=w[re=ie[oe+=1]];if(e.util.schemaHasRules(Q,e.RULES.all)){f.schema=Q,f.schemaPath=e.schemaPath+".patternProperties"+e.util.getProperty(re),f.errSchemaPath=e.errSchemaPath+"/patternProperties/"+e.util.escapeFragment(re),i+=P?" "+v+" = "+v+" || Object.keys("+d+"); for (var "+g+"=0; "+g+"<"+v+".length; "+g+"++) { var "+m+" = "+v+"["+g+"]; ":" for (var "+m+" in "+d+") { ",i+=" if ("+e.usePattern(re)+".test("+m+")) { ",f.errorPath=e.util.getPathExpr(e.errorPath,m,e.opts.jsonPointers);V=d+"["+m+"]";f.dataPathArr[y]=m;W=e.validate(f);f.baseId=O,e.util.varOccurences(W,_)<2?i+=" "+e.util.varReplace(W,_,V)+" ":i+=" var "+_+" = "+V+"; "+W+" ",c&&(i+=" if (!"+p+") break; "),i+=" } ",c&&(i+=" else "+p+" = true; "),i+=" }  ",c&&(i+=" if ("+p+") { ",h+="}")}}}return c&&(i+=" "+h+" if ("+u+" == errors) {"),i=e.util.cleanUpCode(i)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="errs__"+r,f=e.util.copy(e);f.level++;var h="valid"+f.level;if(i+="var "+u+" = errors;",e.util.schemaHasRules(a,e.RULES.all)){f.schema=a,f.schemaPath=s,f.errSchemaPath=l;var p="key"+r,m="idx"+r,g="i"+r,y="' + "+p+" + '",_="data"+(f.dataLevel=e.dataLevel+1),v="dataProperties"+r,b=e.opts.ownProperties,w=e.baseId;b&&(i+=" var "+v+" = undefined; "),i+=b?" "+v+" = "+v+" || Object.keys("+d+"); for (var "+m+"=0; "+m+"<"+v+".length; "+m+"++) { var "+p+" = "+v+"["+m+"]; ":" for (var "+p+" in "+d+") { ",i+=" var startErrs"+r+" = errors; ";var x=p,E=e.compositeRule;e.compositeRule=f.compositeRule=!0;var k=e.validate(f);f.baseId=w,e.util.varOccurences(k,_)<2?i+=" "+e.util.varReplace(k,_,x)+" ":i+=" var "+_+" = "+x+"; "+k+" ",e.compositeRule=f.compositeRule=E,i+=" if (!"+h+") { for (var "+g+"=startErrs"+r+"; "+g+"<errors; "+g+"++) { vErrors["+g+"].propertyName = "+p+"; }   var err =   ",!1!==e.createErrors?(i+=" { keyword: 'propertyNames' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { propertyName: '"+y+"' } ",!1!==e.opts.messages&&(i+=" , message: 'property name \\'"+y+"\\' is invalid' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&c&&(e.async?i+=" throw new ValidationError(vErrors); ":i+=" validate.errors = vErrors; return false; "),c&&(i+=" break; "),i+=" } }"}return c&&(i+="  if ("+u+" == errors) {"),i=e.util.cleanUpCode(i)}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i=" ",r=e.level,o=e.dataLevel,a=e.schema[t],s=e.schemaPath+e.util.getProperty(t),l=e.errSchemaPath+"/"+t,c=!e.opts.allErrors,d="data"+(o||""),u="valid"+r,f=e.opts.$data&&a&&a.$data;f&&(i+=" var schema"+r+" = "+e.util.getData(a.$data,o,e.dataPathArr)+"; ");var h="schema"+r;if(!f)if(a.length<e.opts.loopRequired&&e.schema.properties&&Object.keys(e.schema.properties).length){var p=[],m=a;if(m)for(var g,y=-1,_=m.length-1;y<_;){g=m[y+=1];var v=e.schema.properties[g];v&&e.util.schemaHasRules(v,e.RULES.all)||(p[p.length]=g)}}else p=a;if(f||p.length){var b=e.errorPath,w=f||p.length>=e.opts.loopRequired,x=e.opts.ownProperties;if(c)if(i+=" var missing"+r+"; ",w){f||(i+=" var "+h+" = validate.schema"+s+"; ");var E="' + "+(P="schema"+r+"["+(T="i"+r)+"]")+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(b,P,e.opts.jsonPointers)),i+=" var "+u+" = true; ",f&&(i+=" if (schema"+r+" === undefined) "+u+" = true; else if (!Array.isArray(schema"+r+")) "+u+" = false; else {"),i+=" for (var "+T+" = 0; "+T+" < "+h+".length; "+T+"++) { "+u+" = "+d+"["+h+"["+T+"]] !== undefined ",x&&(i+=" &&   Object.prototype.hasOwnProperty.call("+d+", "+h+"["+T+"]) "),i+="; if (!"+u+") break; } ",f&&(i+="  }  "),i+="  if (!"+u+") {   ",(A=A||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { missingProperty: '"+E+"' } ",!1!==e.opts.messages&&(i+=" , message: '",e.opts._errorDataPathProperty?i+="is a required property":i+="should have required property \\'"+E+"\\'",i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";var k=i;i=A.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+k+"]); ":i+=" validate.errors = ["+k+"]; return false; ":i+=" var err = "+k+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } else { "}else{i+=" if ( ";var S=p;if(S)for(var T=-1,D=S.length-1;T<D;){$=S[T+=1],T&&(i+=" || "),i+=" ( ( "+(I=d+(j=e.util.getProperty($)))+" === undefined ",x&&(i+=" || ! Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes($)+"') "),i+=") && (missing"+r+" = "+e.util.toQuotedString(e.opts.jsonPointers?$:j)+") ) "}i+=") {  ";var A;E="' + "+(P="missing"+r)+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.opts.jsonPointers?e.util.getPathExpr(b,P,!0):b+" + "+P),(A=A||[]).push(i),i="",!1!==e.createErrors?(i+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { missingProperty: '"+E+"' } ",!1!==e.opts.messages&&(i+=" , message: '",e.opts._errorDataPathProperty?i+="is a required property":i+="should have required property \\'"+E+"\\'",i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ";k=i;i=A.pop(),!e.compositeRule&&c?e.async?i+=" throw new ValidationError(["+k+"]); ":i+=" validate.errors = ["+k+"]; return false; ":i+=" var err = "+k+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i+=" } else { "}else if(w){f||(i+=" var "+h+" = validate.schema"+s+"; ");var P;E="' + "+(P="schema"+r+"["+(T="i"+r)+"]")+" + '";e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPathExpr(b,P,e.opts.jsonPointers)),f&&(i+=" if ("+h+" && !Array.isArray("+h+")) {  var err =   ",!1!==e.createErrors?(i+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { missingProperty: '"+E+"' } ",!1!==e.opts.messages&&(i+=" , message: '",e.opts._errorDataPathProperty?i+="is a required property":i+="should have required property \\'"+E+"\\'",i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if ("+h+" !== undefined) { "),i+=" for (var "+T+" = 0; "+T+" < "+h+".length; "+T+"++) { if ("+d+"["+h+"["+T+"]] === undefined ",x&&(i+=" || ! Object.prototype.hasOwnProperty.call("+d+", "+h+"["+T+"]) "),i+=") {  var err =   ",!1!==e.createErrors?(i+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { missingProperty: '"+E+"' } ",!1!==e.opts.messages&&(i+=" , message: '",e.opts._errorDataPathProperty?i+="is a required property":i+="should have required property \\'"+E+"\\'",i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ",f&&(i+="  }  ")}else{var O=p;if(O)for(var $,C=-1,F=O.length-1;C<F;){$=O[C+=1];var j=e.util.getProperty($),I=(E=e.util.escapeQuotes($),d+j);e.opts._errorDataPathProperty&&(e.errorPath=e.util.getPath(b,$,e.opts.jsonPointers)),i+=" if ( "+I+" === undefined ",x&&(i+=" || ! Object.prototype.hasOwnProperty.call("+d+", '"+e.util.escapeQuotes($)+"') "),i+=") {  var err =   ",!1!==e.createErrors?(i+=" { keyword: 'required' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(l)+" , params: { missingProperty: '"+E+"' } ",!1!==e.opts.messages&&(i+=" , message: '",e.opts._errorDataPathProperty?i+="is a required property":i+="should have required property \\'"+E+"\\'",i+="' "),e.opts.verbose&&(i+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+d+" "),i+=" } "):i+=" {} ",i+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}e.errorPath=b}else c&&(i+=" if (true) {");return i}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r=" ",o=e.level,a=e.dataLevel,s=e.schema[t],l=e.schemaPath+e.util.getProperty(t),c=e.errSchemaPath+"/"+t,d=!e.opts.allErrors,u="data"+(a||""),f="valid"+o,h=e.opts.$data&&s&&s.$data;if(h?(r+=" var schema"+o+" = "+e.util.getData(s.$data,a,e.dataPathArr)+"; ",i="schema"+o):i=s,(s||h)&&!1!==e.opts.uniqueItems){h&&(r+=" var "+f+"; if ("+i+" === false || "+i+" === undefined) "+f+" = true; else if (typeof "+i+" != 'boolean') "+f+" = false; else { "),r+=" var i = "+u+".length , "+f+" = true , j; if (i > 1) { ";var p=e.schema.items&&e.schema.items.type,m=Array.isArray(p);if(!p||"object"==p||"array"==p||m&&(p.indexOf("object")>=0||p.indexOf("array")>=0))r+=" outer: for (;i--;) { for (j = i; j--;) { if (equal("+u+"[i], "+u+"[j])) { "+f+" = false; break outer; } } } ";else{r+=" var itemIndices = {}, item; for (;i--;) { var item = "+u+"[i]; ";var g="checkDataType"+(m?"s":"");r+=" if ("+e.util[g](p,"item",!0)+") continue; ",m&&(r+=" if (typeof item == 'string') item = '\"' + item; "),r+=" if (typeof itemIndices[item] == 'number') { "+f+" = false; j = itemIndices[item]; break; } itemIndices[item] = i; } "}r+=" } ",h&&(r+="  }  "),r+=" if (!"+f+") {   ";var y=y||[];y.push(r),r="",!1!==e.createErrors?(r+=" { keyword: 'uniqueItems' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(c)+" , params: { i: i, j: j } ",!1!==e.opts.messages&&(r+=" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' "),e.opts.verbose&&(r+=" , schema:  ",r+=h?"validate.schema"+l:""+s,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+u+" "),r+=" } "):r+=" {} ";var _=r;r=y.pop(),!e.compositeRule&&d?e.async?r+=" throw new ValidationError(["+_+"]); ":r+=" validate.errors = ["+_+"]; return false; ":r+=" var err = "+_+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } ",d&&(r+=" else { ")}else d&&(r+=" if (true) { ");return r}},function(e,t,n){"use strict";var i=["multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","pattern","additionalItems","maxItems","minItems","uniqueItems","maxProperties","minProperties","required","additionalProperties","enum","format","const"];e.exports=function(e,t){for(var n=0;n<t.length;n++){e=JSON.parse(JSON.stringify(e));var r,o=t[n].split("/"),a=e;for(r=1;r<o.length;r++)a=a[o[r]];for(r=0;r<i.length;r++){var s=i[r],l=a[s];l&&(a[s]={anyOf:[l,{$ref:"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#"}]})}}return e}},function(e,t,n){"use strict";var i=n(11).MissingRef;e.exports=function e(t,n,r){var o=this;if("function"!=typeof this._opts.loadSchema)throw new Error("options.loadSchema should be a function");"function"==typeof n&&(r=n,n=void 0);var a=s(t).then(function(){var e=o._addSchema(t,void 0,n);return e.validate||function e(t){try{return o._compile(t)}catch(e){if(e instanceof i)return function r(e){var r=e.missingSchema;if(c(r))throw new Error("Schema "+r+" is loaded but "+e.missingRef+" cannot be resolved");var a=o._loadingSchemas[r];a||(a=o._loadingSchemas[r]=o._opts.loadSchema(r)).then(l,l);return a.then(function(e){if(!c(r))return s(e).then(function(){c(r)||o.addSchema(e,r,void 0,n)})}).then(function(){return function e(t){try{return o._compile(t)}catch(e){if(e instanceof i)return r(e);throw e}function r(i){var r=i.missingSchema;if(c(r))throw new Error("Schema "+r+" is loaded but "+i.missingRef+" cannot be resolved");var a=o._loadingSchemas[r];return a||(a=o._loadingSchemas[r]=o._opts.loadSchema(r)).then(l,l),a.then(function(e){if(!c(r))return s(e).then(function(){c(r)||o.addSchema(e,r,void 0,n)})}).then(function(){return e(t)});function l(){delete o._loadingSchemas[r]}function c(e){return o._refs[e]||o._schemas[e]}}}(t)});function l(){delete o._loadingSchemas[r]}function c(e){return o._refs[e]||o._schemas[e]}}(e);throw e}function r(i){var r=i.missingSchema;if(c(r))throw new Error("Schema "+r+" is loaded but "+i.missingRef+" cannot be resolved");var a=o._loadingSchemas[r];return a||(a=o._loadingSchemas[r]=o._opts.loadSchema(r)).then(l,l),a.then(function(e){if(!c(r))return s(e).then(function(){c(r)||o.addSchema(e,r,void 0,n)})}).then(function(){return e(t)});function l(){delete o._loadingSchemas[r]}function c(e){return o._refs[e]||o._schemas[e]}}}(e)});r&&a.then(function(e){r(null,e)},r);return a;function s(t){var n=t.$schema;return n&&!o.getSchema(n)?e.call(o,{$ref:n},!0):Promise.resolve()}}},function(e,t,n){"use strict";var i=/^[a-z_$][a-z0-9_$-]*$/i,r=n(72),o=n(23);e.exports={add:function(e,t){var n=this.RULES;if(n.keywords[e])throw new Error("Keyword "+e+" is already defined");if(!i.test(e))throw new Error("Keyword "+e+" is not a valid identifier");if(t){this.validateKeyword(t,!0);var o=t.type;if(Array.isArray(o))for(var a=0;a<o.length;a++)l(e,o[a],t);else l(e,o,t);var s=t.metaSchema;s&&(t.$data&&this._opts.$data&&(s={anyOf:[s,{$ref:"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#"}]}),t.validateSchema=this.compile(s,!0))}function l(e,t,i){for(var o,a=0;a<n.length;a++){var s=n[a];if(s.type==t){o=s;break}}o||(o={type:t,rules:[]},n.push(o));var l={keyword:e,definition:i,custom:!0,code:r,implements:i.implements};o.rules.push(l),n.custom[e]=l}return n.keywords[e]=n.all[e]=!0,this},get:function(e){var t=this.RULES.custom[e];return t?t.definition:this.RULES.keywords[e]||!1},remove:function(e){var t=this.RULES;delete t.keywords[e],delete t.all[e],delete t.custom[e];for(var n=0;n<t.length;n++)for(var i=t[n].rules,r=0;r<i.length;r++)if(i[r].keyword==e){i.splice(r,1);break}return this},validate:function e(t,n){e.errors=null;var i=this._validateKeyword=this._validateKeyword||this.compile(a,!0);if(i(t))return!0;e.errors=i.errors;if(n)throw new Error("custom keyword definition is invalid: "+this.errorsText(i.errors));return!1}};var a={definitions:{simpleTypes:o.definitions.simpleTypes},type:"object",dependencies:{schema:["validate"],$data:["validate"],statements:["inline"],valid:{not:{required:["macro"]}}},properties:{type:o.properties.type,schema:{type:"boolean"},statements:{type:"boolean"},dependencies:{type:"array",items:{type:"string"}},metaSchema:{type:"object"},modifying:{type:"boolean"},valid:{type:"boolean"},$data:{type:"boolean"},async:{type:"boolean"},errors:{anyOf:[{type:"boolean"},{const:"full"}]}}}},function(e,t,n){"use strict";e.exports=function(e,t,n){var i,r,o=" ",a=e.level,s=e.dataLevel,l=e.schema[t],c=e.schemaPath+e.util.getProperty(t),d=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,f="data"+(s||""),h="valid"+a,p="errs__"+a,m=e.opts.$data&&l&&l.$data;m?(o+=" var schema"+a+" = "+e.util.getData(l.$data,s,e.dataPathArr)+"; ",r="schema"+a):r=l;var g,y,_,v,b,w="definition"+a,x=this.definition,E="";if(m&&x.$data){b="keywordValidate"+a;var k=x.validateSchema;o+=" var "+w+" = RULES.custom['"+t+"'].definition; var "+b+" = "+w+".validate;"}else{if(!(v=e.useCustomRule(this,l,e.schema,e)))return;r="validate.schema"+c,b=v.code,g=x.compile,y=x.inline,_=x.macro}var S=b+".errors",T="i"+a,D="ruleErr"+a,A=x.async;if(A&&!e.async)throw new Error("async keyword in sync schema");if(y||_||(o+=S+" = null;"),o+="var "+p+" = errors;var "+h+";",m&&x.$data&&(E+="}",o+=" if ("+r+" === undefined) { "+h+" = true; } else { ",k&&(E+="}",o+=" "+h+" = "+w+".validateSchema("+r+"); if ("+h+") { ")),y)x.statements?o+=" "+v.validate+" ":o+=" "+h+" = "+v.validate+"; ";else if(_){var P=e.util.copy(e);E="";P.level++;var O="valid"+P.level;P.schema=v.validate,P.schemaPath="";var $=e.compositeRule;e.compositeRule=P.compositeRule=!0;var C=e.validate(P).replace(/validate\.schema/g,b);e.compositeRule=P.compositeRule=$,o+=" "+C}else{(M=M||[]).push(o),o="",o+="  "+b+".call( ",e.opts.passContext?o+="this":o+="self",g||!1===x.schema?o+=" , "+f+" ":o+=" , "+r+" , "+f+" , validate.schema"+e.schemaPath+" ",o+=" , (dataPath || '')",'""'!=e.errorPath&&(o+=" + "+e.errorPath);var F=s?"data"+(s-1||""):"parentData",j=s?e.dataPathArr[s]:"parentDataProperty",I=o+=" , "+F+" , "+j+" , rootData )  ";o=M.pop(),!1===x.errors?(o+=" "+h+" = ",A&&(o+="await "),o+=I+"; "):o+=A?" var "+(S="customErrors"+a)+" = null; try { "+h+" = await "+I+"; } catch (e) { "+h+" = false; if (e instanceof ValidationError) "+S+" = e.errors; else throw e; } ":" "+S+" = null; "+h+" = "+I+"; "}if(x.modifying&&(o+=" if ("+F+") "+f+" = "+F+"["+j+"];"),o+=""+E,x.valid)u&&(o+=" if (true) { ");else{var M;o+=" if ( ",void 0===x.valid?(o+=" !",o+=_?""+O:""+h):o+=" "+!x.valid+" ",o+=") { ",i=this.keyword,(M=M||[]).push(o),o="",(M=M||[]).push(o),o="",!1!==e.createErrors?(o+=" { keyword: '"+(i||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(d)+" , params: { keyword: '"+this.keyword+"' } ",!1!==e.opts.messages&&(o+=" , message: 'should pass \""+this.keyword+"\" keyword validation' "),e.opts.verbose&&(o+=" , schema: validate.schema"+c+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+f+" "),o+=" } "):o+=" {} ";var z=o;o=M.pop(),!e.compositeRule&&u?e.async?o+=" throw new ValidationError(["+z+"]); ":o+=" validate.errors = ["+z+"]; return false; ":o+=" var err = "+z+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";var N=o;o=M.pop(),y?x.errors?"full"!=x.errors&&(o+="  for (var "+T+"="+p+"; "+T+"<errors; "+T+"++) { var "+D+" = vErrors["+T+"]; if ("+D+".dataPath === undefined) "+D+".dataPath = (dataPath || '') + "+e.errorPath+"; if ("+D+".schemaPath === undefined) { "+D+'.schemaPath = "'+d+'"; } ',e.opts.verbose&&(o+=" "+D+".schema = "+r+"; "+D+".data = "+f+"; "),o+=" } "):!1===x.errors?o+=" "+N+" ":(o+=" if ("+p+" == errors) { "+N+" } else {  for (var "+T+"="+p+"; "+T+"<errors; "+T+"++) { var "+D+" = vErrors["+T+"]; if ("+D+".dataPath === undefined) "+D+".dataPath = (dataPath || '') + "+e.errorPath+"; if ("+D+".schemaPath === undefined) { "+D+'.schemaPath = "'+d+'"; } ',e.opts.verbose&&(o+=" "+D+".schema = "+r+"; "+D+".data = "+f+"; "),o+=" } } "):_?(o+="   var err =   ",!1!==e.createErrors?(o+=" { keyword: '"+(i||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(d)+" , params: { keyword: '"+this.keyword+"' } ",!1!==e.opts.messages&&(o+=" , message: 'should pass \""+this.keyword+"\" keyword validation' "),e.opts.verbose&&(o+=" , schema: validate.schema"+c+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+f+" "),o+=" } "):o+=" {} ",o+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&u&&(e.async?o+=" throw new ValidationError(vErrors); ":o+=" validate.errors = vErrors; return false; ")):!1===x.errors?o+=" "+N+" ":(o+=" if (Array.isArray("+S+")) { if (vErrors === null) vErrors = "+S+"; else vErrors = vErrors.concat("+S+"); errors = vErrors.length;  for (var "+T+"="+p+"; "+T+"<errors; "+T+"++) { var "+D+" = vErrors["+T+"]; if ("+D+".dataPath === undefined) "+D+".dataPath = (dataPath || '') + "+e.errorPath+";  "+D+'.schemaPath = "'+d+'";  ',e.opts.verbose&&(o+=" "+D+".schema = "+r+"; "+D+".data = "+f+"; "),o+=" } } else { "+N+" } "),o+=" } ",u&&(o+=" else { ")}return o}},function(e){e.exports={$schema:"http://json-schema.org/draft-07/schema#",$id:"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#",description:"Meta-schema for $data reference (JSON Schema extension proposal)",type:"object",required:["$data"],properties:{$data:{type:"string",anyOf:[{format:"relative-json-pointer"},{format:"json-pointer"}]}},additionalProperties:!1}},function(e){e.exports={id:"http://json-schema.org/draft-04/schema#",$schema:"http://json-schema.org/draft-04/schema#",description:"Core schema meta-schema",definitions:{schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},positiveInteger:{type:"integer",minimum:0},positiveIntegerDefault0:{allOf:[{$ref:"#/definitions/positiveInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},minItems:1,uniqueItems:!0}},type:"object",properties:{id:{type:"string"},$schema:{type:"string"},title:{type:"string"},description:{type:"string"},default:{},multipleOf:{type:"number",minimum:0,exclusiveMinimum:!0},maximum:{type:"number"},exclusiveMaximum:{type:"boolean",default:!1},minimum:{type:"number"},exclusiveMinimum:{type:"boolean",default:!1},maxLength:{$ref:"#/definitions/positiveInteger"},minLength:{$ref:"#/definitions/positiveIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{anyOf:[{type:"boolean"},{$ref:"#"}],default:{}},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:{}},maxItems:{$ref:"#/definitions/positiveInteger"},minItems:{$ref:"#/definitions/positiveIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},maxProperties:{$ref:"#/definitions/positiveInteger"},minProperties:{$ref:"#/definitions/positiveIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{anyOf:[{type:"boolean"},{$ref:"#"}],default:{}},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},enum:{type:"array",minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},dependencies:{exclusiveMaximum:["maximum"],exclusiveMinimum:["minimum"]},default:{}}},function(e){e.exports={$schema:"http://json-schema.org/draft-06/schema#",$id:"http://json-schema.org/draft-06/schema#",title:"Core schema meta-schema",definitions:{schemaArray:{type:"array",minItems:1,items:{$ref:"#"}},nonNegativeInteger:{type:"integer",minimum:0},nonNegativeIntegerDefault0:{allOf:[{$ref:"#/definitions/nonNegativeInteger"},{default:0}]},simpleTypes:{enum:["array","boolean","integer","null","number","object","string"]},stringArray:{type:"array",items:{type:"string"},uniqueItems:!0,default:[]}},type:["object","boolean"],properties:{$id:{type:"string",format:"uri-reference"},$schema:{type:"string",format:"uri"},$ref:{type:"string",format:"uri-reference"},title:{type:"string"},description:{type:"string"},default:{},examples:{type:"array",items:{}},multipleOf:{type:"number",exclusiveMinimum:0},maximum:{type:"number"},exclusiveMaximum:{type:"number"},minimum:{type:"number"},exclusiveMinimum:{type:"number"},maxLength:{$ref:"#/definitions/nonNegativeInteger"},minLength:{$ref:"#/definitions/nonNegativeIntegerDefault0"},pattern:{type:"string",format:"regex"},additionalItems:{$ref:"#"},items:{anyOf:[{$ref:"#"},{$ref:"#/definitions/schemaArray"}],default:{}},maxItems:{$ref:"#/definitions/nonNegativeInteger"},minItems:{$ref:"#/definitions/nonNegativeIntegerDefault0"},uniqueItems:{type:"boolean",default:!1},contains:{$ref:"#"},maxProperties:{$ref:"#/definitions/nonNegativeInteger"},minProperties:{$ref:"#/definitions/nonNegativeIntegerDefault0"},required:{$ref:"#/definitions/stringArray"},additionalProperties:{$ref:"#"},definitions:{type:"object",additionalProperties:{$ref:"#"},default:{}},properties:{type:"object",additionalProperties:{$ref:"#"},default:{}},patternProperties:{type:"object",additionalProperties:{$ref:"#"},default:{}},dependencies:{type:"object",additionalProperties:{anyOf:[{$ref:"#"},{$ref:"#/definitions/stringArray"}]}},propertyNames:{$ref:"#"},const:{},enum:{type:"array",minItems:1,uniqueItems:!0},type:{anyOf:[{$ref:"#/definitions/simpleTypes"},{type:"array",items:{$ref:"#/definitions/simpleTypes"},minItems:1,uniqueItems:!0}]},format:{type:"string"},allOf:{$ref:"#/definitions/schemaArray"},anyOf:{$ref:"#/definitions/schemaArray"},oneOf:{$ref:"#/definitions/schemaArray"},not:{$ref:"#"}},default:{}}},function(e){e.exports=[{name:"chevrolet chevelle malibu",miles_per_gallon:18,cylinders:8,displacement:307,horsepower:130,weight_in_lbs:3504,acceleration:12,year:"1970-01-01",origin:"USA"},{name:"buick skylark 320",miles_per_gallon:15,cylinders:8,displacement:350,horsepower:165,weight_in_lbs:3693,acceleration:11.5,year:"1970-01-01",origin:"USA"},{name:"plymouth satellite",miles_per_gallon:18,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:3436,acceleration:11,year:"1970-01-01",origin:"USA"},{name:"amc rebel sst",miles_per_gallon:16,cylinders:8,displacement:304,horsepower:150,weight_in_lbs:3433,acceleration:12,year:"1970-01-01",origin:"USA"},{name:"ford torino",miles_per_gallon:17,cylinders:8,displacement:302,horsepower:140,weight_in_lbs:3449,acceleration:10.5,year:"1970-01-01",origin:"USA"},{name:"ford galaxie 500",miles_per_gallon:15,cylinders:8,displacement:429,horsepower:198,weight_in_lbs:4341,acceleration:10,year:"1970-01-01",origin:"USA"},{name:"chevrolet impala",miles_per_gallon:14,cylinders:8,displacement:454,horsepower:220,weight_in_lbs:4354,acceleration:9,year:"1970-01-01",origin:"USA"},{name:"plymouth fury iii",miles_per_gallon:14,cylinders:8,displacement:440,horsepower:215,weight_in_lbs:4312,acceleration:8.5,year:"1970-01-01",origin:"USA"},{name:"pontiac catalina",miles_per_gallon:14,cylinders:8,displacement:455,horsepower:225,weight_in_lbs:4425,acceleration:10,year:"1970-01-01",origin:"USA"},{name:"amc ambassador dpl",miles_per_gallon:15,cylinders:8,displacement:390,horsepower:190,weight_in_lbs:3850,acceleration:8.5,year:"1970-01-01",origin:"USA"},{name:"citroen ds-21 pallas",miles_per_gallon:null,cylinders:4,displacement:133,horsepower:115,weight_in_lbs:3090,acceleration:17.5,year:"1970-01-01",origin:"Europe"},{name:"chevrolet chevelle concours (sw)",miles_per_gallon:null,cylinders:8,displacement:350,horsepower:165,weight_in_lbs:4142,acceleration:11.5,year:"1970-01-01",origin:"USA"},{name:"ford torino (sw)",miles_per_gallon:null,cylinders:8,displacement:351,horsepower:153,weight_in_lbs:4034,acceleration:11,year:"1970-01-01",origin:"USA"},{name:"plymouth satellite (sw)",miles_per_gallon:null,cylinders:8,displacement:383,horsepower:175,weight_in_lbs:4166,acceleration:10.5,year:"1970-01-01",origin:"USA"},{name:"amc rebel sst (sw)",miles_per_gallon:null,cylinders:8,displacement:360,horsepower:175,weight_in_lbs:3850,acceleration:11,year:"1970-01-01",origin:"USA"},{name:"dodge challenger se",miles_per_gallon:15,cylinders:8,displacement:383,horsepower:170,weight_in_lbs:3563,acceleration:10,year:"1970-01-01",origin:"USA"},{name:"plymouth 'cuda 340",miles_per_gallon:14,cylinders:8,displacement:340,horsepower:160,weight_in_lbs:3609,acceleration:8,year:"1970-01-01",origin:"USA"},{name:"ford mustang boss 302",miles_per_gallon:null,cylinders:8,displacement:302,horsepower:140,weight_in_lbs:3353,acceleration:8,year:"1970-01-01",origin:"USA"},{name:"chevrolet monte carlo",miles_per_gallon:15,cylinders:8,displacement:400,horsepower:150,weight_in_lbs:3761,acceleration:9.5,year:"1970-01-01",origin:"USA"},{name:"buick estate wagon (sw)",miles_per_gallon:14,cylinders:8,displacement:455,horsepower:225,weight_in_lbs:3086,acceleration:10,year:"1970-01-01",origin:"USA"},{name:"toyota corona mark ii",miles_per_gallon:24,cylinders:4,displacement:113,horsepower:95,weight_in_lbs:2372,acceleration:15,year:"1970-01-01",origin:"Japan"},{name:"plymouth duster",miles_per_gallon:22,cylinders:6,displacement:198,horsepower:95,weight_in_lbs:2833,acceleration:15.5,year:"1970-01-01",origin:"USA"},{name:"amc hornet",miles_per_gallon:18,cylinders:6,displacement:199,horsepower:97,weight_in_lbs:2774,acceleration:15.5,year:"1970-01-01",origin:"USA"},{name:"ford maverick",miles_per_gallon:21,cylinders:6,displacement:200,horsepower:85,weight_in_lbs:2587,acceleration:16,year:"1970-01-01",origin:"USA"},{name:"datsun pl510",miles_per_gallon:27,cylinders:4,displacement:97,horsepower:88,weight_in_lbs:2130,acceleration:14.5,year:"1970-01-01",origin:"Japan"},{name:"volkswagen 1131 deluxe sedan",miles_per_gallon:26,cylinders:4,displacement:97,horsepower:46,weight_in_lbs:1835,acceleration:20.5,year:"1970-01-01",origin:"Europe"},{name:"peugeot 504",miles_per_gallon:25,cylinders:4,displacement:110,horsepower:87,weight_in_lbs:2672,acceleration:17.5,year:"1970-01-01",origin:"Europe"},{name:"audi 100 ls",miles_per_gallon:24,cylinders:4,displacement:107,horsepower:90,weight_in_lbs:2430,acceleration:14.5,year:"1970-01-01",origin:"Europe"},{name:"saab 99e",miles_per_gallon:25,cylinders:4,displacement:104,horsepower:95,weight_in_lbs:2375,acceleration:17.5,year:"1970-01-01",origin:"Europe"},{name:"bmw 2002",miles_per_gallon:26,cylinders:4,displacement:121,horsepower:113,weight_in_lbs:2234,acceleration:12.5,year:"1970-01-01",origin:"Europe"},{name:"amc gremlin",miles_per_gallon:21,cylinders:6,displacement:199,horsepower:90,weight_in_lbs:2648,acceleration:15,year:"1970-01-01",origin:"USA"},{name:"ford f250",miles_per_gallon:10,cylinders:8,displacement:360,horsepower:215,weight_in_lbs:4615,acceleration:14,year:"1970-01-01",origin:"USA"},{name:"chevy c20",miles_per_gallon:10,cylinders:8,displacement:307,horsepower:200,weight_in_lbs:4376,acceleration:15,year:"1970-01-01",origin:"USA"},{name:"dodge d200",miles_per_gallon:11,cylinders:8,displacement:318,horsepower:210,weight_in_lbs:4382,acceleration:13.5,year:"1970-01-01",origin:"USA"},{name:"hi 1200d",miles_per_gallon:9,cylinders:8,displacement:304,horsepower:193,weight_in_lbs:4732,acceleration:18.5,year:"1970-01-01",origin:"USA"},{name:"datsun pl510",miles_per_gallon:27,cylinders:4,displacement:97,horsepower:88,weight_in_lbs:2130,acceleration:14.5,year:"1971-01-01",origin:"Japan"},{name:"chevrolet vega 2300",miles_per_gallon:28,cylinders:4,displacement:140,horsepower:90,weight_in_lbs:2264,acceleration:15.5,year:"1971-01-01",origin:"USA"},{name:"toyota corona",miles_per_gallon:25,cylinders:4,displacement:113,horsepower:95,weight_in_lbs:2228,acceleration:14,year:"1971-01-01",origin:"Japan"},{name:"ford pinto",miles_per_gallon:25,cylinders:4,displacement:98,horsepower:null,weight_in_lbs:2046,acceleration:19,year:"1971-01-01",origin:"USA"},{name:"volkswagen super beetle 117",miles_per_gallon:null,cylinders:4,displacement:97,horsepower:48,weight_in_lbs:1978,acceleration:20,year:"1971-01-01",origin:"Europe"},{name:"amc gremlin",miles_per_gallon:19,cylinders:6,displacement:232,horsepower:100,weight_in_lbs:2634,acceleration:13,year:"1971-01-01",origin:"USA"},{name:"plymouth satellite custom",miles_per_gallon:16,cylinders:6,displacement:225,horsepower:105,weight_in_lbs:3439,acceleration:15.5,year:"1971-01-01",origin:"USA"},{name:"chevrolet chevelle malibu",miles_per_gallon:17,cylinders:6,displacement:250,horsepower:100,weight_in_lbs:3329,acceleration:15.5,year:"1971-01-01",origin:"USA"},{name:"ford torino 500",miles_per_gallon:19,cylinders:6,displacement:250,horsepower:88,weight_in_lbs:3302,acceleration:15.5,year:"1971-01-01",origin:"USA"},{name:"amc matador",miles_per_gallon:18,cylinders:6,displacement:232,horsepower:100,weight_in_lbs:3288,acceleration:15.5,year:"1971-01-01",origin:"USA"},{name:"chevrolet impala",miles_per_gallon:14,cylinders:8,displacement:350,horsepower:165,weight_in_lbs:4209,acceleration:12,year:"1971-01-01",origin:"USA"},{name:"pontiac catalina brougham",miles_per_gallon:14,cylinders:8,displacement:400,horsepower:175,weight_in_lbs:4464,acceleration:11.5,year:"1971-01-01",origin:"USA"},{name:"ford galaxie 500",miles_per_gallon:14,cylinders:8,displacement:351,horsepower:153,weight_in_lbs:4154,acceleration:13.5,year:"1971-01-01",origin:"USA"},{name:"plymouth fury iii",miles_per_gallon:14,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:4096,acceleration:13,year:"1971-01-01",origin:"USA"},{name:"dodge monaco (sw)",miles_per_gallon:12,cylinders:8,displacement:383,horsepower:180,weight_in_lbs:4955,acceleration:11.5,year:"1971-01-01",origin:"USA"},{name:"ford country squire (sw)",miles_per_gallon:13,cylinders:8,displacement:400,horsepower:170,weight_in_lbs:4746,acceleration:12,year:"1971-01-01",origin:"USA"},{name:"pontiac safari (sw)",miles_per_gallon:13,cylinders:8,displacement:400,horsepower:175,weight_in_lbs:5140,acceleration:12,year:"1971-01-01",origin:"USA"},{name:"amc hornet sportabout (sw)",miles_per_gallon:18,cylinders:6,displacement:258,horsepower:110,weight_in_lbs:2962,acceleration:13.5,year:"1971-01-01",origin:"USA"},{name:"chevrolet vega (sw)",miles_per_gallon:22,cylinders:4,displacement:140,horsepower:72,weight_in_lbs:2408,acceleration:19,year:"1971-01-01",origin:"USA"},{name:"pontiac firebird",miles_per_gallon:19,cylinders:6,displacement:250,horsepower:100,weight_in_lbs:3282,acceleration:15,year:"1971-01-01",origin:"USA"},{name:"ford mustang",miles_per_gallon:18,cylinders:6,displacement:250,horsepower:88,weight_in_lbs:3139,acceleration:14.5,year:"1971-01-01",origin:"USA"},{name:"mercury capri 2000",miles_per_gallon:23,cylinders:4,displacement:122,horsepower:86,weight_in_lbs:2220,acceleration:14,year:"1971-01-01",origin:"USA"},{name:"opel 1900",miles_per_gallon:28,cylinders:4,displacement:116,horsepower:90,weight_in_lbs:2123,acceleration:14,year:"1971-01-01",origin:"Europe"},{name:"peugeot 304",miles_per_gallon:30,cylinders:4,displacement:79,horsepower:70,weight_in_lbs:2074,acceleration:19.5,year:"1971-01-01",origin:"Europe"},{name:"fiat 124b",miles_per_gallon:30,cylinders:4,displacement:88,horsepower:76,weight_in_lbs:2065,acceleration:14.5,year:"1971-01-01",origin:"Europe"},{name:"toyota corolla 1200",miles_per_gallon:31,cylinders:4,displacement:71,horsepower:65,weight_in_lbs:1773,acceleration:19,year:"1971-01-01",origin:"Japan"},{name:"datsun 1200",miles_per_gallon:35,cylinders:4,displacement:72,horsepower:69,weight_in_lbs:1613,acceleration:18,year:"1971-01-01",origin:"Japan"},{name:"volkswagen model 111",miles_per_gallon:27,cylinders:4,displacement:97,horsepower:60,weight_in_lbs:1834,acceleration:19,year:"1971-01-01",origin:"Europe"},{name:"plymouth cricket",miles_per_gallon:26,cylinders:4,displacement:91,horsepower:70,weight_in_lbs:1955,acceleration:20.5,year:"1971-01-01",origin:"USA"},{name:"toyota corona hardtop",miles_per_gallon:24,cylinders:4,displacement:113,horsepower:95,weight_in_lbs:2278,acceleration:15.5,year:"1972-01-01",origin:"Japan"},{name:"dodge colt hardtop",miles_per_gallon:25,cylinders:4,displacement:97.5,horsepower:80,weight_in_lbs:2126,acceleration:17,year:"1972-01-01",origin:"USA"},{name:"volkswagen type 3",miles_per_gallon:23,cylinders:4,displacement:97,horsepower:54,weight_in_lbs:2254,acceleration:23.5,year:"1972-01-01",origin:"Europe"},{name:"chevrolet vega",miles_per_gallon:20,cylinders:4,displacement:140,horsepower:90,weight_in_lbs:2408,acceleration:19.5,year:"1972-01-01",origin:"USA"},{name:"ford pinto runabout",miles_per_gallon:21,cylinders:4,displacement:122,horsepower:86,weight_in_lbs:2226,acceleration:16.5,year:"1972-01-01",origin:"USA"},{name:"chevrolet impala",miles_per_gallon:13,cylinders:8,displacement:350,horsepower:165,weight_in_lbs:4274,acceleration:12,year:"1972-01-01",origin:"USA"},{name:"pontiac catalina",miles_per_gallon:14,cylinders:8,displacement:400,horsepower:175,weight_in_lbs:4385,acceleration:12,year:"1972-01-01",origin:"USA"},{name:"plymouth fury iii",miles_per_gallon:15,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:4135,acceleration:13.5,year:"1972-01-01",origin:"USA"},{name:"ford galaxie 500",miles_per_gallon:14,cylinders:8,displacement:351,horsepower:153,weight_in_lbs:4129,acceleration:13,year:"1972-01-01",origin:"USA"},{name:"amc ambassador sst",miles_per_gallon:17,cylinders:8,displacement:304,horsepower:150,weight_in_lbs:3672,acceleration:11.5,year:"1972-01-01",origin:"USA"},{name:"mercury marquis",miles_per_gallon:11,cylinders:8,displacement:429,horsepower:208,weight_in_lbs:4633,acceleration:11,year:"1972-01-01",origin:"USA"},{name:"buick lesabre custom",miles_per_gallon:13,cylinders:8,displacement:350,horsepower:155,weight_in_lbs:4502,acceleration:13.5,year:"1972-01-01",origin:"USA"},{name:"oldsmobile delta 88 royale",miles_per_gallon:12,cylinders:8,displacement:350,horsepower:160,weight_in_lbs:4456,acceleration:13.5,year:"1972-01-01",origin:"USA"},{name:"chrysler newport royal",miles_per_gallon:13,cylinders:8,displacement:400,horsepower:190,weight_in_lbs:4422,acceleration:12.5,year:"1972-01-01",origin:"USA"},{name:"mazda rx2 coupe",miles_per_gallon:19,cylinders:3,displacement:70,horsepower:97,weight_in_lbs:2330,acceleration:13.5,year:"1972-01-01",origin:"Japan"},{name:"amc matador (sw)",miles_per_gallon:15,cylinders:8,displacement:304,horsepower:150,weight_in_lbs:3892,acceleration:12.5,year:"1972-01-01",origin:"USA"},{name:"chevrolet chevelle concours (sw)",miles_per_gallon:13,cylinders:8,displacement:307,horsepower:130,weight_in_lbs:4098,acceleration:14,year:"1972-01-01",origin:"USA"},{name:"ford gran torino (sw)",miles_per_gallon:13,cylinders:8,displacement:302,horsepower:140,weight_in_lbs:4294,acceleration:16,year:"1972-01-01",origin:"USA"},{name:"plymouth satellite custom (sw)",miles_per_gallon:14,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:4077,acceleration:14,year:"1972-01-01",origin:"USA"},{name:"volvo 145e (sw)",miles_per_gallon:18,cylinders:4,displacement:121,horsepower:112,weight_in_lbs:2933,acceleration:14.5,year:"1972-01-01",origin:"Europe"},{name:"volkswagen 411 (sw)",miles_per_gallon:22,cylinders:4,displacement:121,horsepower:76,weight_in_lbs:2511,acceleration:18,year:"1972-01-01",origin:"Europe"},{name:"peugeot 504 (sw)",miles_per_gallon:21,cylinders:4,displacement:120,horsepower:87,weight_in_lbs:2979,acceleration:19.5,year:"1972-01-01",origin:"Europe"},{name:"renault 12 (sw)",miles_per_gallon:26,cylinders:4,displacement:96,horsepower:69,weight_in_lbs:2189,acceleration:18,year:"1972-01-01",origin:"Europe"},{name:"ford pinto (sw)",miles_per_gallon:22,cylinders:4,displacement:122,horsepower:86,weight_in_lbs:2395,acceleration:16,year:"1972-01-01",origin:"USA"},{name:"datsun 510 (sw)",miles_per_gallon:28,cylinders:4,displacement:97,horsepower:92,weight_in_lbs:2288,acceleration:17,year:"1972-01-01",origin:"Japan"},{name:"toyouta corona mark ii (sw)",miles_per_gallon:23,cylinders:4,displacement:120,horsepower:97,weight_in_lbs:2506,acceleration:14.5,year:"1972-01-01",origin:"Japan"},{name:"dodge colt (sw)",miles_per_gallon:28,cylinders:4,displacement:98,horsepower:80,weight_in_lbs:2164,acceleration:15,year:"1972-01-01",origin:"USA"},{name:"toyota corolla 1600 (sw)",miles_per_gallon:27,cylinders:4,displacement:97,horsepower:88,weight_in_lbs:2100,acceleration:16.5,year:"1972-01-01",origin:"Japan"},{name:"buick century 350",miles_per_gallon:13,cylinders:8,displacement:350,horsepower:175,weight_in_lbs:4100,acceleration:13,year:"1973-01-01",origin:"USA"},{name:"amc matador",miles_per_gallon:14,cylinders:8,displacement:304,horsepower:150,weight_in_lbs:3672,acceleration:11.5,year:"1973-01-01",origin:"USA"},{name:"chevrolet malibu",miles_per_gallon:13,cylinders:8,displacement:350,horsepower:145,weight_in_lbs:3988,acceleration:13,year:"1973-01-01",origin:"USA"},{name:"ford gran torino",miles_per_gallon:14,cylinders:8,displacement:302,horsepower:137,weight_in_lbs:4042,acceleration:14.5,year:"1973-01-01",origin:"USA"},{name:"dodge coronet custom",miles_per_gallon:15,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:3777,acceleration:12.5,year:"1973-01-01",origin:"USA"},{name:"mercury marquis brougham",miles_per_gallon:12,cylinders:8,displacement:429,horsepower:198,weight_in_lbs:4952,acceleration:11.5,year:"1973-01-01",origin:"USA"},{name:"chevrolet caprice classic",miles_per_gallon:13,cylinders:8,displacement:400,horsepower:150,weight_in_lbs:4464,acceleration:12,year:"1973-01-01",origin:"USA"},{name:"ford ltd",miles_per_gallon:13,cylinders:8,displacement:351,horsepower:158,weight_in_lbs:4363,acceleration:13,year:"1973-01-01",origin:"USA"},{name:"plymouth fury gran sedan",miles_per_gallon:14,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:4237,acceleration:14.5,year:"1973-01-01",origin:"USA"},{name:"chrysler new yorker brougham",miles_per_gallon:13,cylinders:8,displacement:440,horsepower:215,weight_in_lbs:4735,acceleration:11,year:"1973-01-01",origin:"USA"},{name:"buick electra 225 custom",miles_per_gallon:12,cylinders:8,displacement:455,horsepower:225,weight_in_lbs:4951,acceleration:11,year:"1973-01-01",origin:"USA"},{name:"amc ambassador brougham",miles_per_gallon:13,cylinders:8,displacement:360,horsepower:175,weight_in_lbs:3821,acceleration:11,year:"1973-01-01",origin:"USA"},{name:"plymouth valiant",miles_per_gallon:18,cylinders:6,displacement:225,horsepower:105,weight_in_lbs:3121,acceleration:16.5,year:"1973-01-01",origin:"USA"},{name:"chevrolet nova custom",miles_per_gallon:16,cylinders:6,displacement:250,horsepower:100,weight_in_lbs:3278,acceleration:18,year:"1973-01-01",origin:"USA"},{name:"amc hornet",miles_per_gallon:18,cylinders:6,displacement:232,horsepower:100,weight_in_lbs:2945,acceleration:16,year:"1973-01-01",origin:"USA"},{name:"ford maverick",miles_per_gallon:18,cylinders:6,displacement:250,horsepower:88,weight_in_lbs:3021,acceleration:16.5,year:"1973-01-01",origin:"USA"},{name:"plymouth duster",miles_per_gallon:23,cylinders:6,displacement:198,horsepower:95,weight_in_lbs:2904,acceleration:16,year:"1973-01-01",origin:"USA"},{name:"volkswagen super beetle",miles_per_gallon:26,cylinders:4,displacement:97,horsepower:46,weight_in_lbs:1950,acceleration:21,year:"1973-01-01",origin:"Europe"},{name:"chevrolet impala",miles_per_gallon:11,cylinders:8,displacement:400,horsepower:150,weight_in_lbs:4997,acceleration:14,year:"1973-01-01",origin:"USA"},{name:"ford country",miles_per_gallon:12,cylinders:8,displacement:400,horsepower:167,weight_in_lbs:4906,acceleration:12.5,year:"1973-01-01",origin:"USA"},{name:"plymouth custom suburb",miles_per_gallon:13,cylinders:8,displacement:360,horsepower:170,weight_in_lbs:4654,acceleration:13,year:"1973-01-01",origin:"USA"},{name:"oldsmobile vista cruiser",miles_per_gallon:12,cylinders:8,displacement:350,horsepower:180,weight_in_lbs:4499,acceleration:12.5,year:"1973-01-01",origin:"USA"},{name:"amc gremlin",miles_per_gallon:18,cylinders:6,displacement:232,horsepower:100,weight_in_lbs:2789,acceleration:15,year:"1973-01-01",origin:"USA"},{name:"toyota carina",miles_per_gallon:20,cylinders:4,displacement:97,horsepower:88,weight_in_lbs:2279,acceleration:19,year:"1973-01-01",origin:"Japan"},{name:"chevrolet vega",miles_per_gallon:21,cylinders:4,displacement:140,horsepower:72,weight_in_lbs:2401,acceleration:19.5,year:"1973-01-01",origin:"USA"},{name:"datsun 610",miles_per_gallon:22,cylinders:4,displacement:108,horsepower:94,weight_in_lbs:2379,acceleration:16.5,year:"1973-01-01",origin:"Japan"},{name:"maxda rx3",miles_per_gallon:18,cylinders:3,displacement:70,horsepower:90,weight_in_lbs:2124,acceleration:13.5,year:"1973-01-01",origin:"Japan"},{name:"ford pinto",miles_per_gallon:19,cylinders:4,displacement:122,horsepower:85,weight_in_lbs:2310,acceleration:18.5,year:"1973-01-01",origin:"USA"},{name:"mercury capri v6",miles_per_gallon:21,cylinders:6,displacement:155,horsepower:107,weight_in_lbs:2472,acceleration:14,year:"1973-01-01",origin:"USA"},{name:"fiat 124 sport coupe",miles_per_gallon:26,cylinders:4,displacement:98,horsepower:90,weight_in_lbs:2265,acceleration:15.5,year:"1973-01-01",origin:"Europe"},{name:"chevrolet monte carlo s",miles_per_gallon:15,cylinders:8,displacement:350,horsepower:145,weight_in_lbs:4082,acceleration:13,year:"1973-01-01",origin:"USA"},{name:"pontiac grand prix",miles_per_gallon:16,cylinders:8,displacement:400,horsepower:230,weight_in_lbs:4278,acceleration:9.5,year:"1973-01-01",origin:"USA"},{name:"fiat 128",miles_per_gallon:29,cylinders:4,displacement:68,horsepower:49,weight_in_lbs:1867,acceleration:19.5,year:"1973-01-01",origin:"Europe"},{name:"opel manta",miles_per_gallon:24,cylinders:4,displacement:116,horsepower:75,weight_in_lbs:2158,acceleration:15.5,year:"1973-01-01",origin:"Europe"},{name:"audi 100ls",miles_per_gallon:20,cylinders:4,displacement:114,horsepower:91,weight_in_lbs:2582,acceleration:14,year:"1973-01-01",origin:"Europe"},{name:"volvo 144ea",miles_per_gallon:19,cylinders:4,displacement:121,horsepower:112,weight_in_lbs:2868,acceleration:15.5,year:"1973-01-01",origin:"Europe"},{name:"dodge dart custom",miles_per_gallon:15,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:3399,acceleration:11,year:"1973-01-01",origin:"USA"},{name:"saab 99le",miles_per_gallon:24,cylinders:4,displacement:121,horsepower:110,weight_in_lbs:2660,acceleration:14,year:"1973-01-01",origin:"Europe"},{name:"toyota mark ii",miles_per_gallon:20,cylinders:6,displacement:156,horsepower:122,weight_in_lbs:2807,acceleration:13.5,year:"1973-01-01",origin:"Japan"},{name:"oldsmobile omega",miles_per_gallon:11,cylinders:8,displacement:350,horsepower:180,weight_in_lbs:3664,acceleration:11,year:"1973-01-01",origin:"USA"},{name:"plymouth duster",miles_per_gallon:20,cylinders:6,displacement:198,horsepower:95,weight_in_lbs:3102,acceleration:16.5,year:"1974-01-01",origin:"USA"},{name:"ford maverick",miles_per_gallon:21,cylinders:6,displacement:200,horsepower:null,weight_in_lbs:2875,acceleration:17,year:"1974-01-01",origin:"USA"},{name:"amc hornet",miles_per_gallon:19,cylinders:6,displacement:232,horsepower:100,weight_in_lbs:2901,acceleration:16,year:"1974-01-01",origin:"USA"},{name:"chevrolet nova",miles_per_gallon:15,cylinders:6,displacement:250,horsepower:100,weight_in_lbs:3336,acceleration:17,year:"1974-01-01",origin:"USA"},{name:"datsun b210",miles_per_gallon:31,cylinders:4,displacement:79,horsepower:67,weight_in_lbs:1950,acceleration:19,year:"1974-01-01",origin:"Japan"},{name:"ford pinto",miles_per_gallon:26,cylinders:4,displacement:122,horsepower:80,weight_in_lbs:2451,acceleration:16.5,year:"1974-01-01",origin:"USA"},{name:"toyota corolla 1200",miles_per_gallon:32,cylinders:4,displacement:71,horsepower:65,weight_in_lbs:1836,acceleration:21,year:"1974-01-01",origin:"Japan"},{name:"chevrolet vega",miles_per_gallon:25,cylinders:4,displacement:140,horsepower:75,weight_in_lbs:2542,acceleration:17,year:"1974-01-01",origin:"USA"},{name:"chevrolet chevelle malibu classic",miles_per_gallon:16,cylinders:6,displacement:250,horsepower:100,weight_in_lbs:3781,acceleration:17,year:"1974-01-01",origin:"USA"},{name:"amc matador",miles_per_gallon:16,cylinders:6,displacement:258,horsepower:110,weight_in_lbs:3632,acceleration:18,year:"1974-01-01",origin:"USA"},{name:"plymouth satellite sebring",miles_per_gallon:18,cylinders:6,displacement:225,horsepower:105,weight_in_lbs:3613,acceleration:16.5,year:"1974-01-01",origin:"USA"},{name:"ford gran torino",miles_per_gallon:16,cylinders:8,displacement:302,horsepower:140,weight_in_lbs:4141,acceleration:14,year:"1974-01-01",origin:"USA"},{name:"buick century luxus (sw)",miles_per_gallon:13,cylinders:8,displacement:350,horsepower:150,weight_in_lbs:4699,acceleration:14.5,year:"1974-01-01",origin:"USA"},{name:"dodge coronet custom (sw)",miles_per_gallon:14,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:4457,acceleration:13.5,year:"1974-01-01",origin:"USA"},{name:"ford gran torino (sw)",miles_per_gallon:14,cylinders:8,displacement:302,horsepower:140,weight_in_lbs:4638,acceleration:16,year:"1974-01-01",origin:"USA"},{name:"amc matador (sw)",miles_per_gallon:14,cylinders:8,displacement:304,horsepower:150,weight_in_lbs:4257,acceleration:15.5,year:"1974-01-01",origin:"USA"},{name:"audi fox",miles_per_gallon:29,cylinders:4,displacement:98,horsepower:83,weight_in_lbs:2219,acceleration:16.5,year:"1974-01-01",origin:"Europe"},{name:"volkswagen dasher",miles_per_gallon:26,cylinders:4,displacement:79,horsepower:67,weight_in_lbs:1963,acceleration:15.5,year:"1974-01-01",origin:"Europe"},{name:"opel manta",miles_per_gallon:26,cylinders:4,displacement:97,horsepower:78,weight_in_lbs:2300,acceleration:14.5,year:"1974-01-01",origin:"Europe"},{name:"toyota corona",miles_per_gallon:31,cylinders:4,displacement:76,horsepower:52,weight_in_lbs:1649,acceleration:16.5,year:"1974-01-01",origin:"Japan"},{name:"datsun 710",miles_per_gallon:32,cylinders:4,displacement:83,horsepower:61,weight_in_lbs:2003,acceleration:19,year:"1974-01-01",origin:"Japan"},{name:"dodge colt",miles_per_gallon:28,cylinders:4,displacement:90,horsepower:75,weight_in_lbs:2125,acceleration:14.5,year:"1974-01-01",origin:"USA"},{name:"fiat 128",miles_per_gallon:24,cylinders:4,displacement:90,horsepower:75,weight_in_lbs:2108,acceleration:15.5,year:"1974-01-01",origin:"Europe"},{name:"fiat 124 tc",miles_per_gallon:26,cylinders:4,displacement:116,horsepower:75,weight_in_lbs:2246,acceleration:14,year:"1974-01-01",origin:"Europe"},{name:"honda civic",miles_per_gallon:24,cylinders:4,displacement:120,horsepower:97,weight_in_lbs:2489,acceleration:15,year:"1974-01-01",origin:"Japan"},{name:"subaru",miles_per_gallon:26,cylinders:4,displacement:108,horsepower:93,weight_in_lbs:2391,acceleration:15.5,year:"1974-01-01",origin:"Japan"},{name:"fiat x1.9",miles_per_gallon:31,cylinders:4,displacement:79,horsepower:67,weight_in_lbs:2e3,acceleration:16,year:"1974-01-01",origin:"Europe"},{name:"plymouth valiant custom",miles_per_gallon:19,cylinders:6,displacement:225,horsepower:95,weight_in_lbs:3264,acceleration:16,year:"1975-01-01",origin:"USA"},{name:"chevrolet nova",miles_per_gallon:18,cylinders:6,displacement:250,horsepower:105,weight_in_lbs:3459,acceleration:16,year:"1975-01-01",origin:"USA"},{name:"mercury monarch",miles_per_gallon:15,cylinders:6,displacement:250,horsepower:72,weight_in_lbs:3432,acceleration:21,year:"1975-01-01",origin:"USA"},{name:"ford maverick",miles_per_gallon:15,cylinders:6,displacement:250,horsepower:72,weight_in_lbs:3158,acceleration:19.5,year:"1975-01-01",origin:"USA"},{name:"pontiac catalina",miles_per_gallon:16,cylinders:8,displacement:400,horsepower:170,weight_in_lbs:4668,acceleration:11.5,year:"1975-01-01",origin:"USA"},{name:"chevrolet bel air",miles_per_gallon:15,cylinders:8,displacement:350,horsepower:145,weight_in_lbs:4440,acceleration:14,year:"1975-01-01",origin:"USA"},{name:"plymouth grand fury",miles_per_gallon:16,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:4498,acceleration:14.5,year:"1975-01-01",origin:"USA"},{name:"ford ltd",miles_per_gallon:14,cylinders:8,displacement:351,horsepower:148,weight_in_lbs:4657,acceleration:13.5,year:"1975-01-01",origin:"USA"},{name:"buick century",miles_per_gallon:17,cylinders:6,displacement:231,horsepower:110,weight_in_lbs:3907,acceleration:21,year:"1975-01-01",origin:"USA"},{name:"chevroelt chevelle malibu",miles_per_gallon:16,cylinders:6,displacement:250,horsepower:105,weight_in_lbs:3897,acceleration:18.5,year:"1975-01-01",origin:"USA"},{name:"amc matador",miles_per_gallon:15,cylinders:6,displacement:258,horsepower:110,weight_in_lbs:3730,acceleration:19,year:"1975-01-01",origin:"USA"},{name:"plymouth fury",miles_per_gallon:18,cylinders:6,displacement:225,horsepower:95,weight_in_lbs:3785,acceleration:19,year:"1975-01-01",origin:"USA"},{name:"buick skyhawk",miles_per_gallon:21,cylinders:6,displacement:231,horsepower:110,weight_in_lbs:3039,acceleration:15,year:"1975-01-01",origin:"USA"},{name:"chevrolet monza 2+2",miles_per_gallon:20,cylinders:8,displacement:262,horsepower:110,weight_in_lbs:3221,acceleration:13.5,year:"1975-01-01",origin:"USA"},{name:"ford mustang ii",miles_per_gallon:13,cylinders:8,displacement:302,horsepower:129,weight_in_lbs:3169,acceleration:12,year:"1975-01-01",origin:"USA"},{name:"toyota corolla",miles_per_gallon:29,cylinders:4,displacement:97,horsepower:75,weight_in_lbs:2171,acceleration:16,year:"1975-01-01",origin:"Japan"},{name:"ford pinto",miles_per_gallon:23,cylinders:4,displacement:140,horsepower:83,weight_in_lbs:2639,acceleration:17,year:"1975-01-01",origin:"USA"},{name:"amc gremlin",miles_per_gallon:20,cylinders:6,displacement:232,horsepower:100,weight_in_lbs:2914,acceleration:16,year:"1975-01-01",origin:"USA"},{name:"pontiac astro",miles_per_gallon:23,cylinders:4,displacement:140,horsepower:78,weight_in_lbs:2592,acceleration:18.5,year:"1975-01-01",origin:"USA"},{name:"toyota corona",miles_per_gallon:24,cylinders:4,displacement:134,horsepower:96,weight_in_lbs:2702,acceleration:13.5,year:"1975-01-01",origin:"Japan"},{name:"volkswagen dasher",miles_per_gallon:25,cylinders:4,displacement:90,horsepower:71,weight_in_lbs:2223,acceleration:16.5,year:"1975-01-01",origin:"Europe"},{name:"datsun 710",miles_per_gallon:24,cylinders:4,displacement:119,horsepower:97,weight_in_lbs:2545,acceleration:17,year:"1975-01-01",origin:"Japan"},{name:"ford pinto",miles_per_gallon:18,cylinders:6,displacement:171,horsepower:97,weight_in_lbs:2984,acceleration:14.5,year:"1975-01-01",origin:"USA"},{name:"volkswagen rabbit",miles_per_gallon:29,cylinders:4,displacement:90,horsepower:70,weight_in_lbs:1937,acceleration:14,year:"1975-01-01",origin:"Europe"},{name:"amc pacer",miles_per_gallon:19,cylinders:6,displacement:232,horsepower:90,weight_in_lbs:3211,acceleration:17,year:"1975-01-01",origin:"USA"},{name:"audi 100ls",miles_per_gallon:23,cylinders:4,displacement:115,horsepower:95,weight_in_lbs:2694,acceleration:15,year:"1975-01-01",origin:"Europe"},{name:"peugeot 504",miles_per_gallon:23,cylinders:4,displacement:120,horsepower:88,weight_in_lbs:2957,acceleration:17,year:"1975-01-01",origin:"Europe"},{name:"volvo 244dl",miles_per_gallon:22,cylinders:4,displacement:121,horsepower:98,weight_in_lbs:2945,acceleration:14.5,year:"1975-01-01",origin:"Europe"},{name:"saab 99le",miles_per_gallon:25,cylinders:4,displacement:121,horsepower:115,weight_in_lbs:2671,acceleration:13.5,year:"1975-01-01",origin:"Europe"},{name:"honda civic cvcc",miles_per_gallon:33,cylinders:4,displacement:91,horsepower:53,weight_in_lbs:1795,acceleration:17.5,year:"1975-01-01",origin:"Japan"},{name:"fiat 131",miles_per_gallon:28,cylinders:4,displacement:107,horsepower:86,weight_in_lbs:2464,acceleration:15.5,year:"1976-01-01",origin:"Europe"},{name:"opel 1900",miles_per_gallon:25,cylinders:4,displacement:116,horsepower:81,weight_in_lbs:2220,acceleration:16.9,year:"1976-01-01",origin:"Europe"},{name:"capri ii",miles_per_gallon:25,cylinders:4,displacement:140,horsepower:92,weight_in_lbs:2572,acceleration:14.9,year:"1976-01-01",origin:"USA"},{name:"dodge colt",miles_per_gallon:26,cylinders:4,displacement:98,horsepower:79,weight_in_lbs:2255,acceleration:17.7,year:"1976-01-01",origin:"USA"},{name:"renault 12tl",miles_per_gallon:27,cylinders:4,displacement:101,horsepower:83,weight_in_lbs:2202,acceleration:15.3,year:"1976-01-01",origin:"Europe"},{name:"chevrolet chevelle malibu classic",miles_per_gallon:17.5,cylinders:8,displacement:305,horsepower:140,weight_in_lbs:4215,acceleration:13,year:"1976-01-01",origin:"USA"},{name:"dodge coronet brougham",miles_per_gallon:16,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:4190,acceleration:13,year:"1976-01-01",origin:"USA"},{name:"amc matador",miles_per_gallon:15.5,cylinders:8,displacement:304,horsepower:120,weight_in_lbs:3962,acceleration:13.9,year:"1976-01-01",origin:"USA"},{name:"ford gran torino",miles_per_gallon:14.5,cylinders:8,displacement:351,horsepower:152,weight_in_lbs:4215,acceleration:12.8,year:"1976-01-01",origin:"USA"},{name:"plymouth valiant",miles_per_gallon:22,cylinders:6,displacement:225,horsepower:100,weight_in_lbs:3233,acceleration:15.4,year:"1976-01-01",origin:"USA"},{name:"chevrolet nova",miles_per_gallon:22,cylinders:6,displacement:250,horsepower:105,weight_in_lbs:3353,acceleration:14.5,year:"1976-01-01",origin:"USA"},{name:"ford maverick",miles_per_gallon:24,cylinders:6,displacement:200,horsepower:81,weight_in_lbs:3012,acceleration:17.6,year:"1976-01-01",origin:"USA"},{name:"amc hornet",miles_per_gallon:22.5,cylinders:6,displacement:232,horsepower:90,weight_in_lbs:3085,acceleration:17.6,year:"1976-01-01",origin:"USA"},{name:"chevrolet chevette",miles_per_gallon:29,cylinders:4,displacement:85,horsepower:52,weight_in_lbs:2035,acceleration:22.2,year:"1976-01-01",origin:"USA"},{name:"chevrolet woody",miles_per_gallon:24.5,cylinders:4,displacement:98,horsepower:60,weight_in_lbs:2164,acceleration:22.1,year:"1976-01-01",origin:"USA"},{name:"vw rabbit",miles_per_gallon:29,cylinders:4,displacement:90,horsepower:70,weight_in_lbs:1937,acceleration:14.2,year:"1976-01-01",origin:"Europe"},{name:"honda civic",miles_per_gallon:33,cylinders:4,displacement:91,horsepower:53,weight_in_lbs:1795,acceleration:17.4,year:"1976-01-01",origin:"Japan"},{name:"dodge aspen se",miles_per_gallon:20,cylinders:6,displacement:225,horsepower:100,weight_in_lbs:3651,acceleration:17.7,year:"1976-01-01",origin:"USA"},{name:"ford granada ghia",miles_per_gallon:18,cylinders:6,displacement:250,horsepower:78,weight_in_lbs:3574,acceleration:21,year:"1976-01-01",origin:"USA"},{name:"pontiac ventura sj",miles_per_gallon:18.5,cylinders:6,displacement:250,horsepower:110,weight_in_lbs:3645,acceleration:16.2,year:"1976-01-01",origin:"USA"},{name:"amc pacer d/l",miles_per_gallon:17.5,cylinders:6,displacement:258,horsepower:95,weight_in_lbs:3193,acceleration:17.8,year:"1976-01-01",origin:"USA"},{name:"volkswagen rabbit",miles_per_gallon:29.5,cylinders:4,displacement:97,horsepower:71,weight_in_lbs:1825,acceleration:12.2,year:"1976-01-01",origin:"Europe"},{name:"datsun b-210",miles_per_gallon:32,cylinders:4,displacement:85,horsepower:70,weight_in_lbs:1990,acceleration:17,year:"1976-01-01",origin:"Japan"},{name:"toyota corolla",miles_per_gallon:28,cylinders:4,displacement:97,horsepower:75,weight_in_lbs:2155,acceleration:16.4,year:"1976-01-01",origin:"Japan"},{name:"ford pinto",miles_per_gallon:26.5,cylinders:4,displacement:140,horsepower:72,weight_in_lbs:2565,acceleration:13.6,year:"1976-01-01",origin:"USA"},{name:"volvo 245",miles_per_gallon:20,cylinders:4,displacement:130,horsepower:102,weight_in_lbs:3150,acceleration:15.7,year:"1976-01-01",origin:"Europe"},{name:"plymouth volare premier v8",miles_per_gallon:13,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:3940,acceleration:13.2,year:"1976-01-01",origin:"USA"},{name:"peugeot 504",miles_per_gallon:19,cylinders:4,displacement:120,horsepower:88,weight_in_lbs:3270,acceleration:21.9,year:"1976-01-01",origin:"Europe"},{name:"toyota mark ii",miles_per_gallon:19,cylinders:6,displacement:156,horsepower:108,weight_in_lbs:2930,acceleration:15.5,year:"1976-01-01",origin:"Japan"},{name:"mercedes-benz 280s",miles_per_gallon:16.5,cylinders:6,displacement:168,horsepower:120,weight_in_lbs:3820,acceleration:16.7,year:"1976-01-01",origin:"Europe"},{name:"cadillac seville",miles_per_gallon:16.5,cylinders:8,displacement:350,horsepower:180,weight_in_lbs:4380,acceleration:12.1,year:"1976-01-01",origin:"USA"},{name:"chevy c10",miles_per_gallon:13,cylinders:8,displacement:350,horsepower:145,weight_in_lbs:4055,acceleration:12,year:"1976-01-01",origin:"USA"},{name:"ford f108",miles_per_gallon:13,cylinders:8,displacement:302,horsepower:130,weight_in_lbs:3870,acceleration:15,year:"1976-01-01",origin:"USA"},{name:"dodge d100",miles_per_gallon:13,cylinders:8,displacement:318,horsepower:150,weight_in_lbs:3755,acceleration:14,year:"1976-01-01",origin:"USA"},{name:"honda Accelerationord cvcc",miles_per_gallon:31.5,cylinders:4,displacement:98,horsepower:68,weight_in_lbs:2045,acceleration:18.5,year:"1977-01-01",origin:"Japan"},{name:"buick opel isuzu deluxe",miles_per_gallon:30,cylinders:4,displacement:111,horsepower:80,weight_in_lbs:2155,acceleration:14.8,year:"1977-01-01",origin:"USA"},{name:"renault 5 gtl",miles_per_gallon:36,cylinders:4,displacement:79,horsepower:58,weight_in_lbs:1825,acceleration:18.6,year:"1977-01-01",origin:"Europe"},{name:"plymouth arrow gs",miles_per_gallon:25.5,cylinders:4,displacement:122,horsepower:96,weight_in_lbs:2300,acceleration:15.5,year:"1977-01-01",origin:"USA"},{name:"datsun f-10 hatchback",miles_per_gallon:33.5,cylinders:4,displacement:85,horsepower:70,weight_in_lbs:1945,acceleration:16.8,year:"1977-01-01",origin:"Japan"},{name:"chevrolet caprice classic",miles_per_gallon:17.5,cylinders:8,displacement:305,horsepower:145,weight_in_lbs:3880,acceleration:12.5,year:"1977-01-01",origin:"USA"},{name:"oldsmobile cutlass supreme",miles_per_gallon:17,cylinders:8,displacement:260,horsepower:110,weight_in_lbs:4060,acceleration:19,year:"1977-01-01",origin:"USA"},{name:"dodge monaco brougham",miles_per_gallon:15.5,cylinders:8,displacement:318,horsepower:145,weight_in_lbs:4140,acceleration:13.7,year:"1977-01-01",origin:"USA"},{name:"mercury cougar brougham",miles_per_gallon:15,cylinders:8,displacement:302,horsepower:130,weight_in_lbs:4295,acceleration:14.9,year:"1977-01-01",origin:"USA"},{name:"chevrolet concours",miles_per_gallon:17.5,cylinders:6,displacement:250,horsepower:110,weight_in_lbs:3520,acceleration:16.4,year:"1977-01-01",origin:"USA"},{name:"buick skylark",miles_per_gallon:20.5,cylinders:6,displacement:231,horsepower:105,weight_in_lbs:3425,acceleration:16.9,year:"1977-01-01",origin:"USA"},{name:"plymouth volare custom",miles_per_gallon:19,cylinders:6,displacement:225,horsepower:100,weight_in_lbs:3630,acceleration:17.7,year:"1977-01-01",origin:"USA"},{name:"ford granada",miles_per_gallon:18.5,cylinders:6,displacement:250,horsepower:98,weight_in_lbs:3525,acceleration:19,year:"1977-01-01",origin:"USA"},{name:"pontiac grand prix lj",miles_per_gallon:16,cylinders:8,displacement:400,horsepower:180,weight_in_lbs:4220,acceleration:11.1,year:"1977-01-01",origin:"USA"},{name:"chevrolet monte carlo landau",miles_per_gallon:15.5,cylinders:8,displacement:350,horsepower:170,weight_in_lbs:4165,acceleration:11.4,year:"1977-01-01",origin:"USA"},{name:"chrysler cordoba",miles_per_gallon:15.5,cylinders:8,displacement:400,horsepower:190,weight_in_lbs:4325,acceleration:12.2,year:"1977-01-01",origin:"USA"},{name:"ford thunderbird",miles_per_gallon:16,cylinders:8,displacement:351,horsepower:149,weight_in_lbs:4335,acceleration:14.5,year:"1977-01-01",origin:"USA"},{name:"volkswagen rabbit custom",miles_per_gallon:29,cylinders:4,displacement:97,horsepower:78,weight_in_lbs:1940,acceleration:14.5,year:"1977-01-01",origin:"Europe"},{name:"pontiac sunbird coupe",miles_per_gallon:24.5,cylinders:4,displacement:151,horsepower:88,weight_in_lbs:2740,acceleration:16,year:"1977-01-01",origin:"USA"},{name:"toyota corolla liftback",miles_per_gallon:26,cylinders:4,displacement:97,horsepower:75,weight_in_lbs:2265,acceleration:18.2,year:"1977-01-01",origin:"Japan"},{name:"ford mustang ii 2+2",miles_per_gallon:25.5,cylinders:4,displacement:140,horsepower:89,weight_in_lbs:2755,acceleration:15.8,year:"1977-01-01",origin:"USA"},{name:"chevrolet chevette",miles_per_gallon:30.5,cylinders:4,displacement:98,horsepower:63,weight_in_lbs:2051,acceleration:17,year:"1977-01-01",origin:"USA"},{name:"dodge colt m/m",miles_per_gallon:33.5,cylinders:4,displacement:98,horsepower:83,weight_in_lbs:2075,acceleration:15.9,year:"1977-01-01",origin:"USA"},{name:"subaru dl",miles_per_gallon:30,cylinders:4,displacement:97,horsepower:67,weight_in_lbs:1985,acceleration:16.4,year:"1977-01-01",origin:"Japan"},{name:"volkswagen dasher",miles_per_gallon:30.5,cylinders:4,displacement:97,horsepower:78,weight_in_lbs:2190,acceleration:14.1,year:"1977-01-01",origin:"Europe"},{name:"datsun 810",miles_per_gallon:22,cylinders:6,displacement:146,horsepower:97,weight_in_lbs:2815,acceleration:14.5,year:"1977-01-01",origin:"Japan"},{name:"bmw 320i",miles_per_gallon:21.5,cylinders:4,displacement:121,horsepower:110,weight_in_lbs:2600,acceleration:12.8,year:"1977-01-01",origin:"Europe"},{name:"mazda rx-4",miles_per_gallon:21.5,cylinders:3,displacement:80,horsepower:110,weight_in_lbs:2720,acceleration:13.5,year:"1977-01-01",origin:"Japan"},{name:"volkswagen rabbit custom diesel",miles_per_gallon:43.1,cylinders:4,displacement:90,horsepower:48,weight_in_lbs:1985,acceleration:21.5,year:"1978-01-01",origin:"Europe"},{name:"ford fiesta",miles_per_gallon:36.1,cylinders:4,displacement:98,horsepower:66,weight_in_lbs:1800,acceleration:14.4,year:"1978-01-01",origin:"USA"},{name:"mazda glc deluxe",miles_per_gallon:32.8,cylinders:4,displacement:78,horsepower:52,weight_in_lbs:1985,acceleration:19.4,year:"1978-01-01",origin:"Japan"},{name:"datsun b210 gx",miles_per_gallon:39.4,cylinders:4,displacement:85,horsepower:70,weight_in_lbs:2070,acceleration:18.6,year:"1978-01-01",origin:"Japan"},{name:"honda civic cvcc",miles_per_gallon:36.1,cylinders:4,displacement:91,horsepower:60,weight_in_lbs:1800,acceleration:16.4,year:"1978-01-01",origin:"Japan"},{name:"oldsmobile cutlass salon brougham",miles_per_gallon:19.9,cylinders:8,displacement:260,horsepower:110,weight_in_lbs:3365,acceleration:15.5,year:"1978-01-01",origin:"USA"},{name:"dodge diplomat",miles_per_gallon:19.4,cylinders:8,displacement:318,horsepower:140,weight_in_lbs:3735,acceleration:13.2,year:"1978-01-01",origin:"USA"},{name:"mercury monarch ghia",miles_per_gallon:20.2,cylinders:8,displacement:302,horsepower:139,weight_in_lbs:3570,acceleration:12.8,year:"1978-01-01",origin:"USA"},{name:"pontiac phoenix lj",miles_per_gallon:19.2,cylinders:6,displacement:231,horsepower:105,weight_in_lbs:3535,acceleration:19.2,year:"1978-01-01",origin:"USA"},{name:"chevrolet malibu",miles_per_gallon:20.5,cylinders:6,displacement:200,horsepower:95,weight_in_lbs:3155,acceleration:18.2,year:"1978-01-01",origin:"USA"},{name:"ford fairmont (auto)",miles_per_gallon:20.2,cylinders:6,displacement:200,horsepower:85,weight_in_lbs:2965,acceleration:15.8,year:"1978-01-01",origin:"USA"},{name:"ford fairmont (man)",miles_per_gallon:25.1,cylinders:4,displacement:140,horsepower:88,weight_in_lbs:2720,acceleration:15.4,year:"1978-01-01",origin:"USA"},{name:"plymouth volare",miles_per_gallon:20.5,cylinders:6,displacement:225,horsepower:100,weight_in_lbs:3430,acceleration:17.2,year:"1978-01-01",origin:"USA"},{name:"amc concord",miles_per_gallon:19.4,cylinders:6,displacement:232,horsepower:90,weight_in_lbs:3210,acceleration:17.2,year:"1978-01-01",origin:"USA"},{name:"buick century special",miles_per_gallon:20.6,cylinders:6,displacement:231,horsepower:105,weight_in_lbs:3380,acceleration:15.8,year:"1978-01-01",origin:"USA"},{name:"mercury zephyr",miles_per_gallon:20.8,cylinders:6,displacement:200,horsepower:85,weight_in_lbs:3070,acceleration:16.7,year:"1978-01-01",origin:"USA"},{name:"dodge aspen",miles_per_gallon:18.6,cylinders:6,displacement:225,horsepower:110,weight_in_lbs:3620,acceleration:18.7,year:"1978-01-01",origin:"USA"},{name:"amc concord d/l",miles_per_gallon:18.1,cylinders:6,displacement:258,horsepower:120,weight_in_lbs:3410,acceleration:15.1,year:"1978-01-01",origin:"USA"},{name:"chevrolet monte carlo landau",miles_per_gallon:19.2,cylinders:8,displacement:305,horsepower:145,weight_in_lbs:3425,acceleration:13.2,year:"1978-01-01",origin:"USA"},{name:"buick regal sport coupe (turbo)",miles_per_gallon:17.7,cylinders:6,displacement:231,horsepower:165,weight_in_lbs:3445,acceleration:13.4,year:"1978-01-01",origin:"USA"},{name:"ford futura",miles_per_gallon:18.1,cylinders:8,displacement:302,horsepower:139,weight_in_lbs:3205,acceleration:11.2,year:"1978-01-01",origin:"USA"},{name:"dodge magnum xe",miles_per_gallon:17.5,cylinders:8,displacement:318,horsepower:140,weight_in_lbs:4080,acceleration:13.7,year:"1978-01-01",origin:"USA"},{name:"chevrolet chevette",miles_per_gallon:30,cylinders:4,displacement:98,horsepower:68,weight_in_lbs:2155,acceleration:16.5,year:"1978-01-01",origin:"USA"},{name:"toyota corona",miles_per_gallon:27.5,cylinders:4,displacement:134,horsepower:95,weight_in_lbs:2560,acceleration:14.2,year:"1978-01-01",origin:"Japan"},{name:"datsun 510",miles_per_gallon:27.2,cylinders:4,displacement:119,horsepower:97,weight_in_lbs:2300,acceleration:14.7,year:"1978-01-01",origin:"Japan"},{name:"dodge omni",miles_per_gallon:30.9,cylinders:4,displacement:105,horsepower:75,weight_in_lbs:2230,acceleration:14.5,year:"1978-01-01",origin:"USA"},{name:"toyota celica gt liftback",miles_per_gallon:21.1,cylinders:4,displacement:134,horsepower:95,weight_in_lbs:2515,acceleration:14.8,year:"1978-01-01",origin:"Japan"},{name:"plymouth sapporo",miles_per_gallon:23.2,cylinders:4,displacement:156,horsepower:105,weight_in_lbs:2745,acceleration:16.7,year:"1978-01-01",origin:"USA"},{name:"oldsmobile starfire sx",miles_per_gallon:23.8,cylinders:4,displacement:151,horsepower:85,weight_in_lbs:2855,acceleration:17.6,year:"1978-01-01",origin:"USA"},{name:"datsun 200-sx",miles_per_gallon:23.9,cylinders:4,displacement:119,horsepower:97,weight_in_lbs:2405,acceleration:14.9,year:"1978-01-01",origin:"Japan"},{name:"audi 5000",miles_per_gallon:20.3,cylinders:5,displacement:131,horsepower:103,weight_in_lbs:2830,acceleration:15.9,year:"1978-01-01",origin:"Europe"},{name:"volvo 264gl",miles_per_gallon:17,cylinders:6,displacement:163,horsepower:125,weight_in_lbs:3140,acceleration:13.6,year:"1978-01-01",origin:"Europe"},{name:"saab 99gle",miles_per_gallon:21.6,cylinders:4,displacement:121,horsepower:115,weight_in_lbs:2795,acceleration:15.7,year:"1978-01-01",origin:"Europe"},{name:"peugeot 604sl",miles_per_gallon:16.2,cylinders:6,displacement:163,horsepower:133,weight_in_lbs:3410,acceleration:15.8,year:"1978-01-01",origin:"Europe"},{name:"volkswagen scirocco",miles_per_gallon:31.5,cylinders:4,displacement:89,horsepower:71,weight_in_lbs:1990,acceleration:14.9,year:"1978-01-01",origin:"Europe"},{name:"honda Accelerationord lx",miles_per_gallon:29.5,cylinders:4,displacement:98,horsepower:68,weight_in_lbs:2135,acceleration:16.6,year:"1978-01-01",origin:"Japan"},{name:"pontiac lemans v6",miles_per_gallon:21.5,cylinders:6,displacement:231,horsepower:115,weight_in_lbs:3245,acceleration:15.4,year:"1979-01-01",origin:"USA"},{name:"mercury zephyr 6",miles_per_gallon:19.8,cylinders:6,displacement:200,horsepower:85,weight_in_lbs:2990,acceleration:18.2,year:"1979-01-01",origin:"USA"},{name:"ford fairmont 4",miles_per_gallon:22.3,cylinders:4,displacement:140,horsepower:88,weight_in_lbs:2890,acceleration:17.3,year:"1979-01-01",origin:"USA"},{name:"amc concord dl 6",miles_per_gallon:20.2,cylinders:6,displacement:232,horsepower:90,weight_in_lbs:3265,acceleration:18.2,year:"1979-01-01",origin:"USA"},{name:"dodge aspen 6",miles_per_gallon:20.6,cylinders:6,displacement:225,horsepower:110,weight_in_lbs:3360,acceleration:16.6,year:"1979-01-01",origin:"USA"},{name:"chevrolet caprice classic",miles_per_gallon:17,cylinders:8,displacement:305,horsepower:130,weight_in_lbs:3840,acceleration:15.4,year:"1979-01-01",origin:"USA"},{name:"ford ltd landau",miles_per_gallon:17.6,cylinders:8,displacement:302,horsepower:129,weight_in_lbs:3725,acceleration:13.4,year:"1979-01-01",origin:"USA"},{name:"mercury grand marquis",miles_per_gallon:16.5,cylinders:8,displacement:351,horsepower:138,weight_in_lbs:3955,acceleration:13.2,year:"1979-01-01",origin:"USA"},{name:"dodge st. regis",miles_per_gallon:18.2,cylinders:8,displacement:318,horsepower:135,weight_in_lbs:3830,acceleration:15.2,year:"1979-01-01",origin:"USA"},{name:"buick estate wagon (sw)",miles_per_gallon:16.9,cylinders:8,displacement:350,horsepower:155,weight_in_lbs:4360,acceleration:14.9,year:"1979-01-01",origin:"USA"},{name:"ford country squire (sw)",miles_per_gallon:15.5,cylinders:8,displacement:351,horsepower:142,weight_in_lbs:4054,acceleration:14.3,year:"1979-01-01",origin:"USA"},{name:"chevrolet malibu classic (sw)",miles_per_gallon:19.2,cylinders:8,displacement:267,horsepower:125,weight_in_lbs:3605,acceleration:15,year:"1979-01-01",origin:"USA"},{name:"chrysler lebaron town @ country (sw)",miles_per_gallon:18.5,cylinders:8,displacement:360,horsepower:150,weight_in_lbs:3940,acceleration:13,year:"1979-01-01",origin:"USA"},{name:"vw rabbit custom",miles_per_gallon:31.9,cylinders:4,displacement:89,horsepower:71,weight_in_lbs:1925,acceleration:14,year:"1979-01-01",origin:"Europe"},{name:"maxda glc deluxe",miles_per_gallon:34.1,cylinders:4,displacement:86,horsepower:65,weight_in_lbs:1975,acceleration:15.2,year:"1979-01-01",origin:"Japan"},{name:"dodge colt hatchback custom",miles_per_gallon:35.7,cylinders:4,displacement:98,horsepower:80,weight_in_lbs:1915,acceleration:14.4,year:"1979-01-01",origin:"USA"},{name:"amc spirit dl",miles_per_gallon:27.4,cylinders:4,displacement:121,horsepower:80,weight_in_lbs:2670,acceleration:15,year:"1979-01-01",origin:"USA"},{name:"mercedes benz 300d",miles_per_gallon:25.4,cylinders:5,displacement:183,horsepower:77,weight_in_lbs:3530,acceleration:20.1,year:"1979-01-01",origin:"Europe"},{name:"cadillac eldorado",miles_per_gallon:23,cylinders:8,displacement:350,horsepower:125,weight_in_lbs:3900,acceleration:17.4,year:"1979-01-01",origin:"USA"},{name:"peugeot 504",miles_per_gallon:27.2,cylinders:4,displacement:141,horsepower:71,weight_in_lbs:3190,acceleration:24.8,year:"1979-01-01",origin:"Europe"},{name:"oldsmobile cutlass salon brougham",miles_per_gallon:23.9,cylinders:8,displacement:260,horsepower:90,weight_in_lbs:3420,acceleration:22.2,year:"1979-01-01",origin:"USA"},{name:"plymouth horizon",miles_per_gallon:34.2,cylinders:4,displacement:105,horsepower:70,weight_in_lbs:2200,acceleration:13.2,year:"1979-01-01",origin:"USA"},{name:"plymouth horizon tc3",miles_per_gallon:34.5,cylinders:4,displacement:105,horsepower:70,weight_in_lbs:2150,acceleration:14.9,year:"1979-01-01",origin:"USA"},{name:"datsun 210",miles_per_gallon:31.8,cylinders:4,displacement:85,horsepower:65,weight_in_lbs:2020,acceleration:19.2,year:"1979-01-01",origin:"Japan"},{name:"fiat strada custom",miles_per_gallon:37.3,cylinders:4,displacement:91,horsepower:69,weight_in_lbs:2130,acceleration:14.7,year:"1979-01-01",origin:"Europe"},{name:"buick skylark limited",miles_per_gallon:28.4,cylinders:4,displacement:151,horsepower:90,weight_in_lbs:2670,acceleration:16,year:"1979-01-01",origin:"USA"},{name:"chevrolet citation",miles_per_gallon:28.8,cylinders:6,displacement:173,horsepower:115,weight_in_lbs:2595,acceleration:11.3,year:"1979-01-01",origin:"USA"},{name:"oldsmobile omega brougham",miles_per_gallon:26.8,cylinders:6,displacement:173,horsepower:115,weight_in_lbs:2700,acceleration:12.9,year:"1979-01-01",origin:"USA"},{name:"pontiac phoenix",miles_per_gallon:33.5,cylinders:4,displacement:151,horsepower:90,weight_in_lbs:2556,acceleration:13.2,year:"1979-01-01",origin:"USA"},{name:"vw rabbit",miles_per_gallon:41.5,cylinders:4,displacement:98,horsepower:76,weight_in_lbs:2144,acceleration:14.7,year:"1980-01-01",origin:"Europe"},{name:"toyota corolla tercel",miles_per_gallon:38.1,cylinders:4,displacement:89,horsepower:60,weight_in_lbs:1968,acceleration:18.8,year:"1980-01-01",origin:"Japan"},{name:"chevrolet chevette",miles_per_gallon:32.1,cylinders:4,displacement:98,horsepower:70,weight_in_lbs:2120,acceleration:15.5,year:"1980-01-01",origin:"USA"},{name:"datsun 310",miles_per_gallon:37.2,cylinders:4,displacement:86,horsepower:65,weight_in_lbs:2019,acceleration:16.4,year:"1980-01-01",origin:"Japan"},{name:"chevrolet citation",miles_per_gallon:28,cylinders:4,displacement:151,horsepower:90,weight_in_lbs:2678,acceleration:16.5,year:"1980-01-01",origin:"USA"},{name:"ford fairmont",miles_per_gallon:26.4,cylinders:4,displacement:140,horsepower:88,weight_in_lbs:2870,acceleration:18.1,year:"1980-01-01",origin:"USA"},{name:"amc concord",miles_per_gallon:24.3,cylinders:4,displacement:151,horsepower:90,weight_in_lbs:3003,acceleration:20.1,year:"1980-01-01",origin:"USA"},{name:"dodge aspen",miles_per_gallon:19.1,cylinders:6,displacement:225,horsepower:90,weight_in_lbs:3381,acceleration:18.7,year:"1980-01-01",origin:"USA"},{name:"audi 4000",miles_per_gallon:34.3,cylinders:4,displacement:97,horsepower:78,weight_in_lbs:2188,acceleration:15.8,year:"1980-01-01",origin:"Europe"},{name:"toyota corona liftback",miles_per_gallon:29.8,cylinders:4,displacement:134,horsepower:90,weight_in_lbs:2711,acceleration:15.5,year:"1980-01-01",origin:"Japan"},{name:"mazda 626",miles_per_gallon:31.3,cylinders:4,displacement:120,horsepower:75,weight_in_lbs:2542,acceleration:17.5,year:"1980-01-01",origin:"Japan"},{name:"datsun 510 hatchback",miles_per_gallon:37,cylinders:4,displacement:119,horsepower:92,weight_in_lbs:2434,acceleration:15,year:"1980-01-01",origin:"Japan"},{name:"toyota corolla",miles_per_gallon:32.2,cylinders:4,displacement:108,horsepower:75,weight_in_lbs:2265,acceleration:15.2,year:"1980-01-01",origin:"Japan"},{name:"mazda glc",miles_per_gallon:46.6,cylinders:4,displacement:86,horsepower:65,weight_in_lbs:2110,acceleration:17.9,year:"1980-01-01",origin:"Japan"},{name:"dodge colt",miles_per_gallon:27.9,cylinders:4,displacement:156,horsepower:105,weight_in_lbs:2800,acceleration:14.4,year:"1980-01-01",origin:"USA"},{name:"datsun 210",miles_per_gallon:40.8,cylinders:4,displacement:85,horsepower:65,weight_in_lbs:2110,acceleration:19.2,year:"1980-01-01",origin:"Japan"},{name:"vw rabbit c (diesel)",miles_per_gallon:44.3,cylinders:4,displacement:90,horsepower:48,weight_in_lbs:2085,acceleration:21.7,year:"1980-01-01",origin:"Europe"},{name:"vw dasher (diesel)",miles_per_gallon:43.4,cylinders:4,displacement:90,horsepower:48,weight_in_lbs:2335,acceleration:23.7,year:"1980-01-01",origin:"Europe"},{name:"audi 5000s (diesel)",miles_per_gallon:36.4,cylinders:5,displacement:121,horsepower:67,weight_in_lbs:2950,acceleration:19.9,year:"1980-01-01",origin:"Europe"},{name:"mercedes-benz 240d",miles_per_gallon:30,cylinders:4,displacement:146,horsepower:67,weight_in_lbs:3250,acceleration:21.8,year:"1980-01-01",origin:"Europe"},{name:"honda civic 1500 gl",miles_per_gallon:44.6,cylinders:4,displacement:91,horsepower:67,weight_in_lbs:1850,acceleration:13.8,year:"1980-01-01",origin:"Japan"},{name:"renault lecar deluxe",miles_per_gallon:40.9,cylinders:4,displacement:85,horsepower:null,weight_in_lbs:1835,acceleration:17.3,year:"1980-01-01",origin:"Europe"},{name:"subaru dl",miles_per_gallon:33.8,cylinders:4,displacement:97,horsepower:67,weight_in_lbs:2145,acceleration:18,year:"1980-01-01",origin:"Japan"},{name:"vokswagen rabbit",miles_per_gallon:29.8,cylinders:4,displacement:89,horsepower:62,weight_in_lbs:1845,acceleration:15.3,year:"1980-01-01",origin:"Europe"},{name:"datsun 280-zx",miles_per_gallon:32.7,cylinders:6,displacement:168,horsepower:132,weight_in_lbs:2910,acceleration:11.4,year:"1980-01-01",origin:"Japan"},{name:"mazda rx-7 gs",miles_per_gallon:23.7,cylinders:3,displacement:70,horsepower:100,weight_in_lbs:2420,acceleration:12.5,year:"1980-01-01",origin:"Japan"},{name:"triumph tr7 coupe",miles_per_gallon:35,cylinders:4,displacement:122,horsepower:88,weight_in_lbs:2500,acceleration:15.1,year:"1980-01-01",origin:"Europe"},{name:"ford mustang cobra",miles_per_gallon:23.6,cylinders:4,displacement:140,horsepower:null,weight_in_lbs:2905,acceleration:14.3,year:"1980-01-01",origin:"USA"},{name:"honda Accelerationord",miles_per_gallon:32.4,cylinders:4,displacement:107,horsepower:72,weight_in_lbs:2290,acceleration:17,year:"1980-01-01",origin:"Japan"},{name:"plymouth reliant",miles_per_gallon:27.2,cylinders:4,displacement:135,horsepower:84,weight_in_lbs:2490,acceleration:15.7,year:"1982-01-01",origin:"USA"},{name:"buick skylark",miles_per_gallon:26.6,cylinders:4,displacement:151,horsepower:84,weight_in_lbs:2635,acceleration:16.4,year:"1982-01-01",origin:"USA"},{name:"dodge aries wagon (sw)",miles_per_gallon:25.8,cylinders:4,displacement:156,horsepower:92,weight_in_lbs:2620,acceleration:14.4,year:"1982-01-01",origin:"USA"},{name:"chevrolet citation",miles_per_gallon:23.5,cylinders:6,displacement:173,horsepower:110,weight_in_lbs:2725,acceleration:12.6,year:"1982-01-01",origin:"USA"},{name:"plymouth reliant",miles_per_gallon:30,cylinders:4,displacement:135,horsepower:84,weight_in_lbs:2385,acceleration:12.9,year:"1982-01-01",origin:"USA"},{name:"toyota starlet",miles_per_gallon:39.1,cylinders:4,displacement:79,horsepower:58,weight_in_lbs:1755,acceleration:16.9,year:"1982-01-01",origin:"Japan"},{name:"plymouth champ",miles_per_gallon:39,cylinders:4,displacement:86,horsepower:64,weight_in_lbs:1875,acceleration:16.4,year:"1982-01-01",origin:"USA"},{name:"honda civic 1300",miles_per_gallon:35.1,cylinders:4,displacement:81,horsepower:60,weight_in_lbs:1760,acceleration:16.1,year:"1982-01-01",origin:"Japan"},{name:"subaru",miles_per_gallon:32.3,cylinders:4,displacement:97,horsepower:67,weight_in_lbs:2065,acceleration:17.8,year:"1982-01-01",origin:"Japan"},{name:"datsun 210",miles_per_gallon:37,cylinders:4,displacement:85,horsepower:65,weight_in_lbs:1975,acceleration:19.4,year:"1982-01-01",origin:"Japan"},{name:"toyota tercel",miles_per_gallon:37.7,cylinders:4,displacement:89,horsepower:62,weight_in_lbs:2050,acceleration:17.3,year:"1982-01-01",origin:"Japan"},{name:"mazda glc 4",miles_per_gallon:34.1,cylinders:4,displacement:91,horsepower:68,weight_in_lbs:1985,acceleration:16,year:"1982-01-01",origin:"Japan"},{name:"plymouth horizon 4",miles_per_gallon:34.7,cylinders:4,displacement:105,horsepower:63,weight_in_lbs:2215,acceleration:14.9,year:"1982-01-01",origin:"USA"},{name:"ford escort 4w",miles_per_gallon:34.4,cylinders:4,displacement:98,horsepower:65,weight_in_lbs:2045,acceleration:16.2,year:"1982-01-01",origin:"USA"},{name:"ford escort 2h",miles_per_gallon:29.9,cylinders:4,displacement:98,horsepower:65,weight_in_lbs:2380,acceleration:20.7,year:"1982-01-01",origin:"USA"},{name:"volkswagen jetta",miles_per_gallon:33,cylinders:4,displacement:105,horsepower:74,weight_in_lbs:2190,acceleration:14.2,year:"1982-01-01",origin:"Europe"},{name:"renault 18i",miles_per_gallon:34.5,cylinders:4,displacement:100,horsepower:null,weight_in_lbs:2320,acceleration:15.8,year:"1982-01-01",origin:"Europe"},{name:"honda prelude",miles_per_gallon:33.7,cylinders:4,displacement:107,horsepower:75,weight_in_lbs:2210,acceleration:14.4,year:"1982-01-01",origin:"Japan"},{name:"toyota corolla",miles_per_gallon:32.4,cylinders:4,displacement:108,horsepower:75,weight_in_lbs:2350,acceleration:16.8,year:"1982-01-01",origin:"Japan"},{name:"datsun 200sx",miles_per_gallon:32.9,cylinders:4,displacement:119,horsepower:100,weight_in_lbs:2615,acceleration:14.8,year:"1982-01-01",origin:"Japan"},{name:"mazda 626",miles_per_gallon:31.6,cylinders:4,displacement:120,horsepower:74,weight_in_lbs:2635,acceleration:18.3,year:"1982-01-01",origin:"Japan"},{name:"peugeot 505s turbo diesel",miles_per_gallon:28.1,cylinders:4,displacement:141,horsepower:80,weight_in_lbs:3230,acceleration:20.4,year:"1982-01-01",origin:"Europe"},{name:"saab 900s",miles_per_gallon:null,cylinders:4,displacement:121,horsepower:110,weight_in_lbs:2800,acceleration:15.4,year:"1982-01-01",origin:"Europe"},{name:"volvo diesel",miles_per_gallon:30.7,cylinders:6,displacement:145,horsepower:76,weight_in_lbs:3160,acceleration:19.6,year:"1982-01-01",origin:"Europe"},{name:"toyota cressida",miles_per_gallon:25.4,cylinders:6,displacement:168,horsepower:116,weight_in_lbs:2900,acceleration:12.6,year:"1982-01-01",origin:"Japan"},{name:"datsun 810 maxima",miles_per_gallon:24.2,cylinders:6,displacement:146,horsepower:120,weight_in_lbs:2930,acceleration:13.8,year:"1982-01-01",origin:"Japan"},{name:"buick century",miles_per_gallon:22.4,cylinders:6,displacement:231,horsepower:110,weight_in_lbs:3415,acceleration:15.8,year:"1982-01-01",origin:"USA"},{name:"oldsmobile cutlass ls",miles_per_gallon:26.6,cylinders:8,displacement:350,horsepower:105,weight_in_lbs:3725,acceleration:19,year:"1982-01-01",origin:"USA"},{name:"ford granada gl",miles_per_gallon:20.2,cylinders:6,displacement:200,horsepower:88,weight_in_lbs:3060,acceleration:17.1,year:"1982-01-01",origin:"USA"},{name:"chrysler lebaron salon",miles_per_gallon:17.6,cylinders:6,displacement:225,horsepower:85,weight_in_lbs:3465,acceleration:16.6,year:"1982-01-01",origin:"USA"},{name:"chevrolet cavalier",miles_per_gallon:28,cylinders:4,displacement:112,horsepower:88,weight_in_lbs:2605,acceleration:19.6,year:"1982-01-01",origin:"USA"},{name:"chevrolet cavalier wagon",miles_per_gallon:27,cylinders:4,displacement:112,horsepower:88,weight_in_lbs:2640,acceleration:18.6,year:"1982-01-01",origin:"USA"},{name:"chevrolet cavalier 2-door",miles_per_gallon:34,cylinders:4,displacement:112,horsepower:88,weight_in_lbs:2395,acceleration:18,year:"1982-01-01",origin:"USA"},{name:"pontiac j2000 se hatchback",miles_per_gallon:31,cylinders:4,displacement:112,horsepower:85,weight_in_lbs:2575,acceleration:16.2,year:"1982-01-01",origin:"USA"},{name:"dodge aries se",miles_per_gallon:29,cylinders:4,displacement:135,horsepower:84,weight_in_lbs:2525,acceleration:16,year:"1982-01-01",origin:"USA"},{name:"pontiac phoenix",miles_per_gallon:27,cylinders:4,displacement:151,horsepower:90,weight_in_lbs:2735,acceleration:18,year:"1982-01-01",origin:"USA"},{name:"ford fairmont futura",miles_per_gallon:24,cylinders:4,displacement:140,horsepower:92,weight_in_lbs:2865,acceleration:16.4,year:"1982-01-01",origin:"USA"},{name:"amc concord dl",miles_per_gallon:23,cylinders:4,displacement:151,horsepower:null,weight_in_lbs:3035,acceleration:20.5,year:"1982-01-01",origin:"USA"},{name:"volkswagen rabbit l",miles_per_gallon:36,cylinders:4,displacement:105,horsepower:74,weight_in_lbs:1980,acceleration:15.3,year:"1982-01-01",origin:"Europe"},{name:"mazda glc custom l",miles_per_gallon:37,cylinders:4,displacement:91,horsepower:68,weight_in_lbs:2025,acceleration:18.2,year:"1982-01-01",origin:"Japan"},{name:"mazda glc custom",miles_per_gallon:31,cylinders:4,displacement:91,horsepower:68,weight_in_lbs:1970,acceleration:17.6,year:"1982-01-01",origin:"Japan"},{name:"plymouth horizon miser",miles_per_gallon:38,cylinders:4,displacement:105,horsepower:63,weight_in_lbs:2125,acceleration:14.7,year:"1982-01-01",origin:"USA"},{name:"mercury lynx l",miles_per_gallon:36,cylinders:4,displacement:98,horsepower:70,weight_in_lbs:2125,acceleration:17.3,year:"1982-01-01",origin:"USA"},{name:"nissan stanza xe",miles_per_gallon:36,cylinders:4,displacement:120,horsepower:88,weight_in_lbs:2160,acceleration:14.5,year:"1982-01-01",origin:"Japan"},{name:"honda Accelerationord",miles_per_gallon:36,cylinders:4,displacement:107,horsepower:75,weight_in_lbs:2205,acceleration:14.5,year:"1982-01-01",origin:"Japan"},{name:"toyota corolla",miles_per_gallon:34,cylinders:4,displacement:108,horsepower:70,weight_in_lbs:2245,acceleration:16.9,year:"1982-01-01",origin:"Japan"},{name:"honda civic",miles_per_gallon:38,cylinders:4,displacement:91,horsepower:67,weight_in_lbs:1965,acceleration:15,year:"1982-01-01",origin:"Japan"},{name:"honda civic (auto)",miles_per_gallon:32,cylinders:4,displacement:91,horsepower:67,weight_in_lbs:1965,acceleration:15.7,year:"1982-01-01",origin:"Japan"},{name:"datsun 310 gx",miles_per_gallon:38,cylinders:4,displacement:91,horsepower:67,weight_in_lbs:1995,acceleration:16.2,year:"1982-01-01",origin:"Japan"},{name:"buick century limited",miles_per_gallon:25,cylinders:6,displacement:181,horsepower:110,weight_in_lbs:2945,acceleration:16.4,year:"1982-01-01",origin:"USA"},{name:"oldsmobile cutlass ciera (diesel)",miles_per_gallon:38,cylinders:6,displacement:262,horsepower:85,weight_in_lbs:3015,acceleration:17,year:"1982-01-01",origin:"USA"},{name:"chrysler lebaron medallion",miles_per_gallon:26,cylinders:4,displacement:156,horsepower:92,weight_in_lbs:2585,acceleration:14.5,year:"1982-01-01",origin:"USA"},{name:"ford granada l",miles_per_gallon:22,cylinders:6,displacement:232,horsepower:112,weight_in_lbs:2835,acceleration:14.7,year:"1982-01-01",origin:"USA"},{name:"toyota celica gt",miles_per_gallon:32,cylinders:4,displacement:144,horsepower:96,weight_in_lbs:2665,acceleration:13.9,year:"1982-01-01",origin:"Japan"},{name:"dodge charger 2.2",miles_per_gallon:36,cylinders:4,displacement:135,horsepower:84,weight_in_lbs:2370,acceleration:13,year:"1982-01-01",origin:"USA"},{name:"chevrolet camaro",miles_per_gallon:27,cylinders:4,displacement:151,horsepower:90,weight_in_lbs:2950,acceleration:17.3,year:"1982-01-01",origin:"USA"},{name:"ford mustang gl",miles_per_gallon:27,cylinders:4,displacement:140,horsepower:86,weight_in_lbs:2790,acceleration:15.6,year:"1982-01-01",origin:"USA"},{name:"vw pickup",miles_per_gallon:44,cylinders:4,displacement:97,horsepower:52,weight_in_lbs:2130,acceleration:24.6,year:"1982-01-01",origin:"Europe"},{name:"dodge rampage",miles_per_gallon:32,cylinders:4,displacement:135,horsepower:84,weight_in_lbs:2295,acceleration:11.6,year:"1982-01-01",origin:"USA"},{name:"ford ranger",miles_per_gallon:28,cylinders:4,displacement:120,horsepower:79,weight_in_lbs:2625,acceleration:18.6,year:"1982-01-01",origin:"USA"},{name:"chevy s-10",miles_per_gallon:31,cylinders:4,displacement:119,horsepower:82,weight_in_lbs:2720,acceleration:19.4,year:"1982-01-01",origin:"USA"}]},function(e,t,n){"use strict";n.r(t);var i={};n.r(i),n.d(i,"reloadPairsBegin",function(){return C}),n.d(i,"solvePairsBegin",function(){return F}),n.d(i,"solveChartsBegin",function(){return j});var r={};n.r(r),n.d(r,"toggleFocusChart",function(){return I}),n.d(r,"reloadChartsThunk",function(){return M}),n.d(r,"solveChartsThunk",function(){return z}),n.d(r,"setCharts",function(){return N}),n.d(r,"updateCharts",function(){return U}),n.d(r,"resetCharts",function(){return R}),n.d(r,"addEmptyChart",function(){return L}),n.d(r,"setChartFilters",function(){return q}),n.d(r,"addChartFilters",function(){return B}),n.d(r,"removeChartFilters",function(){return V}),n.d(r,"setChartSorts",function(){return W});var o={};n.r(o),n.d(o,"reloadPairsThunk",function(){return Y}),n.d(o,"solvePairsThunk",function(){return H}),n.d(o,"setPairs",function(){return J}),n.d(o,"updatePairs",function(){return G}),n.d(o,"resetPairs",function(){return X}),n.d(o,"toggleFocusPair",function(){return Q}),n.d(o,"setPairFilters",function(){return K}),n.d(o,"addPairFilters",function(){return Z}),n.d(o,"removePairFilters",function(){return ee}),n.d(o,"toggleHoverPair",function(){return te}),n.d(o,"addEmptyPair",function(){return ne}),n.d(o,"toggleFocusPairItem",function(){return ie});var a=n(2),s=n(0);Object(s.createAction)("app/DOWNLOAD_FILES",e=>()=>e()),Object(s.createAction)("app/SAVE",e=>()=>e()),Object(s.createAction)("app/ADD_CHECKPOINT",e=>()=>e()),Object(s.createAction)("app/UPDATE_STATUS",e=>()=>e()),Object(s.createAction)("app/TOGGLE_SHOW_EDITOR",e=>t=>e(t)),Object(s.createAction)("app/TOGGLE_SHOW_COLLECTION",e=>t=>e(t)),Object(s.createAction)("app/SET_COLLECTION_PANE",e=>t=>e(t)),Object(s.createAction)("app/SET_VIEW_PANE",e=>(t,n)=>e({position:t,view:n}));var l=n(1),c=n.n(l);class d{static getTypes(){return[d.SOFT_DEFINE,d.SOFT_WEIGHTS,d.SOFT_ASSIGN,d.HARD_DEFINE,d.HARD_INTEGRITY,d.DEFINE,d.OPTIMIZE,d.OUTPUT,d.TOPK_LUA]}static toStringDict(e){return d.getTypes().reduce((t,n)=>{const i=d.getProgramFromType(e,n);return t[n]=i,t},{})}static getProgramFromType(e,t){switch(t){case d.SOFT_DEFINE:return e.softDefine;case d.SOFT_WEIGHTS:return e.softWeights;case d.SOFT_ASSIGN:return e.softAssign;case d.HARD_DEFINE:return e.hardDefine;case d.HARD_INTEGRITY:return e.hardIntegrity;case d.DEFINE:return e.define;case d.OPTIMIZE:return e.optimize;case d.OUTPUT:return e.output;case d.TOPK_LUA:return e.topkLua}}static setProgramWithType(e,t,n){const i=c.a.clone(e);switch(t){case d.SOFT_DEFINE:i.softDefine=n;break;case d.SOFT_WEIGHTS:i.softWeights=n;break;case d.SOFT_ASSIGN:i.softAssign=n;break;case d.HARD_DEFINE:i.hardDefine=n;break;case d.HARD_INTEGRITY:i.hardIntegrity=n;break;case d.DEFINE:i.define=n;break;case d.OPTIMIZE:i.optimize=n;break;case d.OUTPUT:i.output=n;break;case d.TOPK_LUA:i.topkLua=n}return i}}d.SOFT_DEFINE="SOFT",d.SOFT_WEIGHTS="WEIGHTS",d.SOFT_ASSIGN="ASSIGN_WEIGHTS",d.HARD_DEFINE="HARD",d.HARD_INTEGRITY="HARD_INTEGRITY",d.DEFINE="DEFINE",d.OPTIMIZE="OPTIMIZE",d.OUTPUT="OUTPUT",d.TOPK_LUA="TOPK_LUA";var u=n(26),f=n.n(u),h=n(27);const p=new f.a({schemaId:"auto"});p.addMetaSchema(n(74)),p.addMetaSchema(n(75));const m=p.compile(h);class g{static getEmptySpec(){return{vlSpec:{mark:null,data:{url:"cars.json"}}}}static isVlSpecValid(e){return!!m(e)}static dracoSolve(e,t,n,i){const r=c.a.clone(e),o=g.toAspString(e,n),a=t.solve(o,i);return r.sol=y.fromSolutionSet(a),r}static toAsp(e,t){const n=Object(a.vl2asp)(e.vlSpec);return t?Object(a.lockasp)(n):n}static toAspString(e,t){return function(e){return e.join("\n")}(g.toAsp(e,t))}static getCost(e,t){const n=e.sol;if(!c.a.isUndefined(n))return y.isUnsat(n)?1/0:Object.keys(n.violations).reduce((e,i)=>{const r=n.violations[i].length,o=t[i].weight;return c.a.isUndefined(o)?1/0:e+o*r},0)}}class y{static isUnsat(e){return e===y.UNSAT}static isDefined(e){return!c.a.isUndefined(e)&&!y.isUnsat(e)}static fromSolutionSet(e){if(null===e)return y.UNSAT;return{violations:e.models[0].violations.reduce((e,t)=>(e.hasOwnProperty(t.name)||(e[t.name]=[]),e[t.name].push(t),e),{}),facts:e.models[0].facts}}static toFactString(e){return y.isDefined(e)?e.facts.join(".\n"):""}}y.UNSAT="unsat";class _{static getEmptyPair(e){return{id:e,left:g.getEmptySpec(),right:g.getEmptySpec(),comparator:w.LESS_THAN,type:v.PAIR}}static getPairCardItems(e,t){return[e.left,e.right].map(e=>{return{cost:g.getCost(e,t),vlSpec:e.vlSpec}})}static getEval(e,t){const n=g.getCost(e.left,t),i=g.getCost(e.right,t);if(!c.a.isUndefined(n))return n===1/0?b.UNSAT:e.comparator===w.LESS_THAN?b.fromBoolean(n<i):e.comparator===w.LESS_THAN_OR_EQUAL?b.fromBoolean(n<=i):b.fromBoolean(n===i)}static getCost(e,t,n){switch(n){case _.LEFT:return g.getCost(e.left,t);case _.RIGHT:return g.getCost(e.right,t)}}}_.LEFT="left",_.RIGHT="right";class v{}v.CHART="chart",v.PAIR="pair",v.isChart=function(e){return e.type===v.CHART},v.isPair=function(e){return e.type===v.PAIR},v.getEval=function(e,t){return v.isChart(e)?x.getEval(e,t):v.isPair(e)?_.getEval(e,t):void 0},v.getViolationMap=function(e){if(v.isChart(e))return y.isDefined(e.sol)?e.sol.violations:{};if(v.isPair(e)){const t={};return y.isDefined(e.left.sol)&&c.a.extend(t,e.left.sol.violations),y.isDefined(e.right.sol)&&c.a.extend(t,e.right.sol.violations),t}};class b{static fromBoolean(e){switch(e){case!0:return b.PASS;case!1:return b.FAIL;default:return b.UNSAT}}static toScore(e){switch(e){case b.PASS:return 1;case void 0:case b.FAIL:case b.UNSAT:return 0}}static toColor(e){switch(e){case void 0:return b.WHITE;case b.PASS:return b.GREEN;case b.FAIL:return b.RED;case b.UNSAT:return b.GREY;default:return b.WHITE}}}b.PASS="pass",b.FAIL="fail",b.UNSAT="unsat",b.BLUE="#75a8f9",b.RED="#f97486",b.WHITE="#fff",b.GREEN="#aff7b3",b.ORANGE="#ffcd51",b.LIGHTBLUE="#eaf4ff",b.GREY="#d8d8d8";class w{}w.LESS_THAN="<",w.LESS_THAN_OR_EQUAL="<=",w.EQUAL="=";class x{}x.getEval=function(e,t){if(c.a.isUndefined(e.sol))return;const n=g.getCost(e,t);switch(e.comparator){case w.EQUAL:return b.fromBoolean(n===1/0);case w.LESS_THAN:return b.fromBoolean(n<1/0);case w.LESS_THAN_OR_EQUAL:return b.fromBoolean(n<=1/0);default:return b.UNSAT}},x.getCost=function(e,t){if(!c.a.isUndefined(e.sol))return g.getCost(e,t)},x.getEmptyChart=function(e){return Object.assign({id:e},g.getEmptySpec(),{type:v.CHART,comparator:w.LESS_THAN})};class E{static getObjectsFromString(e){return e.split(/\s+/).reduce((e,t)=>{switch(t){case"is:failing":e.push({type:E.BY_FAIL_TYPE});break;case"is:passing":e.push({type:E.BY_PASS_TYPE});break;case"is:unsat":e.push({type:E.BY_UNSAT_TYPE})}return e},[])}static fromObj(e){switch(e.type){case E.BY_PASS_TYPE:return E.byPass;case E.BY_FAIL_TYPE:return E.byFail;case E.BY_UNSAT_TYPE:return E.byUnsat;case E.BY_CONSTRAINTS:return E.byConstraints}}static byPass(e,t){return k(e,b.PASS,t)}static byFail(e,t){return k(e,b.FAIL,t)}static byUnsat(e,t){return k(e,b.UNSAT,t)}static byConstraints(e,t){const n=v.getViolationMap(e);return t.constraintList.every(e=>n.hasOwnProperty(e))}}function k(e,t,n){if(c.a.isUndefined(n)||c.a.isUndefined(n.constraintMap))throw new Error("Filter requires a constraintMap in opt.");return v.isChart(e)?x.getEval(e,n.constraintMap)===t:v.isPair(e)?_.getEval(e,n.constraintMap)===t:void 0}E.BY_PASS_TYPE="bypass",E.BY_FAIL_TYPE="byfail",E.BY_UNSAT_TYPE="byunsat",E.BY_CONSTRAINTS="byconstraints";class S{static getObjectsFromString(e){return e.split(/\s+/).reduce((e,t)=>{switch(t){case"cost:asc":e.push({type:S.BY_COST_ASC});break;case"cost:desc":e.push({type:S.BY_COST_DESC});break;case"id:asc":e.push({type:S.BY_ID_ASC});break;case"id:desc":e.push({type:S.BY_ID_DESC})}return e},[])}}function T(e,t){if(c.a.isUndefined(t)||c.a.isUndefined(t.constraintMap))throw new Error("Cost sorting requires constraintMap in opt.");return v.isChart(e)?x.getCost(e,t.constraintMap):v.isPair(e)?_.getCost(e,t.constraintMap,_.LEFT):void 0}function D(e,t){return v.isChart(e)?e.id:v.isPair(e)?e.id:void 0}S.BY_ID_ASC="byidasc",S.byIdAsc=function(e,t){return+D(e,t)},S.BY_ID_DESC="byiddesc",S.byIdDesc=function(e,t){return-+D(e,t)},S.BY_COST_ASC="bycostasc",S.byCostAsc=function(e,t){return T(e,t)},S.BY_COST_DESC="bycostdesc",S.byCostDesc=function(e,t){return-T(e,t)},S.fromObj=function(e){switch(e.type){case S.BY_ID_ASC:return S.byIdAsc;case S.BY_ID_DESC:return S.byIdDesc;case S.BY_COST_ASC:return S.byCostAsc;case S.BY_COST_DESC:return S.byCostDesc}};class A{static isCheckpoint(e){return e.type===A.CHECKPOINT}static isCostEdit(e){return e.type===A.COST}static isAspEdit(e){return e.type===A.ASP}static isDescriptionEdit(e){return e.type===A.DESCRIPTION}}A.COST="cost",A.CHECKPOINT="checkpoint",A.ASP="asp",A.DESCRIPTION="description";class P{static toAspPrograms(e){const t=P.toConstraintSet(e),n=Object(a.json2constraints)(t.soft),i=Object(a.json2constraints)(t.hard);return{softDefine:n.definitions,softWeights:n.weights,softAssign:n.assigns,hardDefine:i.definitions}}static fromAspPrograms(e){const t=d.getProgramFromType(e,d.SOFT_DEFINE),n=d.getProgramFromType(e,d.SOFT_WEIGHTS),i=Object(a.constraints2json)(t,n),r=d.getProgramFromType(e,d.HARD_DEFINE),o={soft:i,hard:Object(a.constraints2json)(r)};return P.fromConstraintSet(o)}static fromConstraintSet(e){const t=c.a.flatMap([e.hard,e.soft],e=>e.map(e=>e));return P.fromConstraintList(t)}static toConstraintSet(e){const t=P.toConstraintList(e);return{soft:t.filter(e=>"soft"===e.type),hard:t.filter(e=>"hard"===e.type)}}}P.toConstraintList=((e,t)=>{let n=Object.keys(e).map(t=>e[t]);return c.a.isUndefined(t)||(n=c.a.sortBy(n,t)),n}),P.fromConstraintList=(e=>{return e.reduce((e,t)=>(e[t.name]=t,e),{})});class O{}function $(e,t,n){const i=t.split(".");let r=e;for(let t=0;t<i.length-1;t+=1)r=e[i[t]];r[i[i.length-1]]=n}O.fromCharts=(e=>{const t={};for(const n of Object.keys(e)){const i=e[n];t[n]=i}return t}),O.toChartDictionary=((e,t)=>{const n=c.a.clone(t);for(const t of Object.keys(e)){const i=e[t];n[t]=Object.assign({},n[t],i)}return n}),O.fromPairsDictionary=(e=>{const t={};for(const n of Object.keys(e)){const i=e[n];t[`${n}.left`]=i.left,t[`${n}.right`]=i.right}return t}),O.toPairsDictionary=((e,t)=>{const n=c.a.clone(t);for(const t of Object.keys(e)){$(n,t,e[t])}return n}),O.fromPairs=(e=>{const t={};for(const n of e)t[`${n.id}.left`]=n.left,t[`${n.id}.right`]=n.right;return t});const C=Object(s.createAction)("draco-worker/RELOAD_PAIRS_BEGIN",e=>(t,n,i)=>{const r=O.fromPairsDictionary(t);return e({specDict:r,runId:n,aspProgramStrings:i},{WebWorker:!0})}),F=Object(s.createAction)("draco-worker/SOLVE_PAIRS_BEGIN",e=>(t,n,i)=>{const r=O.fromPairs(t);return e({specDict:r,runId:n,aspProgramStrings:i},{WebWorker:!0})}),j=Object(s.createAction)("draco-worker/SOLVE_CHARTS_BEGIN",e=>(t,n,i)=>{const r=O.fromCharts(t);return e({specDict:r,runId:n,aspProgramStrings:i},{WebWorker:!0})}),I=Object(s.createAction)("chart-collection/TOGGLE_FOCUS_CHART",e=>(t,n)=>e({chartId:t,on:n})),M=e=>(t,n)=>{const i=n(),r=i.chartCollection.charts,o=d.toStringDict(i.textEditor.asp);t(j(r,e,o))},z=(e,t)=>(n,i)=>{const r=i(),o=d.toStringDict(r.textEditor.asp);n(j(e,t,o))},N=Object(s.createAction)("chart-collection/SET_CHARTS",e=>(t,n)=>e({specDict:t,runId:n})),U=Object(s.createAction)("chart-collection/UPDATE_CHARTS",e=>t=>e(t)),R=Object(s.createAction)("chart-collection/RESET_CHARTS",e=>t=>e(t)),L=Object(s.createAction)("chart-collection/ADD_EMPTY_CHART",e=>()=>e()),q=Object(s.createAction)("chart-collection/SET_CHART_FILTERS",e=>t=>e(t)),B=Object(s.createAction)("chart-collection/ADD_CHART_FILTERS",e=>t=>e(t)),V=Object(s.createAction)("chart-collection/REMOVE_CHART_FILTERS",e=>t=>e(t)),W=Object(s.createAction)("chart-collection/SET_CHART_SORTS",e=>t=>e(t)),Y=(Object(s.createAction)("constraint-tuner/SET_ASP_CLAUSE",e=>(t,n)=>e({code:t,id:n})),Object(s.createAction)("constraint-tuner/ADD_ASP_CLAUSE",e=>()=>e()),Object(s.createAction)("constraint-tuner/TOGGLE_FOCUS_CONSTRAINT",e=>(t,n)=>e({id:t,on:n})),Object(s.createAction)("draco/SET_CONSTRAINT_MAP",e=>t=>e(t)),Object(s.createAction)("draco/ADD_CONSTRAINT_EDIT",e=>t=>e(t)),Object(s.createAction)("draco/REVERT_TO_EDIT",e=>t=>e(t)),Object(s.createAction)("draco/DELETE_CURRENT_EDIT",e=>()=>e()),Object(s.createAction)("draco/MOVE_EDIT_INDEX",e=>t=>e(t)),e=>(t,n)=>{const i=n(),r=i.pairCollection.pairs,o=d.toStringDict(i.textEditor.asp);t(C(r,e,o))}),H=(e,t)=>(n,i)=>{const r=i(),o=d.toStringDict(r.textEditor.asp);n(F(e,t,o))},J=Object(s.createAction)("pairs-collection/SET_PAIRS",e=>(t,n)=>e({specDict:t,runId:n})),G=Object(s.createAction)("pair-collection/UPDATE_PAIRS",e=>t=>e(t)),X=Object(s.createAction)("pairs-collection/RESET_PAIRS",e=>t=>e(t)),Q=Object(s.createAction)("pair-collection/TOGGLE_FOCUS_PAIR",e=>(t,n)=>e({id:t,on:n})),K=Object(s.createAction)("pair-collection/SET_PAIR_FILTERS",e=>t=>e(t)),Z=Object(s.createAction)("pair-collection/ADD_PAIR_FILTERS",e=>t=>e(t)),ee=Object(s.createAction)("chart-collection/REMOVE_PAIR_FILTERS",e=>t=>e(t)),te=Object(s.createAction)("pair-collection/TOGGLE_HOVER_PAIR",e=>(t,n)=>e({id:t,on:n})),ne=Object(s.createAction)("pair-collection/ADD_EMPTY_PAIR",e=>()=>e()),ie=Object(s.createAction)("pair-collection/TOGGLE_FOCUS_PAIR_ITEM",e=>(t,n,i)=>e({pairId:t,position:n,on:i})),re=(Object(s.createAction)("text-editor/SET_VEGALITE_CODE",e=>t=>e(t)),Object(s.createAction)("text-editor/SET_VEGALITE_ASP_FACTS_CODE",e=>t=>e(t)),Object(s.createAction)("text-editor/SET_ASP_CODE",e=>(t,n)=>e({code:t,programType:n})),Object(s.createAction)("text-editor/SET_EDITOR_TYPE",e=>t=>e(t)),Object(s.createAction)("text-editor/SET_ASP_EDITOR_PROGRAM",e=>t=>e(t)),self),oe=n(76),ae={models:7,relaxHard:!0},se=new a.default("static",e=>{});function le(e){switch(e.type){case Object(s.getType)(i.reloadPairsBegin):case Object(s.getType)(i.solvePairsBegin):{const t=ce(e.payload.specDict,e.payload.aspProgramStrings,!0);re.postMessage({type:Object(s.getType)(o.setPairs),payload:{specDict:t,runId:e.payload.runId}})}break;case Object(s.getType)(i.solveChartsBegin):{const t=ce(e.payload.specDict,e.payload.aspProgramStrings,!0);re.postMessage({type:Object(s.getType)(r.setCharts),payload:{specDict:t,runId:e.payload.runId}})}}}function ce(e,t,n){const i={};se.updateAsp(t);for(const t of Object.keys(e)){const r=e[t],o=Object.assign({},ae,{models:1,weights:[{name:"max_extra_encs",value:0}]}),a=g.dracoSolve(r,se,n,o);console.debug(a),i[t]=a}return i}re.onmessage=(({data:e})=>{se.initialized?le(e):(se.init().then(()=>le(e)),se.prepareData(oe))})},function(e,t,n){"use strict";n.r(t);var i=function(e){return e},r=function(e){if(null==e)return i;var t,n,r=e.scale[0],o=e.scale[1],a=e.translate[0],s=e.translate[1];return function(e,i){i||(t=n=0);var l=2,c=e.length,d=new Array(c);for(d[0]=(t+=e[0])*r+a,d[1]=(n+=e[1])*o+s;l<c;)d[l]=e[l],++l;return d}},o=function(e){var t,n=r(e.transform),i=1/0,o=i,a=-i,s=-i;function l(e){(e=n(e))[0]<i&&(i=e[0]),e[0]>a&&(a=e[0]),e[1]<o&&(o=e[1]),e[1]>s&&(s=e[1])}function c(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(c);break;case"Point":l(e.coordinates);break;case"MultiPoint":e.coordinates.forEach(l)}}for(t in e.arcs.forEach(function(e){for(var t,r=-1,l=e.length;++r<l;)(t=n(e[r],r))[0]<i&&(i=t[0]),t[0]>a&&(a=t[0]),t[1]<o&&(o=t[1]),t[1]>s&&(s=t[1])}),e.objects)c(e.objects[t]);return[i,o,a,s]},a=function(e,t){for(var n,i=e.length,r=i-t;r<--i;)n=e[r],e[r++]=e[i],e[i]=n},s=function(e,t){return"GeometryCollection"===t.type?{type:"FeatureCollection",features:t.geometries.map(function(t){return l(e,t)})}:l(e,t)};function l(e,t){var n=t.id,i=t.bbox,r=null==t.properties?{}:t.properties,o=c(e,t);return null==n&&null==i?{type:"Feature",properties:r,geometry:o}:null==i?{type:"Feature",id:n,properties:r,geometry:o}:{type:"Feature",id:n,bbox:i,properties:r,geometry:o}}function c(e,t){var n=r(e.transform),i=e.arcs;function o(e,t){t.length&&t.pop();for(var r=i[e<0?~e:e],o=0,s=r.length;o<s;++o)t.push(n(r[o],o));e<0&&a(t,s)}function s(e){return n(e)}function l(e){for(var t=[],n=0,i=e.length;n<i;++n)o(e[n],t);return t.length<2&&t.push(t[0]),t}function c(e){for(var t=l(e);t.length<4;)t.push(t[0]);return t}function d(e){return e.map(c)}return function e(t){var n,i=t.type;switch(i){case"GeometryCollection":return{type:i,geometries:t.geometries.map(e)};case"Point":n=s(t.coordinates);break;case"MultiPoint":n=t.coordinates.map(s);break;case"LineString":n=l(t.arcs);break;case"MultiLineString":n=t.arcs.map(l);break;case"Polygon":n=d(t.arcs);break;case"MultiPolygon":n=t.arcs.map(d);break;default:return null}return{type:i,coordinates:n}}(t)}var d=function(e,t){var n={},i={},r={},o=[],a=-1;function s(e,t){for(var i in e){var r=e[i];delete t[r.start],delete r.start,delete r.end,r.forEach(function(e){n[e<0?~e:e]=1}),o.push(r)}}return t.forEach(function(n,i){var r,o=e.arcs[n<0?~n:n];o.length<3&&!o[1][0]&&!o[1][1]&&(r=t[++a],t[a]=n,t[i]=r)}),t.forEach(function(t){var n,o,a=function(t){var n,i=e.arcs[t<0?~t:t],r=i[0];e.transform?(n=[0,0],i.forEach(function(e){n[0]+=e[0],n[1]+=e[1]})):n=i[i.length-1];return t<0?[n,r]:[r,n]}(t),s=a[0],l=a[1];if(n=r[s])if(delete r[n.end],n.push(t),n.end=l,o=i[l]){delete i[o.start];var c=o===n?n:n.concat(o);i[c.start=n.start]=r[c.end=o.end]=c}else i[n.start]=r[n.end]=n;else if(n=i[l])if(delete i[n.start],n.unshift(t),n.start=s,o=r[s]){delete r[o.end];var d=o===n?n:o.concat(n);i[d.start=o.start]=r[d.end=n.end]=d}else i[n.start]=r[n.end]=n;else i[(n=[t]).start=s]=r[n.end=l]=n}),s(r,i),s(i,r),t.forEach(function(e){n[e<0?~e:e]||o.push([e])}),o},u=function(e){return c(e,f.apply(this,arguments))};function f(e,t,n){var i,r,o;if(arguments.length>1)i=function(e,t,n){var i,r=[],o=[];function a(e){var t=e<0?~e:e;(o[t]||(o[t]=[])).push({i:e,g:i})}function s(e){e.forEach(a)}function l(e){e.forEach(s)}return function e(t){switch(i=t,t.type){case"GeometryCollection":t.geometries.forEach(e);break;case"LineString":s(t.arcs);break;case"MultiLineString":case"Polygon":l(t.arcs);break;case"MultiPolygon":!function(e){e.forEach(l)}(t.arcs)}}(t),o.forEach(null==n?function(e){r.push(e[0].i)}:function(e){n(e[0].g,e[e.length-1].g)&&r.push(e[0].i)}),r}(0,t,n);else for(r=0,i=new Array(o=e.arcs.length);r<o;++r)i[r]=r;return{type:"MultiLineString",arcs:d(e,i)}}var h=function(e){return c(e,p.apply(this,arguments))};function p(e,t){var n={},i=[],r=[];function o(e){e.forEach(function(t){t.forEach(function(t){(n[t=t<0?~t:t]||(n[t]=[])).push(e)})}),i.push(e)}function a(t){return function(e){for(var t,n=-1,i=e.length,r=e[i-1],o=0;++n<i;)t=r,r=e[n],o+=t[0]*r[1]-t[1]*r[0];return Math.abs(o)}(c(e,{type:"Polygon",arcs:[t]}).coordinates[0])}return t.forEach(function e(t){switch(t.type){case"GeometryCollection":t.geometries.forEach(e);break;case"Polygon":o(t.arcs);break;case"MultiPolygon":t.arcs.forEach(o)}}),i.forEach(function(e){if(!e._){var t=[],i=[e];for(e._=1,r.push(t);e=i.pop();)t.push(e),e.forEach(function(e){e.forEach(function(e){n[e<0?~e:e].forEach(function(e){e._||(e._=1,i.push(e))})})})}}),i.forEach(function(e){delete e._}),{type:"MultiPolygon",arcs:r.map(function(t){var i,r=[];if(t.forEach(function(e){e.forEach(function(e){e.forEach(function(e){n[e<0?~e:e].length<2&&r.push(e)})})}),(i=(r=d(e,r)).length)>1)for(var o,s,l=1,c=a(r[0]);l<i;++l)(o=a(r[l]))>c&&(s=r[0],r[0]=r[l],r[l]=s,c=o);return r})}}var m=function(e,t){for(var n=0,i=e.length;n<i;){var r=n+i>>>1;e[r]<t?n=r+1:i=r}return n},g=function(e){var t={},n=e.map(function(){return[]});function i(e,n){e.forEach(function(e){e<0&&(e=~e);var i=t[e];i?i.push(n):t[e]=[n]})}function r(e,t){e.forEach(function(e){i(e,t)})}var o={LineString:i,MultiLineString:r,Polygon:r,MultiPolygon:function(e,t){e.forEach(function(e){r(e,t)})}};for(var a in e.forEach(function e(t,n){"GeometryCollection"===t.type?t.geometries.forEach(function(t){e(t,n)}):t.type in o&&o[t.type](t.arcs,n)}),t)for(var s=t[a],l=s.length,c=0;c<l;++c)for(var d=c+1;d<l;++d){var u,f=s[c],h=s[d];(u=n[f])[a=m(u,h)]!==h&&u.splice(a,0,h),(u=n[h])[a=m(u,f)]!==f&&u.splice(a,0,f)}return n},y=function(e){if(null==e)return i;var t,n,r=e.scale[0],o=e.scale[1],a=e.translate[0],s=e.translate[1];return function(e,i){i||(t=n=0);var l=2,c=e.length,d=new Array(c),u=Math.round((e[0]-a)/r),f=Math.round((e[1]-s)/o);for(d[0]=u-t,t=u,d[1]=f-n,n=f;l<c;)d[l]=e[l],++l;return d}},_=function(e,t){if(e.transform)throw new Error("already quantized");if(t&&t.scale)l=e.bbox;else{if(!((n=Math.floor(t))>=2))throw new Error("n must be ≥2");var n,i=(l=e.bbox||o(e))[0],r=l[1],a=l[2],s=l[3];t={scale:[a-i?(a-i)/(n-1):1,s-r?(s-r)/(n-1):1],translate:[i,r]}}var l,c,d=y(t),u=e.objects,f={};function h(e){return d(e)}function p(e){var t;switch(e.type){case"GeometryCollection":t={type:"GeometryCollection",geometries:e.geometries.map(p)};break;case"Point":t={type:"Point",coordinates:h(e.coordinates)};break;case"MultiPoint":t={type:"MultiPoint",coordinates:e.coordinates.map(h)};break;default:return e}return null!=e.id&&(t.id=e.id),null!=e.bbox&&(t.bbox=e.bbox),null!=e.properties&&(t.properties=e.properties),t}for(c in u)f[c]=p(u[c]);return{type:"Topology",bbox:l,transform:t,objects:f,arcs:e.arcs.map(function(e){var t,n=0,i=1,r=e.length,o=new Array(r);for(o[0]=d(e[0],0);++n<r;)((t=d(e[n],n))[0]||t[1])&&(o[i++]=t);return 1===i&&(o[i++]=[0,0]),o.length=i,o})}};n.d(t,"bbox",function(){return o}),n.d(t,"feature",function(){return s}),n.d(t,"mesh",function(){return u}),n.d(t,"meshArcs",function(){return f}),n.d(t,"merge",function(){return h}),n.d(t,"mergeArcs",function(){return p}),n.d(t,"neighbors",function(){return g}),n.d(t,"quantize",function(){return _}),n.d(t,"transform",function(){return r}),n.d(t,"untransform",function(){return y})}]);